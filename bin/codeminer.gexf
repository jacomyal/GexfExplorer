<?xml version="1.0" encoding="UTF-8"?>
<gexf xmlns="http://www.gephi.org/gexf" xmlns:viz="http://www.gephi.org/gexf/viz">
<graph type="static">
<attributes class="node" type="static">
<attribute id="0" title="type" type="string"/>
<attribute id="1" title="codelines" type="integer"/>
<attribute id="2" title="modifier" type="string"/>
<attribute id="3" title="comment" type="string"/>
</attributes>
<nodes>
<node id="0" label="P_EXPORT_TYPE_JAVA_METHOD">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-56.289516" y="214.51315" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="1" label="createList(String[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-30.630028" y="266.4743" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Combines the given list of items into a single string.&#10; This method is the converse of &lt;code&gt;parseString&lt;/code&gt;. &#10; &lt;p&gt;&#10; Subclasses must implement this method.&#10; &lt;/p&gt;&#10;&#10; @param items the list of items&#10; @return the combined string&#10; @see #parseString&#10; his method.&#10; &lt;/p&gt;&#10;&#10; @param items the list of items"/>
</attvalues>
</node>
<node id="2" label="parserJob">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-203.37448" y="-5.0833144" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="3" label="stackElement">
<viz:color b="162" g="162" r="24"/>
<viz:position x="273.16998" y="250.09683" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="4" label="DEFAULT_SEPERATOR">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-36.455845" y="277.46918" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private static final"/>
</attvalues>
</node>
<node id="5" label="resolveRessource(IStructuredSelection)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-314.241" y="-159.73984" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Cette fonction permet a partir d'une selection du type&#13; {@link IStructuredSelection} d'obtenir l'objet {@link IResource}&#13; corespondant.&#13; &#13; @param selection&#13; @return l'objet IRessource selectioner, si aucune ressource n'est&#13;         selectionner la fonction retourne null&#13;  IRessource selectioner, si"/>
</attvalues>
</node>
<node id="6" label="addHerit(String, IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="252.0932" y="-84.80528" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="7" label="checkPackagesDependancies()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="238.99629" y="-254.48267" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@return packages with deprecated dependancies"/>
</attvalues>
</node>
<node id="8" label="createContents(Composite)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-395.79608" y="6.3199325" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="The &lt;code&gt;Dialog&lt;/code&gt; implementation of this &lt;code&gt;Window&lt;/code&gt;&#10; method creates and lays out the top level composite for the dialog, and&#10; determines the appropriate horizontal and vertical dialog units based on&#10; the font size. It then calls the &lt;code&gt;createDialogArea&lt;/code&gt; and&#10; &lt;code&gt;createButtonBar&lt;/code&gt; methods to create the dialog area and&#10; button bar, respectively. Overriding &lt;code&gt;createDialogArea&lt;/code&gt; and&#10; &lt;code&gt;createButtonBar&lt;/code&gt; are recommended rather than overriding&#10; this method.&#10; Area&lt;/code&gt; and&#10; &lt;code&gt;createButtonBar&lt;/code&gt; are recommended rather than overriding&#10; this me"/>
</attvalues>
</node>
<node id="9" label="getImplements(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="108.64435" y="-208.77284" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="10" label="childReferences">
<viz:color b="162" g="162" r="24"/>
<viz:position x="241.83865" y="-250.2224" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
</attvalues>
</node>
<node id="11" label="StdWizardAnalysis(IProject)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-310.49625" y="155.2073" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="12" label="elemIDs">
<viz:color b="162" g="162" r="24"/>
<viz:position x="225.02504" y="-255.12001" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="13" label="nextChild(EnumState)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="311.2065" y="266.25314" z="0.0"/>
<viz:size value="2.782688"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="28"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="14" label="isFinished()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-262.83423" y="-69.5502" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public abstract"/>
</attvalues>
</node>
<node id="15" label="visit(SuperConstructorInvocation)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="282.55356" y="-78.44134" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Visits the given type-specific AST node.&#10; &lt;p&gt;&#10; The default implementation does nothing and return true.&#10; Subclasses may reimplement.&#10; &lt;/p&gt;&#10;&#10; @param node the node to visit&#10; @return &lt;code&gt;true&lt;/code&gt; if the children of this node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node should&#10; be skipped&#10; is node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node"/>
</attvalues>
</node>
<node id="16" label="Etape1Test">
<viz:color b="162" g="24" r="93"/>
<viz:position x="256.4558" y="144.96451" z="0.0"/>
<viz:size value="7.4366164"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="113"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@author Palmier"/>
</attvalues>
</node>
<node id="17" label="RESSOURCE_ICON_CODEMINER">
<viz:color b="162" g="162" r="24"/>
<viz:position x="62.632153" y="184.1779" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="18" label="init(IWorkbenchWindow)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-252.9308" y="-214.80003" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="We will cache window object in order to be able to provide parent shell&#10; for the message dialog.&#10; &#10; @see IWorkbenchWindowActionDelegate#init&#10;  able to provide parent shell&#10; for the message dialog."/>
</attvalues>
</node>
<node id="19" label="testNextElement()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="343.27896" y="231.08937" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="20" label="finalizeExport(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-238.62364" y="-12.480976" z="0.0"/>
<viz:size value="2.6274748"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="24"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Finalise les exports de tous les modules. Si l'export d'un module echoue&#13; les finalisations restantes ne sont pas effectuees.&#13; &#13; @param exportModules&#13;            liste des modules a exporter&#13; @return&#13;  ne sont pas effectuees.&#13; &#13; @param exportModules&#13;            liste des modules a exporter&#13; @return"/>
</attvalues>
</node>
<node id="21" label="P_EXPORT_TYPE_JAVA_PACKAGE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-61.317093" y="216.24745" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="22" label="entering(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-152.73793" y="-101.07513" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="23" label="addToChildRefences(String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="257.50894" y="-306.8198" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param gexfPID&#10; @param e&#10; @return"/>
</attvalues>
</node>
<node id="24" label="patternPairValue">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-132.33742" y="180.78609" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="protected static"/>
</attvalues>
</node>
<node id="25" label="SerializedExporter()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="55.103374" y="-129.45885" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="26" label="setProject(IProject)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-303.79056" y="-88.64858" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public abstract"/>
</attvalues>
</node>
<node id="27" label="Activator()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="52.93731" y="185.80885" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The constructor"/>
</attvalues>
</node>
<node id="28" label="run(IAction)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-233.52776" y="-199.92789" z="0.0"/>
<viz:size value="2.4481335"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="19"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The action has been activated. The argument of the method represents the&#10; 'real' action sitting in the workbench UI.&#10; &#10; @see IWorkbenchWindowActionDelegate#run&#10; resents the&#10; 'real' action sitting in"/>
</attvalues>
</node>
<node id="29" label="addImplement(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="228.73329" y="-111.53642" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="3" value="Ajoute un h�ritage � la base. &lt;br&gt;&#13; Il n'y a pas de verification sur idElementSource ni sur idElementHeriter.&#13; idElementSource ou idElementHeriter peut ne pas faire partie de la base&#13; &#13; @param idElementSource&#13; @param idElementTarget&#13; ementHeriter peut ne pas faire partie de la base&#13; &#13; @param idElem"/>
</attvalues>
</node>
<node id="30" label="init()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="210.45532" y="169.48474" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="31" label="LogManager()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="0.9111775" y="-30.213037" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="32" label="canFinish()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-239.12157" y="-6.152284" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="33" label="_codeData">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-24.225819" y="-369.5067" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="34" label="getAllTypes()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-63.816574" y="145.03725" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="35" label="setCodeData(ICodeData)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-66.94662" y="7.4145803" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="36" label="log">
<viz:color b="162" g="162" r="24"/>
<viz:position x="247.07918" y="-249.83008" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="37" label="testAddHerit()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-13.85845" y="-356.48264" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="38" label="IProjectInfo">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-79.378716" y="73.92109" z="0.0"/>
<viz:size value="2.7038662"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="26"/>
<attvalue id="2" value="public interface"/>
<attvalue id="3" value="This class get main informations about the parser and allow to create an&#13; instance of this parser.&#13; &#13; @author J�r�my Palmier&#13; &#13; ions about the parser and allow to create an&#13; instance of this parser."/>
</attvalues>
</node>
<node id="39" label="edgesReferences">
<viz:color b="162" g="162" r="24"/>
<viz:position x="234.10121" y="-255.92975" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
</attvalues>
</node>
<node id="40" label="element">
<viz:color b="162" g="162" r="24"/>
<viz:position x="292.38095" y="301.51974" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="41" label="testHasMoreElements()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="348.74005" y="238.00145" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="42" label="data_Repository">
<viz:color b="162" g="162" r="24"/>
<viz:position x="217.45195" y="22.661875" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="43" label="removeEventListener(CodeDataChangesListener)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="201.00641" y="-191.42606" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
</attvalues>
</node>
<node id="44" label="dispose()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-242.70569" y="-197.85217" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="We can use this method to dispose of any system resources we previously&#10; allocated.&#10; &#10; @see IWorkbenchWindowActionDelegate#dispose&#10; e of any system resources we previously&#10; allocated.&#10; &#10; @see IWorkbe"/>
</attvalues>
</node>
<node id="45" label="fillContent()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-321.85214" y="291.99356" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="47" label="addToImplementsRefences(String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="242.44385" y="-309.3678" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param gexfImplID&#10; @param e&#10; @return"/>
</attvalues>
</node>
<node id="48" label="createWriter(IConfigurationElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-133.98903" y="20.44678" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Cree un abstractExporter&#13; &#13; @param configurationElement&#13;            un point d'extension != null&#13; @param exportFormat&#13;            type de format a exporter != null&#13; &#13;  un point d'extension != null&#13; @"/>
</attvalues>
</node>
<node id="49" label="StandardLogger">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-12.99413" y="-3.0554085" z="0.0"/>
<viz:size value="2.9895487"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="33"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Se comporte comme le Logger de Java sauf pour les messages de niveau SEVERE,&#10; dont l'affichage sont forces sur System.out.&#10; &#10; @author Sebastien Heymann&#10; &#10; ges de niveau SEVERE,&#10; dont l'affichage sont"/>
</attvalues>
</node>
<node id="50" label="progress_monitor">
<viz:color b="162" g="162" r="24"/>
<viz:position x="272.19724" y="234.6629" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="51" label="visit(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="203.77939" y="-24.153618" z="0.0"/>
<viz:size value="4.0339336"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="55"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="52" label="patternStringMapName">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-127.342804" y="190.09418" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="protected static"/>
</attvalues>
</node>
<node id="53" label="createList(String[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="53.849827" y="359.40408" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Combines the given list of items into a single string.&#10; This method is the converse of &lt;code&gt;parseString&lt;/code&gt;. &#10; &lt;p&gt;&#10; Subclasses must implement this method.&#10; &lt;/p&gt;&#10;&#10; @param items the list of items&#10; @return the combined string&#10; @see #parseString&#10; his method.&#10; &lt;/p&gt;&#10;&#10; @param items the list of items"/>
</attvalues>
</node>
<node id="54" label="listIdExporter">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-296.09033" y="154.0877" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="55" label="getType(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="175.86818" y="-20.23374" z="0.0"/>
<viz:size value="2.381536"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="17"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="56" label="P_EXLUDED_JAR_LIBRARY">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-84.27169" y="173.45999" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="57" label="IInfoElement&lt;T&gt;">
<viz:color b="162" g="24" r="93"/>
<viz:position x="123.36344" y="-222.14725" z="0.0"/>
<viz:size value="4.5108724"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="64"/>
<attvalue id="2" value="public interface"/>
<attvalue id="3" value="L'interface IInfoElement contient les fonctions permettant d'obtenir les&#13; informations ou les relations concernant un element.&#13; &lt;p&gt;&#13; Chaque element est defini par une valeur unique du type T. T doit donc avoir&#13; defini une fonction equal(Object a)&#13; &lt;/p&gt;&#13; &lt;p&gt;&#13; &lt;i&gt; Ces informations sont les proprietes de l'elements ou, pour une&#13; dependance entre deux elements, les proprietes que porte cette dependance.&#13; &#13; &lt;/p&gt;&#13; &#13; @author Sebastien Heymann et Jeremy Palmier&#13; &#13; @param &lt;T&gt;&#13; &#13; @version 1.03 la fonction getDependsProperties est modifier, la structure&#13;          Pair est utilis�es en argument&#13; &#13; @since 1.00&#13; pendsProperties est modifier, la structure&#13;          Pair est utilis�es en argument&#13; &#13; @sin"/>
</attvalues>
</node>
<node id="58" label="showEditorsPulldownMenu">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-315.43106" y="-163.87148" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="59" label="outputNameBase">
<viz:color b="162" g="162" r="24"/>
<viz:position x="23.642525" y="-161.56824" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="60" label="serialVersionUID">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-72.32531" y="-314.559" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="private static final"/>
<attvalue id="3" value="Numero de serialisation"/>
</attvalues>
</node>
<node id="61" label="ATTR_RELATIONTYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="223.1283" y="-250.38957" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private final"/>
</attvalues>
</node>
<node id="62" label="P_DEBUG_MODE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-109.58645" y="252.7001" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="63" label="createGraphEdge(Integer, String, String, String, String, String, String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="273.0342" y="-286.3733" z="0.0"/>
<viz:size value="2.9471123"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="32"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param id&#10; @param source&#10; @param target&#10; @param type&#10; @param card&#10; @param relationtype&#10; @param stepfrom&#10; @param stepto&#10; @return&#10; ram target&#10; @param type&#10; @param card&#10; @param relationtype&#10; @param st"/>
</attvalues>
</node>
<node id="64" label="ResultAreaDialog(Shell, IStatus, ArrayList&lt;IStatus&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-385.19977" y="-10.812172" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="65" label="contain(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-54.040634" y="-372.8187" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@return retourne vrai si idElement est dans la table des elements, faux&#13;         sinon"/>
</attvalues>
</node>
<node id="66" label="addChooseProject(Composite, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-309.09088" y="320.4519" z="0.0"/>
<viz:size value="4.5108724"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="64"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="67" label="StdAnalyseWithPreference()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-227.05449" y="1.3427436" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="68" label="combo_list_parser">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-273.22852" y="256.83905" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="69" label="getComment(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="121.48744" y="-14.915132" z="0.0"/>
<viz:size value="2.8229685"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="29"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne le commentaire associer aux IJavaElement : IMember ayant un&#13; commentaire javadoc"/>
</attvalues>
</node>
<node id="70" label="ExtensionStructure">
<viz:color b="162" g="24" r="93"/>
<viz:position x="39.1634" y="336.6364" z="0.0"/>
<viz:size value="2.381536"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="17"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="71" label="getExportableTypes()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-70.817406" y="141.52087" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="72" label="dispose()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-400.9979" y="32.77681" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Disposes of this content provider.  &#10; This is called by the viewer when it is disposed.&#10; &lt;p&gt;&#10; The viewer should not be updated during this call, as it is in the process&#10; of being disposed.&#10; &lt;/p&gt;&#10; e v"/>
</attvalues>
</node>
<node id="73" label="getDeletedElementInElement(ICodeData, ICodeData, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="135.59032" y="-239.20503" z="0.0"/>
<viz:size value="2.7038662"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="26"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Calcul la liste des éléments qui sont les fils de idElementParent qui ont&#13; été supprimer de CodeData entrre la version old et la nouvelle&#13; &#13; @param oldCodeData&#13; @param newCodeData&#13; @param idElementParent&#13; @return&#13; sion old et la nouvelle&#13; &#13; @param oldCodeData&#13; @param newCodeData&#13; @param idElementPa"/>
</attvalues>
</node>
<node id="74" label="logrb(Level, String, String, String, String, Throwable)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-145.13925" y="-116.15419" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="75" label="createFieldEditors()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="55.631927" y="148.95561" z="0.0"/>
<viz:size value="2.4481335"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="19"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Creates the page's field editors.&#10; &lt;p&gt;&#10; The default implementation of this framework method&#10; does nothing. Subclass must implement this method to&#10; create the field editors.&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; Subclasses should call &lt;code&gt;getFieldEditorParent&lt;/code&gt;&#10; to obtain the parent control for each field editor.&#10; This same parent should not be used for more than&#10; one editor as the parent may change for each field&#10; editor depending on the layout style of the page&#10; &lt;/p&gt;&#10; or as the parent may change for each field"/>
</attvalues>
</node>
<node id="76" label="dispatchEvent(CodeDataChangesEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="190.43985" y="-141.68208" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="3" value="Envoie un evenement a� tous les listener inscrit via la fonction&#13; {@link IWriteElement#addEventListener(CodeDataChangesListener)}&#13; &#13; @param evt&#13; rit via la fonction&#13; {@link IWriteElement#addEventList"/>
</attvalues>
</node>
<node id="77" label="getKey(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="152.61922" y="30.315414" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne une cle unique d'identification pour un IJavaElements."/>
</attvalues>
</node>
<node id="78" label="dispose()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="81.10198" y="324.58737" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Disposes of this label provider.  When a label provider is&#10; attached to a viewer, the viewer will automatically call&#10; this method when the viewer is being closed.  When label providers&#10; are used outside of the context of a viewer, it is the client's&#10; responsibility to ensure that this method is called when the&#10; provider is no longer needed.&#10; ent's&#10; responsibility to ensure that this method is cal"/>
</attvalues>
</node>
<node id="79" label="selectProject_UI()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-184.54123" y="18.057295" z="0.0"/>
<viz:size value="2.9471123"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="32"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="80" label="addComboParser(Composite, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-269.0874" y="312.74713" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="81" label="createDialogArea(Composite)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-290.84528" y="316.5964" z="0.0"/>
<viz:size value="3.2091012"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="38"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="82" label="testGetCommentaireAbsent()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-49.589985" y="-395.06134" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="83" label="ICodeMinerParser">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-9.719503" y="28.548204" z="0.0"/>
<viz:size value="2.6274748"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="24"/>
<attvalue id="2" value="public interface"/>
<attvalue id="3" value="Interface de module de parsing.&#13; &#13; @author Sebastien Heymann et Jeremy Palmier"/>
</attvalues>
</node>
<node id="84" label="launchAnalyze()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-152.32677" y="-20.596924" z="0.0"/>
<viz:size value="2.665358"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="25"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="prerequis :&#13; &lt;ul&gt;&#13; &lt;li&gt; {@link StdAnalyse#data_repository} != null&lt;/li&gt;&#13; &lt;li&gt; {@link StdAnalyse#listExporter} != null&lt;/li&gt;&#13; &lt;li&gt; {@link StdAnalyse#parserJob} != null&lt;/li&gt;&#13; &lt;li&gt; {@link StdAnalyse#listType} != null&lt;/li&gt;&#13; &lt;li&gt; {@link StdAnalyse#currentMonitor} != null&lt;/li&gt;&#13; &lt;/ul&gt;&#13; &#13; @return&#13; lyse#list"/>
</attvalues>
</node>
<node id="85" label="init()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="111.43093" y="-114.49089" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Must be called before finalizeExport().&#13; &#13; @return"/>
</attvalues>
</node>
<node id="86" label="getKey(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-51.60863" y="-300.96793" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="87" label="addChooseOutput(Composite, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-262.2151" y="294.0725" z="0.0"/>
<viz:size value="2.9895487"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="33"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="88" label="EnumFileContentJava(ITreeContentProvider)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="234.04825" y="182.00659" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="89" label="setCodeData(ICodeData)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="203.83093" y="130.99452" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="90" label="_dicoHerit">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-67.88316" y="-312.01712" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="&lt;li&gt;key = nom de l'element &lt;li&gt;value = liste des elements herites"/>
</attvalues>
</node>
<node id="91" label="result">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-197.95995" y="-9.362128" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="92" label="iterator()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-68.65575" y="-301.33316" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="93" label="element">
<viz:color b="162" g="162" r="24"/>
<viz:position x="276.5357" y="238.71962" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="94" label="new Runnable() {...}">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-346.61795" y="-196.20421" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="5"/>
</attvalues>
</node>
<node id="95" label="setSource(IResource)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-66.16183" y="13.331407" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="96" label="textExtension">
<viz:color b="162" g="162" r="24"/>
<viz:position x="27.572187" y="-105.43857" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public final"/>
</attvalues>
</node>
<node id="97" label="log(Level, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-122.86656" y="-89.87482" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="98" label="getStartArgumentName(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-127.652824" y="178.15344" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="99" label="addDependency(String, IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="231.06311" y="-89.632286" z="0.0"/>
<viz:size value="2.8229685"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="29"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Permet une dependance fonction � la fonction en cours&#13; &#13; @param method"/>
</attvalues>
</node>
<node id="100" label="Constants">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-63.4433" y="223.3074" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Constant definitions for plug-in preferences"/>
</attvalues>
</node>
<node id="101" label="preference">
<viz:color b="162" g="162" r="24"/>
<viz:position x="152.52274" y="132.67744" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="102" label="FILE_TYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="69.89281" y="82.35085" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="103" label="addHerit(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="230.05302" y="-119.10641" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="3" value="Ajoute un h�ritage � la base. &lt;br&gt;&#13; Il n'y a pas de verification sur idElementSource ni sur idElementHeriter.&#13; idElementSource ou idElementHeriter peut ne pas faire partie de la base&#13; &#13; @param idElementSource&#13; @param idElementHeriter&#13; mentHeriter peut ne pas faire partie de la base&#13; &#13; @param idElem"/>
</attvalues>
</node>
<node id="104" label="getChangedElement(ICodeData, ICodeData)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="129.82005" y="-244.45071" z="0.0"/>
<viz:size value="5.181593"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="76"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="105" label="createParser()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-114.66966" y="62.56365" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="106" label="nextElement(boolean, IElementVisitor&lt;Object&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="313.4438" y="215.62471" z="0.0"/>
<viz:size value="2.8638089"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="30"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="107" label="new MouseAdapter() {...}">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-320.08112" y="323.67877" z="0.0"/>
<viz:size value="2.665358"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="25"/>
</attvalues>
</node>
<node id="108" label="source">
<viz:color b="162" g="162" r="24"/>
<viz:position x="159.75937" y="113.722855" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="109" label="Page()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="41.26783" y="130.85452" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="110" label="testEtape1()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="245.24634" y="136.01396" z="0.0"/>
<viz:size value="2.665358"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="25"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Test method for {@link deprecated.Etape1#Etape1()}."/>
</attvalues>
</node>
<node id="111" label="P_EXCLUDED_INTERN_CALL">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-93.67448" y="168.50443" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="112" label="log(Level, String, Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-133.33087" y="-84.67629" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="113" label="PreferenceUtil">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-221.06079" y="164.45496" z="0.0"/>
<viz:size value="8.540385"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="130"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="114" label="testSetRootElement()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="346.9984" y="191.22067" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="115" label="addMethodDependency(String, IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="280.4184" y="-85.634125" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="116" label="contain(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="142.10541" y="-217.29622" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="117" label="Page">
<viz:color b="162" g="24" r="93"/>
<viz:position x="49.64827" y="150.66206" z="0.0"/>
<viz:size value="3.0759296"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="35"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="118" label="addHerit(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-4.3211193" y="-335.8607" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Ajoute un h�ritage � la base. &lt;br&gt;&#13; Il n'y a pas de verification sur idElementSource ni sur idElementHeriter.&#13; idElementSource ou idElementHeriter peut ne pas faire partie de la base&#13; &#13; @param idElementSource&#13; @param idElementHeriter&#13; mentHeriter peut ne pas faire partie de la base&#13; &#13; @param idElem"/>
</attvalues>
</node>
<node id="119" label="inputChanged(Viewer, Object, Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="366.40414" y="212.85384" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Notifies this content provider that the given viewer's input&#10; has been switched to a different element.&#10; &lt;p&gt;&#10; A typical use for this method is registering the content provider as a listener&#10; to changes on the new input (using model-specific means), and deregistering the viewer &#10; from the old input. In response to these change notifications, the content provider&#10; should update the viewer (see the add, remove, update and refresh methods on the viewers).&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; The viewer should not be updated during this call, as it might be in the process&#10; of being disposed.&#10; &lt;/p&gt;&#10;&#10; @param viewer the viewer&#10; @param oldInput the old input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   did not previously have an input&#10; @param newInput the new input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   does not have an input&#10; param newInput the new input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   does not"/>
</attvalues>
</node>
<node id="120" label="implementsReferences">
<viz:color b="162" g="162" r="24"/>
<viz:position x="216.62968" y="-268.88248" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
</attvalues>
</node>
<node id="121" label="setParameter(String[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="86.2994" y="97.47463" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Passe les parametres globaux aux fragments de plugin."/>
</attvalues>
</node>
<node id="122" label="_currentParser">
<viz:color b="162" g="162" r="24"/>
<viz:position x="131.21227" y="-10.085011" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="123" label="getConfigurationElement(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-88.65717" y="16.467499" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="124" label="IElementVisitor&lt;T&gt;">
<viz:color b="162" g="24" r="93"/>
<viz:position x="270.91794" y="89.142075" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public interface"/>
</attvalues>
</node>
<node id="125" label="P_EXPORTDIRECTORY">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-95.91393" y="258.52066" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="126" label="addExportFormat()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="6.7070513" y="319.94186" z="0.0"/>
<viz:size value="2.9895487"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="33"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Ajoute au préférence un menu déroulant permettant de choisir un des&#10; différents formats d'export"/>
</attvalues>
</node>
<node id="127" label="doLoadDefault()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="34.80481" y="352.99792" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Initializes this field editor with the default preference value from&#10; the preference store.&#10; &lt;p&gt;&#10; Subclasses must implement this method to properly initialize &#10; the field editor.&#10; &lt;/p&gt;&#10; tore.&#10; &lt;p&gt;&#10; S"/>
</attvalues>
</node>
<node id="128" label="build(ICodeData, long, Collection&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="236.25955" y="-328.807" z="0.0"/>
<viz:size value="7.055599"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="107"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="Insert new data in the document.&#10; &#10; @param data&#10; @param changedElements"/>
</attvalues>
</node>
<node id="129" label="ExtensionListEditorControl(String, String, Composite)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="46.503445" y="351.9765" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="130" label="getLabels(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-90.297264" y="4.581728" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Liste des noms d'export apparaissant dans le registre des extensions."/>
</attvalues>
</node>
<node id="131" label="addElement(String, String, Map&lt;String, Object&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="201.4136" y="-116.46725" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="3" value="@param idElementSource&#13; @param idType&#13; @param properties&#13; &#13;            &lt;pre&gt;&#13; Ajoute un element avec pour identifiant idElementSource et pour type idType.&#13; &#9; Le dictionaire properties contient des proprietes aditionelles associees a l'element,&#13; &#9; les proprietes libelle, type, et commentaire.&#13; &lt;/pre&gt;&#13; ietes aditionelles associees a l'element,&#13; &#9; les proprietes libelle, type, et commentaire.&#13; &lt;/pre"/>
</attvalues>
</node>
<node id="132" label="getListControl(Composite)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="35.614975" y="392.32803" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns this field editor's list control.&#10;&#10; @param parent the parent control&#10; @return the list control&#10; rns this field editor's list control.&#10;&#10; @param parent the parent control&#10; @return the list cont"/>
</attvalues>
</node>
<node id="133" label="rebuildPackagesDependancies()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="267.52994" y="-297.5408" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="134" label="postErrorMessage(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-338.9287" y="-134.61331" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="135" label="visit(FieldAccess)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="301.8471" y="-52.2073" z="0.0"/>
<viz:size value="3.119851"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="36"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="&lt;ul&gt;&#13; ;&#13; &#13; Note that there are several kinds of expressions that resemble field&#13; access expressions: qualified names, this expressions, and super field&#13; access expressions. The following guidelines help with correct usage:&#13; &lt;li&gt;An expression like &quot;foo.this&quot; can only be represented as a this&#13; expression (ThisExpression) containing a simple name. &quot;this&quot; is a&#13; keyword, and therefore invalid as an identifier.&lt;/li&gt;&#13; &lt;li&gt;An expression like &quot;this.foo&quot; can only be represented as a field&#13; access expression (FieldAccess) containing a this expression and a simple&#13; name. Again, this is because &quot;this&quot; is a keyword, and therefore invalid&#13; as an identifier.&lt;/li&gt;&#13; &lt;li&gt;An expression with &quot;super&quot; can only be represented as a super field&#13; access expression (SuperFieldAccess). &quot;super&quot; is a also keyword, and&#13; therefore invalid as an identifier.&lt;/li&gt;&#13; &lt;li&gt;An expression like &quot;foo.bar&quot; can be represented either as a qualified&#13; name (QualifiedName) or as a field access expression (FieldAccess)&#13; containing simple names. Either is acceptable, and there is no way to&#13; choose between them without information about what the names resolve to&#13; (ASTParser may return either).&lt;/li&gt;&#13; &lt;li&gt;Other expressions ending in an identifier, such as &quot;foo().bar&quot; can&#13; only be represented as field access expressions (FieldAccess).&#13;&lt;/ul&gt;&#13; ier, such as &quot;foo().bar&quot; can&#13; only be represented as field access expressions (FieldAccess)"/>
</attvalues>
</node>
<node id="137" label="isStarted()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-1.8276695" y="31.710176" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="138" label="outputPath">
<viz:color b="162" g="162" r="24"/>
<viz:position x="18.889544" y="-165.90846" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="139" label="_dicoParents">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-68.26951" y="-306.58917" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="&lt;li&gt;key = nom de l'element &lt;li&gt;value = nom de l'element parent"/>
</attvalues>
</node>
<node id="140" label="updateImplementsLink(String, String, String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="263.39136" y="-313.11435" z="0.0"/>
<viz:size value="3.7801292"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="50"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param n"/>
</attvalues>
</node>
<node id="141" label="deleteElement(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="273.5561" y="-315.868" z="0.0"/>
<viz:size value="4.0856957"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="56"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param elemID&#10; @param revision"/>
</attvalues>
</node>
<node id="142" label="open(IPath)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-31.895052" y="71.046425" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Launches this external editor to edit the file at the given &#10; location in the local file system.&#10;&#10; @param file the local file system path of the file to edit&#10;  &#10; location in the local file system."/>
</attvalues>
</node>
<node id="143" label="dispose()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="366.47476" y="201.6494" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Disposes of this content provider.  &#10; This is called by the viewer when it is disposed.&#10; &lt;p&gt;&#10; The viewer should not be updated during this call, as it is in the process&#10; of being disposed.&#10; &lt;/p&gt;&#10; e v"/>
</attvalues>
</node>
<node id="144" label="IWriteElement&lt;T&gt;">
<viz:color b="162" g="24" r="93"/>
<viz:position x="201.7052" y="-149.31606" z="0.0"/>
<viz:size value="6.9297223"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="105"/>
<attvalue id="2" value="public interface"/>
<attvalue id="3" value="@author Palmier&#13; &#13; @param &lt;T&gt;"/>
</attvalues>
</node>
<node id="145" label="searchWriter(ArrayList&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-147.0092" y="25.775604" z="0.0"/>
<viz:size value="2.8229685"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="29"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Recherche un exporteur parmis les fragments de plugin disponibles.&#13; &#13; @throws Exception"/>
</attvalues>
</node>
<node id="146" label="TestEnumFileContent">
<viz:color b="162" g="24" r="93"/>
<viz:position x="351.49905" y="209.85277" z="0.0"/>
<viz:size value="9.003689"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="137"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="147" label="getExportDirectory()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-245.57089" y="203.8031" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Retourne le repertoire d'exportation.&#13; &#13; @see MainConstants#P_EXPORTDIRECTORY"/>
</attvalues>
</node>
<node id="148" label="P_EXPORT_TYPE_JAVA_CLASS">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-64.6225" y="212.06285" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="150" label="addElement(String, String, Map&lt;String, Object&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-39.8249" y="-378.3008" z="0.0"/>
<viz:size value="2.381536"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="17"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Ajoute un element avec pour identifiant idElementSource et pour type&#13; idType. Le dictionaire properties contient des proprietes aditionelles&#13; associees a l'element, les proprietes libelle, type, et commentaire.&#13;  des proprietes aditionelles&#13; associees a l'element, les proprietes libelle, type, et c"/>
</attvalues>
</node>
<node id="152" label="setDynamicMode(boolean)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="23.66546" y="-68.20789" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="3" value="Affecte le mode de l'exporteur, par defaut a faux.&#13; &#13; @param isDynamic"/>
</attvalues>
</node>
<node id="153" label="DEFAULT_SEPARATOR">
<viz:color b="162" g="162" r="24"/>
<viz:position x="35.66804" y="358.2091" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="154" label="endVisit(MethodDeclaration)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="277.5828" y="-35.038784" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="End of visit the given type-specific AST node.&#10; &lt;p&gt;&#10; The default implementation does nothing. Subclasses may reimplement.&#10; &lt;/p&gt;&#10;&#10; @param node the node to visit&#10; ult implementation does nothing. Subcl"/>
</attvalues>
</node>
<node id="155" label="run(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="67.8609" y="89.122925" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="public abstract"/>
<attvalue id="3" value="Executes this job.  Returns the result of the execution.&#10; &lt;p&gt;&#10; The provided monitor can be used to report progress and respond to &#10; cancellation.  If the progress monitor has been canceled, the job&#10; should finish its execution at the earliest convenience and return a result&#10; status of severity {@link IStatus#CANCEL}.  The singleton&#10; cancel status {@link Status#CANCEL_STATUS} can be used for&#10; this purpose.  The monitor is only valid for the duration of the invocation&#10; of this method.&#10; &lt;p&gt;&#10; This method must not be called directly by clients.  Clients should call&#10; &lt;code&gt;schedule&lt;/code&gt;, which will in turn cause this method to be called.&#10; &lt;p&gt;&#10; Jobs can optionally finish their execution asynchronously (in another thread) by &#10; returning a result status of {@link #ASYNC_FINISH}.  Jobs that finish&#10; asynchronously &lt;b&gt;must&lt;/b&gt; specify the execution thread by calling&#10; &lt;code&gt;setThread&lt;/code&gt;, and must indicate when they are finished by calling&#10; the method &lt;code&gt;done&lt;/code&gt;.&#10; &#10; @param monitor the monitor to be used for reporting progress and&#10; responding to cancelation. The monitor is never &lt;code&gt;null&lt;/code&gt;&#10; @return resulting status of the run. The result must not be &lt;code&gt;null&lt;/code&gt;&#10; @see #ASYNC_FINISH&#10; @see #done(IStatus)&#10; atus of the run. The result must not be &lt;code&gt;null&lt;/code&gt;&#10; @see #A"/>
</attvalues>
</node>
<node id="156" label="onChange(CodeDataChangesEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="22.33651" y="-108.71286" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="157" label="EnumFileContent&lt;T&gt;">
<viz:color b="162" g="24" r="93"/>
<viz:position x="296.55588" y="247.39749" z="0.0"/>
<viz:size value="13.028106"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="196"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Enumere tous les elements d'un projet Java. Plusieur filtres sont effectues&#13; sur ces elements. &lt;li&gt;1. un filtre sur les types.&#13; &lt;p&gt;&#13; Ce filtre se trouve dans isEnable. Si le type d'un element n'est pas dans les&#13; type à retourner, celui ci ne sera pas retourne. Cependant &lt;b&gt;les fils de cet&#13; element pourront etre analyses&lt;/b&gt;.&#13; &lt;/p&gt;&#13; &lt;/p&gt; &lt;li&gt;1. un filtre sur les éléments exclus.&#13; &lt;p&gt;&#13; Il est possible d'exclure des element en passant au constructeur la liste des&#13; élement exclus. Un element exclu ne sera pas retourne. Au contraire du filtre&#13; sur les types,&lt;b&gt; les fils de l'element exclu ne seront pas analyses&lt;/b&gt;.&#13; &lt;/p&gt;&#13; &#13; @author Sebastien Heymann et Jérémy Palmier&#13; &#13; l'element exclu ne seron"/>
</attvalues>
</node>
<node id="158" label="InfoJavaElement">
<viz:color b="162" g="24" r="93"/>
<viz:position x="146.23495" y="-24.40073" z="0.0"/>
<viz:size value="20.0"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="323"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Implementation de IInfoElement, la classe InfoJavaElement permet d'obtenir&#13; toutes les informations de IInfoElement pour un element java.&#13; &#13; @see ASTParser&#13; @see JavadocContentAccess&#13; @see JavaElementLabels&#13; @author Sebastien Heymann et Jeremy Palmier&#13; &#13; &#13; @see JavadocContentAccess&#13; @see JavaElemen"/>
</attvalues>
</node>
<node id="159" label="PLUGIN_SCENARIO_ATTRIBUTE_LABEL">
<viz:color b="162" g="162" r="24"/>
<viz:position x="53.821987" y="197.38701" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="160" label="dispose()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-317.3468" y="-153.81087" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Disposes this action delegate.  The implementor should unhook any references&#10; to itself so that garbage collection can occur.&#10; te.  The implementor should unhook any references&#10; to itself so that gar"/>
</attvalues>
</node>
<node id="161" label="checkbox_table_exporter">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-269.92804" y="260.2277" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="162" label="Initialiser">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-20.79833" y="122.00989" z="0.0"/>
<viz:size value="2.4825845"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="20"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="163" label="getComment(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-59.124786" y="-382.217" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Si l'element element existe et si l'element a la propriete &quot;commentaire&quot;,&#13; alors la fonction renvoie la valeur de cette propriete, sinon la fonction&#13; renvoie null. Si l'element existe mais qu'il n'a pas la propriete&#13; &quot;commentaire&quot;, alors la fonction getComment() renvoie null.&#13; xiste mais qu'il n'a"/>
</attvalues>
</node>
<node id="164" label="getCodeDataListenners()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-48.174286" y="-285.2316" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="165" label="getHigherParent(String, List&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="105.52811" y="-239.604" z="0.0"/>
<viz:size value="2.4825845"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="20"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Retourne l'identifiant du parent de l'element de niveau le plus proche&#13; qui ne soit pas supprime.&#13; &#13; @param id&#13;            Element identifier&#13; @param elementTypes&#13; @return id&#13; ne soit pas supprime."/>
</attvalues>
</node>
<node id="166" label="Initialiser()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-16.186008" y="118.24573" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="167" label="getIds(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-90.26075" y="20.023697" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Liste des noms d'export apparaissant dans le registre des extensions."/>
</attvalues>
</node>
<node id="168" label="StringLabel">
<viz:color b="162" g="24" r="93"/>
<viz:position x="74.31406" y="334.26956" z="0.0"/>
<viz:size value="2.9051948"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="31"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="169" label="getExportableTypes()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-215.26605" y="150.78156" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Beark!&#13; &#13; @return"/>
</attvalues>
</node>
<node id="170" label="logrb(Level, String, String, String, String, Object[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-144.37068" y="-90.21251" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="171" label="numMax">
<viz:color b="162" g="162" r="24"/>
<viz:position x="283.84436" y="303.82822" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="172" label="warning(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-137.1298" y="-88.202995" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="173" label="CLASS">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-93.22057" y="0.25429705" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected static final"/>
</attvalues>
</node>
<node id="174" label="CodeminerRessourceVisitor">
<viz:color b="162" g="24" r="93"/>
<viz:position x="234.24144" y="30.505775" z="0.0"/>
<viz:size value="17.746592"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="265"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@author Palmier"/>
</attvalues>
</node>
<node id="175" label="testNextChild()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="344.85974" y="245.591" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="176" label="testAccept()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="337.47913" y="197.26143" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="177" label="run(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-173.31596" y="5.4984784" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Methode principale du job, cette methode est executer lors de&#13; {@link Job#schedule()}.&#13; &#13; @see codeminer.api.ui.AbstractScenario#run(org.eclipse.core.runtime.IProgressMonitor)&#13; edule()}.&#13; &#13; @see code"/>
</attvalues>
</node>
<node id="178" label="elements">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-24.082886" y="266.33887" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="179" label="PLUGIN_DATA_EXTENSION_ID">
<viz:color b="162" g="162" r="24"/>
<viz:position x="74.89434" y="185.58546" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="181" label="getCompatibleElement(String, List&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="74.98997" y="-203.48026" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Retourne l'identifiant de l'element si sont type n'est pas destine a etre&#13; supprime, sinon la fonction tente de trouver un parent de idElem qui ne&#13; soit pas a supprimer.&#13; &#13; @param id&#13;            Element identifier&#13; @param elementTypes&#13; @return id&#13; soit pas a supprimer.&#13; &#13; @param id&#13;            Elem"/>
</attvalues>
</node>
<node id="182" label="setContentProvider(ITreeContentProvider)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="268.587" y="244.5903" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="183" label="left">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-49.0166" y="-198.08153" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="184" label="GEXFExporter()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="117.05385" y="-152.20503" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="185" label="DEPENDS_PROPERTIES_ORDERS">
<viz:color b="162" g="162" r="24"/>
<viz:position x="58.029854" y="-238.61475" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="186" label="getDepens(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="114.83311" y="-207.19513" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="187" label="getInstance()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-7.669503" y="-20.085068" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public static synchronized"/>
</attvalues>
</node>
<node id="188" label="MainPage">
<viz:color b="162" g="24" r="93"/>
<viz:position x="4.1529956" y="286.53625" z="0.0"/>
<viz:size value="10.145517"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="154"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@author Palmier"/>
</attvalues>
</node>
<node id="189" label="init()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="242.31505" y="-225.2965" z="0.0"/>
<viz:size value="5.0105333"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="73"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Create the document and its GEXF structure."/>
</attvalues>
</node>
<node id="190" label="throwing(String, String, Throwable)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-118.08479" y="-106.50548" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="191" label="getListTypeParser(IConfigurationElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-129.95699" y="43.65158" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="@param parser&#13; @return"/>
</attvalues>
</node>
<node id="192" label="addToHeritsRefences(String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="226.79112" y="-308.21063" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param gexfHeritID&#10; @param e&#10; @return"/>
</attvalues>
</node>
<node id="193" label="getCodeData()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="228.9029" y="97.561806" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="194" label="targetProject">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-226.0376" y="-43.39664" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="195" label="nodes">
<viz:color b="162" g="162" r="24"/>
<viz:position x="215.58502" y="-259.08243" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="196" label="title">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-263.5941" y="280.7331" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="197" label="launchWizard()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-162.65862" y="26.574802" z="0.0"/>
<viz:size value="4.137778"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="57"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="198" label="idNames">
<viz:color b="162" g="162" r="24"/>
<viz:position x="100.62531" y="-111.734665" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="199" label="list">
<viz:color b="162" g="162" r="24"/>
<viz:position x="40.364113" y="350.9127" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="200" label="getElements(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="383.19955" y="216.40501" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the elements to display in the viewer &#10; when its input is set to the given element. &#10; These elements can be presented as rows in a table, items in a list, etc.&#10; The result is not modified by the viewer.&#10; &lt;p&gt;&#10; &lt;b&gt;NOTE:&lt;/b&gt; For instances where the viewer is displaying a tree&#10; containing a single 'root' element it is still necessary that the&#10; 'input' does not return &lt;i&gt;itself&lt;/i&gt; from this method. This leads&#10; to recursion issues (see bug 9262).&#10; &lt;/p&gt;&#10; @param inputElement the input element&#10; @return the array of elements to display in the viewer&#10; /p&gt;&#10; @param inputElement the input element"/>
</attvalues>
</node>
<node id="201" label="getListTypeExported()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-269.86057" y="224.5145" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="202" label="testAddDepens()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-14.992271" y="-297.95007" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="203" label="enumProject">
<viz:color b="162" g="162" r="24"/>
<viz:position x="156.77727" y="141.27402" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="204" label="getParent(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="101.64542" y="-232.24841" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne l'élément parent contenant l'élément fils sur la relation&#13; contenant/contenue.&#13; &#13; @param elementFils&#13; @return&#13; arent contenant l'élément fils sur la relation&#13; contenant/contenue.&#13; &#13; @param e"/>
</attvalues>
</node>
<node id="205" label="addParent(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-1.3111833" y="-362.29965" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Associates the specified parent with the specified idChild Ajoute le&#13; parent de idElementFils dans le dictionaire des parent.&#13; rent with the specified idChild Ajoute le&#13; parent de idElementFils dans"/>
</attvalues>
</node>
<node id="206" label="getNextPage(IWizardPage)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-284.28543" y="155.08275" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the successor of the given page.&#10; &lt;p&gt;&#10; This method is typically called by a wizard page&#10; &lt;/p&gt;&#10;&#10; @param page the page&#10; @return the next page, or &lt;code&gt;null&lt;/code&gt; if none&#10; by a wizard page&#10; &lt;/"/>
</attvalues>
</node>
<node id="207" label="getCodeData()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-97.678314" y="60.25174" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="@return"/>
</attvalues>
</node>
<node id="208" label="CodeminerRessourceVisitor(InfoJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="212.50105" y="58.823334" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@param data&#13; @param info&#13;            prerequis: info ne doit pas être null"/>
</attvalues>
</node>
<node id="209" label="DebugLogger()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-97.41726" y="-81.87321" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="210" label="log(Level, String, Object[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-120.199135" y="-100.491325" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="211" label="isExportFormat(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="235.54172" y="-251.16315" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Indique si la chaine passee en parametre correspond a un format existant.&#13; &#13; @param format&#13; @return Format existe&#13; haine passee en parametre correspond a un format existant.&#13; &#13; @param format&#13; @return"/>
</attvalues>
</node>
<node id="212" label="ATTR_MODIFIER">
<viz:color b="162" g="162" r="24"/>
<viz:position x="213.6693" y="-263.52222" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private final"/>
</attvalues>
</node>
<node id="213" label="run(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-165.47102" y="38.461605" z="0.0"/>
<viz:size value="4.0856957"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="56"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Methode principale du job, cette methode est executee lors de&#13; {@link Job#schedule()}.&#13; &#13; @see codeminer.api.ui.AbstractScenario#run(org.eclipse.core.runtime.IProgressMonitor)&#13; edule()}.&#13; &#13; @see code"/>
</attvalues>
</node>
<node id="214" label="getLabel(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="187.93634" y="-233.68102" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="215" label="P_KEEP_INTERMEDIATE_FILE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-105.578674" y="248.29706" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="216" label="serialExtension">
<viz:color b="162" g="162" r="24"/>
<viz:position x="32.152985" y="-109.59193" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public final"/>
</attvalues>
</node>
<node id="217" label="getColumnText(Object, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-233.31544" y="300.03436" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the label text for the given column of the given element.&#10;&#10; @param element the object representing the entire row, or&#10;   &lt;code&gt;null&lt;/code&gt; indicating that no input object is set&#10;   in the viewer&#10; @param columnIndex the zero-based index of the column in which the label appears&#10; @return String or or &lt;code&gt;null&lt;/code&gt; if there is no text for the &#10;  given object at columnIndex&#10;  @return Strin"/>
</attvalues>
</node>
<node id="218" label="getPairElement(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-135.0748" y="175.82796" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="219" label="removeEventListener(CodeDataChangesListener)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-37.58759" y="-287.27365" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="220" label="initializeDefaultPreferences()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-106.92595" y="128.55785" z="0.0"/>
<viz:size value="2.665358"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="25"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="This method is called by the preference initializer to initialize default&#10; preference values. Clients should get the correct node for their &#10; bundle and then set the default values on it. For example:&#10; &lt;pre&gt;&#10;&#9;&#9;&#9;public void initializeDefaultPreferences() {&#10;&#9;&#9;&#9;&#9;Preferences node = new DefaultScope().getNode(&quot;my.bundle.id&quot;);&#10;&#9;&#9;&#9;&#9;node.put(key, value);&#10;&#9;&#9;&#9;}&#10; &lt;/pre&gt;&#10; &lt;p&gt;&#10; &lt;em&gt;Note: Clients should only set default preference values for their&#10; own bundle.&lt;/em&gt;&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; &lt;em&gt;Note:&lt;/em&gt; Clients should not call this method. It will be called&#10; automatically by the preference initializer when the appropriate default&#10; preference node is accessed.&#10; &lt;/p&gt;&#10; lly by the preference initializer when the appropr"/>
</attvalues>
</node>
<node id="221" label="performFinish()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-277.07913" y="-15.3244915" z="0.0"/>
<viz:size value="3.032492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="34"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="@return"/>
</attvalues>
</node>
<node id="222" label="getChildDepth(ICodeData, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="94.99021" y="-283.0975" z="0.0"/>
<viz:size value="3.032492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="34"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Retourne tous les fils de l'élément parent&#13; &#13; @param idElementParent&#13; @return"/>
</attvalues>
</node>
<node id="224" label="getType(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-61.7077" y="-359.9071" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Si l'element element existe et si l'element a la propriete &quot;type&quot;, alors&#13; la fonction renvoie la valeur de cette propriete, sinon la fonction&#13; renvoie null. Si l'element existe mais qu'il n'a pas la propriete &quot;type&quot;,&#13; alors la fonction getComment() renvoie null.&#13; ement existe mais qu'il n'a pas la"/>
</attvalues>
</node>
<node id="225" label="getListTypeParser(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-123.39261" y="33.823093" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="226" label="GDFExporter">
<viz:color b="162" g="24" r="93"/>
<viz:position x="101.739105" y="-132.59026" z="0.0"/>
<viz:size value="12.337309"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="186"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Formatage des donnees en GDF. Manuel du format :&#13; http://guess.wikispot.org/The_GUESS_.gdf_format&#13; &#13; @author Sebastien Heymann et Jeremy Palmier&#13; &#13; &#13; http://guess.wikispot.org/The_GUESS_.gdf_format"/>
</attvalues>
</node>
<node id="227" label="getImplements(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="146.06361" y="-3.8228335" z="0.0"/>
<viz:size value="3.119851"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="36"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="228" label="ICodeMinerModule">
<viz:color b="162" g="24" r="93"/>
<viz:position x="10.787059" y="-19.672798" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="public interface"/>
<attvalue id="3" value="Interface de module (fragment de plugin).&#13; &#13; @author Sebastien Heymann et Jeremy Palmier"/>
</attvalues>
</node>
<node id="229" label="Initialiser">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-113.45021" y="130.07466" z="0.0"/>
<viz:size value="2.9895487"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="33"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="230" label="visitor">
<viz:color b="162" g="162" r="24"/>
<viz:position x="152.46873" y="120.479126" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="231" label="getParent(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="165.35725" y="-19.075119" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne l'élément parent contenant l'élément fils sur la relation&#13; contenant/contenue.&#13; &#13; @param elementFils&#13; @return&#13; arent contenant l'élément fils sur la relation&#13; contenant/contenue.&#13; &#13; @param e"/>
</attvalues>
</node>
<node id="232" label="performFinish()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-288.00085" y="210.36745" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Subclasses must implement this &lt;code&gt;IWizard&lt;/code&gt; method to perform&#10; any special finish processing for their wizard.&#10; ement this &lt;code&gt;IWizard&lt;/code&gt; method to perform&#10; any special finish processin"/>
</attvalues>
</node>
<node id="233" label="onChange(CodeDataChangesEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="234.89825" y="-310.58752" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="234" label="setParameter(String[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="103.99996" y="-116.32517" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Passe les parametres globaux aux fragments de plugin."/>
</attvalues>
</node>
<node id="235" label="GEXFExporter">
<viz:color b="162" g="24" r="93"/>
<viz:position x="239.9477" y="-281.16327" z="0.0"/>
<viz:size value="20.0"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="1058"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Formatage des donnees en GEXF. Manuel :&#10; http://gephi.org/community/gexf-graph-exchange-xml-format/&#10; &#10; @author Sebastien Heymann&#10; &#10; anuel :&#10; http://gephi.org/community/gexf-graph-exchange-xml-format/"/>
</attvalues>
</node>
<node id="236" label="setWriterParameter(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="2.771355" y="-153.64159" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="{@inheritDoc}&#13; &#13; @see codeminer.api.IExporter#setWriterParameter(java.lang.String,&#13;      java.lang.String)&#13; tDoc}&#13; &#13; @see codeminer.api.IExporter#setWriterParameter(java.lang.String,&#13;      java.lang."/>
</attvalues>
</node>
<node id="237" label="getType(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="161.4553" y="-290.66824" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="238" label="ExternalEditorLauncher">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-35.785973" y="73.82345" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="239" label="testGetCommentaire()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-42.49167" y="-397.01437" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="240" label="ExtendedMethodDependanceDetector(ICodeData, IInfoElement&lt;IJavaElement&gt;, boolean)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="255.68051" y="-3.7030578" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="242" label="testGetType()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-49.682816" y="-381.16043" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="243" label="initParser(IProject, IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-129.51991" y="-9.097592" z="0.0"/>
<viz:size value="2.6274748"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="24"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Intialise le parser, precedemment cree dans la fonction&#13; {@link StdAnalyse#run(IProgressMonitor)} avec le projet passe en&#13; parametre et le monitor.&#13; &#13; @param targetProject&#13; @param monitor&#13; onitor)} a"/>
</attvalues>
</node>
<node id="244" label="ArgumentUtil">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-136.34859" y="188.32393" z="0.0"/>
<viz:size value="4.6200614"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="66"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Classe utilitaire.&#13; &#13; @author Jeremy Palmier"/>
</attvalues>
</node>
<node id="245" label="ExtensionListEditorControl">
<viz:color b="162" g="24" r="93"/>
<viz:position x="42.655632" y="373.79977" z="0.0"/>
<viz:size value="13.442968"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="202"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="246" label="logrb(Level, String, String, String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-134.32385" y="-119.191444" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="247" label="LogManager">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-3.5993114" y="-35.288918" z="0.0"/>
<viz:size value="3.3929539"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="42"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Gere les loggers de CodeMiner, instancie un logger singleton. Instancie le&#10; logger forcant l'ecriture de System.out si le mode DEBUG est active dans les&#10; preferences.&#10; &#10; @author Sebastien Heymann"/>
</attvalues>
</node>
<node id="248" label="testIntrospectionFunction()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="265.94968" y="162.78955" z="0.0"/>
<viz:size value="3.8302028"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="51"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="249" label="finalizeExport()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="198.48103" y="-241.778" z="0.0"/>
<viz:size value="2.8638089"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="30"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Finish some work and write the file.&#13; &#13; @return"/>
</attvalues>
</node>
<node id="250" label="dispose()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="41.583694" y="323.78564" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Disposes of this content provider.  &#10; This is called by the viewer when it is disposed.&#10; &lt;p&gt;&#10; The viewer should not be updated during this call, as it is in the process&#10; of being disposed.&#10; &lt;/p&gt;&#10; e v"/>
</attvalues>
</node>
<node id="251" label="write(Object, List&lt;String&gt;, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="131.34866" y="-205.43457" z="0.0"/>
<viz:size value="3.0759296"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="35"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Cree le fichier s'il n'existe pas et lance l'ecriture des donnée via&#13; PrintWriter.&#13; &#13; @param dataFile&#13; @param elementTypes&#13; @param extension&#13; @return Vrai si l'ecriture du fichier s'est bien terminee, faux sinon.&#13; @throws IOException&#13; nsion&#13; @return Vrai si l'ecriture du fichier s'est bien terminee"/>
</attvalues>
</node>
<node id="252" label="_dicoImplements">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-53.702236" y="-305.08868" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="&lt;li&gt;key = nom de l'element &lt;li&gt;value = liste des elements implementes"/>
</attvalues>
</node>
<node id="253" label="exporter_viewer">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-389.56424" y="0.3309842" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="255" label="isExportFormat(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="18.510424" y="-70.18867" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="3" value="Indique si la chaine passee en parametre correspond a un format existant.&#13; &#13; @param format&#13; @return Format existe&#13; haine passee en parametre correspond a un format existant.&#13; &#13; @param format&#13; @return"/>
</attvalues>
</node>
<node id="256" label="toString()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-74.56356" y="-304.0771" z="0.0"/>
<viz:size value="2.8229685"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="29"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="257" label="getIdParserSelected()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-288.73734" y="237.88445" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@return the id of the parser which is been selected in the combobox or&#13;         null if there are no parser for this project&#13; er which is been selected in the combobox or&#13;         null if there are n"/>
</attvalues>
</node>
<node id="258" label="getInstance()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-60.64235" y="-62.979744" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public static synchronized"/>
</attvalues>
</node>
<node id="259" label="changedElements">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-37.152847" y="160.04866" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="260" label="isExcludedInternalRelation">
<viz:color b="162" g="162" r="24"/>
<viz:position x="267.55228" y="-21.734888" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Ce booleen d�finie le filtrage des relation interne � la classe. Si&#13; isExcludedInternalRelation == true alors les relations de d�pendances&#13; entre les �l�ments d�une m�me classe ne seront pas analys�&#13; rue alors les relations de d�pendances&#13; entre les �l�ments d�une m�me classe ne seront pas analys�"/>
</attvalues>
</node>
<node id="261" label="getConfigurationsInfo(Collection&lt;IConfigurationElement&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-67.88688" y="-85.94137" z="0.0"/>
<viz:size value="2.742982"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="27"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Returns info (a list of Pair : extensionId,extensionName )concerning&#13; these configuration element.&#13; &#13; @param listConfiguration&#13; @return&#13; ionId,extensionName )concerning&#13; these configuration element."/>
</attvalues>
</node>
<node id="262" label="EnumState(Object, int, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="290.49164" y="308.37344" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="263" label="run(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="212.53276" y="-287.23663" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Methode principale du job, cette mï¿½thode est executer lors de&#13; {@link Job#schedule()}. Par défault la fonction run apelle directement&#13; finalize export&#13; &#13; @see codeminerui.api.AbstractScenario#run(org.eclipse.core.runtime.IProgressMonitor)&#13; &#13; e export&#13; &#13; @see codeminerui.api.AbstractScenario#run(o"/>
</attvalues>
</node>
<node id="264" label="Activator">
<viz:color b="162" g="24" r="93"/>
<viz:position x="65.974236" y="194.78644" z="0.0"/>
<viz:size value="5.706891"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="85"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The activator class controls the plug-in life cycle."/>
</attvalues>
</node>
<node id="265" label="setDateTo(Element, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="270.54248" y="-326.2492" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param e&#10; @param revision&#10; @return"/>
</attvalues>
</node>
<node id="266" label="addMissingDependencies(Map&lt;String, HashMap&lt;String, Integer&gt;&gt;, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="230.10898" y="-316.62485" z="0.0"/>
<viz:size value="3.0759296"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="35"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param missingDependencies"/>
</attvalues>
</node>
<node id="267" label="isFinished()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-193.82458" y="-14.151292" z="0.0"/>
<viz:size value="2.9051948"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="31"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="If either the parser and exporter were not initialised we considered that&#13; the scenario is finished. If there were initialised, the function will&#13; test the result of the different job, if all the job are finished, the&#13; scenario is finished.&#13; &#13; @see codeminer.api.ui.AbstractScenario#isFinished()&#13; ob"/>
</attvalues>
</node>
<node id="268" label="AlgorithmCodeData">
<viz:color b="162" g="24" r="93"/>
<viz:position x="120.39566" y="-261.753" z="0.0"/>
<viz:size value="9.471254"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="144"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="270" label="createControl(Composite)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-258.9017" y="284.35992" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Creates the top level control for this dialog&#10; page under the given parent composite.&#10; &lt;p&gt;&#10; Implementors are responsible for ensuring that&#10; the created control can be accessed via &lt;code&gt;getControl&lt;/code&gt;&#10; &lt;/p&gt;&#10;&#10; @param parent the parent composite&#10; ted control can be accessed via &lt;code&gt;getControl&lt;/c"/>
</attvalues>
</node>
<node id="271" label="GDFExporter()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="85.00319" y="-137.5661" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="272" label="getHerit(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-28.915373" y="-345.2156" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="273" label="getData()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-160.29027" y="113.672745" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="@return"/>
</attvalues>
</node>
<node id="274" label="CodeDataChangesEvent">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-36.03311" y="168.51453" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="275" label="logp(Level, String, String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-124.09911" y="-114.50834" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="276" label="edges">
<viz:color b="162" g="162" r="24"/>
<viz:position x="230.00516" y="-252.3556" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="277" label="TestActivator">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-246.36102" y="-208.0208" z="0.0"/>
<viz:size value="4.3492002"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="61"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Our sample action implements workbench action delegate. The action proxy will&#10; be created by the workbench and shown in the UI. When the user tries to use&#10; the action, this delegate will be created and execution will be delegated to&#10; it.&#10; &#10; @see IWorkbenchWindowActionDelegate&#10; ate will be created a"/>
</attvalues>
</node>
<node id="278" label="inputChanged(Viewer, Object, Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-402.7081" y="27.736307" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Notifies this content provider that the given viewer's input&#10; has been switched to a different element.&#10; &lt;p&gt;&#10; A typical use for this method is registering the content provider as a listener&#10; to changes on the new input (using model-specific means), and deregistering the viewer &#10; from the old input. In response to these change notifications, the content provider&#10; should update the viewer (see the add, remove, update and refresh methods on the viewers).&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; The viewer should not be updated during this call, as it might be in the process&#10; of being disposed.&#10; &lt;/p&gt;&#10;&#10; @param viewer the viewer&#10; @param oldInput the old input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   did not previously have an input&#10; @param newInput the new input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   does not have an input&#10; param newInput the new input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   does not"/>
</attvalues>
</node>
<node id="279" label="test2()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="183.19049" y="183.13452" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="280" label="run()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-302.78403" y="-189.69177" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="281" label="listType">
<viz:color b="162" g="162" r="24"/>
<viz:position x="17.816702" y="-157.0807" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="282" label="AbstractParser()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="68.1355" y="76.45044" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Le constructeur par defaut definie un nom vide pour le Job.&#13; &lt;p&gt;&#13; &lt;i&gt; Ce constructeur est necessaire pour permettre la creation automatique&#13; des extenstions.&#13; &lt;p&gt;&#13; &#13; @see Job&#13; &#13; ructeur est necessair"/>
</attvalues>
</node>
<node id="283" label="createFieldEditors()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="23.525753" y="127.38405" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Creates the page's field editors.&#10; &lt;p&gt;&#10; The default implementation of this framework method&#10; does nothing. Subclass must implement this method to&#10; create the field editors.&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; Subclasses should call &lt;code&gt;getFieldEditorParent&lt;/code&gt;&#10; to obtain the parent control for each field editor.&#10; This same parent should not be used for more than&#10; one editor as the parent may change for each field&#10; editor depending on the layout style of the page&#10; &lt;/p&gt;&#10; or as the parent may change for each field"/>
</attvalues>
</node>
<node id="284" label="doc">
<viz:color b="162" g="162" r="24"/>
<viz:position x="220.58032" y="-259.37262" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="285" label="addNode(String, String, String, String, String, String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="259.8573" y="-257.13245" z="0.0"/>
<viz:size value="3.2091012"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="38"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param type&#10; @param codelines&#10; @param modifier&#10; @param comment&#10; @return&#10; m gexfID&#10; @param revision&#10; @param type&#10; @param codelines&#10; @param modifier&#10; @p"/>
</attvalues>
</node>
<node id="286" label="AbstractParser">
<viz:color b="162" g="24" r="93"/>
<viz:position x="79.1413" y="86.7065" z="0.0"/>
<viz:size value="3.9824977"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="54"/>
<attvalue id="2" value="public abstract"/>
<attvalue id="3" value="Classe de base des extensions permettant l'analyse du code d'un projet.&#13; &#13; @author Sebastien Heymann et Jeremy Palmier&#13; @see ICodeMinerParser&#13; analyse du code d'un projet.&#13; &#13; @author Sebastien Heyman"/>
</attvalues>
</node>
<node id="287" label="getDepens(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-29.654465" y="-306.01935" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="288" label="progress_monitor">
<viz:color b="162" g="162" r="24"/>
<viz:position x="245.13844" y="206.97661" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="289" label="getIdElementSource()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-9.38248" y="195.0503" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="290" label="applyToStatusLine(IStatus)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-312.90277" y="273.95145" z="0.0"/>
<viz:size value="3.119851"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="36"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="291" label="searchData(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-106.21778" y="43.101044" z="0.0"/>
<viz:size value="2.6274748"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="24"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Recherche un exporteur parmis les fragments de plugin disponibles.&#13; &#13; @throws Exception"/>
</attvalues>
</node>
<node id="292" label="typesExportedByParser">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-209.13783" y="-43.27916" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="293" label="visit(ClassInstanceCreation)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="243.27129" y="-71.65992" z="0.0"/>
<viz:size value="5.945735"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="89"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Ajoute les dependances pour les appels a New de differentes class. ex : &lt;br&gt;&#13; &lt;code&gt;&#13; class C&#13; {&#13;public void test3()&#13;{&#13;A test = new A();&#13;test.value = &quot;coucou&quot;;&#13;}&#13;}&#13;&lt;/code&gt; &lt;br&gt;&#13; la node retournee sera &quot;new A();&quot;&#13; &#13; &lt;br&gt;&#13; &lt;p&gt;&#13; Class instance creation expression AST node type. For JLS2:&#13; ClassInstanceCreation:&#13; &lt;/p&gt;&#13; &#13; &lt;code&gt;        [ Expression . ] new Name&#13;&lt;br&gt;&lt;dd&gt;( [ Expression { , Expression } ] )&#13;&lt;br&gt;&lt;dd&gt;[ AnonymousClassDeclaration ]&#13;&lt;/code&gt;&#13; &lt;p&gt;&#13; For JLS3, type arguments are added and the type name is generalized to a&#13; type so that parameterized types can be instantiated:&#13; ClassInstanceCreation:&#13; &lt;/p&gt;&#13; &lt;code&gt;&#13;[ Expression . ]&#13;&lt;br&gt;&lt;dd&gt; new [ &lt; Type { , Type } &gt; ]&#13;&lt;br&gt;&lt;dd&gt;   Type ( [ Expression { , Expression } ] )&#13;&lt;br&gt;&lt;dd&gt; [ AnonymousClassDeclaration ]&#13;&lt;/code&gt;&#13; &lt;p&gt;&#13; Not all node arragements will represent legal Java constructs. In&#13; particular, it is nonsense if the type is a primitive type or an array&#13; type (primitive types cannot be instantiated, and array creations must be&#13; represented with ArrayCreation nodes). The normal use is when the type is&#13; a simple, qualified, or parameterized type.&#13; &#13; A type like &quot;A.B&quot; can be represented either of two ways:&#13; QualifiedType(SimpleType(SimpleName(&quot;A&quot;)),SimpleName(&quot;B&quot;))&#13; SimpleType(QualifiedName(SimpleName(&quot;A&quot;),SimpleName(&quot;B&quot;))) The first form&#13; is preferred when &quot;A&quot; is known to be a type (as opposed to a package).&#13; However, a parser cannot always determine this. Clients should be&#13; prepared to handle either rather than make assumptions. (Note also that&#13; the first form became possible as of JLS3; only the second form existed&#13; in JLS2.)&#13; &lt;/p&gt;&#13; lso that&#13; the first form became possible as of JLS3; only the second form existed&#13; in JL"/>
</attvalues>
</node>
<node id="294" label="getCodeData()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-13.96407" y="35.729664" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Si l'Etape 1 a ete annulee, alors le resultat correspond au resultat&#13; temporaire a cet instant, le resultat correspond alors a un modele&#13; correct mais incomplet.&#13; &#13;ltat&#13; temporaire a cet instant, l"/>
</attvalues>
</node>
<node id="296" label="fillListType()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-312.46417" y="300.2547" z="0.0"/>
<viz:size value="3.032492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="34"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="297" label="AbstractScenario">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-272.7412" y="-61.63251" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="public abstract"/>
</attvalues>
</node>
<node id="298" label="run(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="251.12158" y="179.61542" z="0.0"/>
<viz:size value="3.8302028"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="51"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Executes this job.  Returns the result of the execution.&#10; &lt;p&gt;&#10; The provided monitor can be used to report progress and respond to &#10; cancellation.  If the progress monitor has been canceled, the job&#10; should finish its execution at the earliest convenience and return a result&#10; status of severity {@link IStatus#CANCEL}.  The singleton&#10; cancel status {@link Status#CANCEL_STATUS} can be used for&#10; this purpose.  The monitor is only valid for the duration of the invocation&#10; of this method.&#10; &lt;p&gt;&#10; This method must not be called directly by clients.  Clients should call&#10; &lt;code&gt;schedule&lt;/code&gt;, which will in turn cause this method to be called.&#10; &lt;p&gt;&#10; Jobs can optionally finish their execution asynchronously (in another thread) by &#10; returning a result status of {@link #ASYNC_FINISH}.  Jobs that finish&#10; asynchronously &lt;b&gt;must&lt;/b&gt; specify the execution thread by calling&#10; &lt;code&gt;setThread&lt;/code&gt;, and must indicate when they are finished by calling&#10; the method &lt;code&gt;done&lt;/code&gt;.&#10; &#10; @param monitor the monitor to be used for reporting progress and&#10; responding to cancelation. The monitor is never &lt;code&gt;null&lt;/code&gt;&#10; @return resulting status of the run. The result must not be &lt;code&gt;null&lt;/code&gt;&#10; @see #ASYNC_FINISH&#10; @see #done(IStatus)&#10; atus of the run. The result must not be &lt;code&gt;null&lt;/code&gt;&#10; @see #A"/>
</attvalues>
</node>
<node id="299" label="testIntrospectionIntermediaire()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="244.75098" y="142.16829" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="300" label="infoJavaProvider">
<viz:color b="162" g="162" r="24"/>
<viz:position x="156.41847" y="117.54053" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="302" label="createParser(IConfigurationElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-142.75862" y="40.157425" z="0.0"/>
<viz:size value="2.8229685"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="29"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Cree le parser.&#13; &#13; @param configurationElement&#13; @param currentProject&#13; @return Parseur abstrait"/>
</attvalues>
</node>
<node id="303" label="finalizeExport()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="21.671717" y="-115.6687" z="0.0"/>
<viz:size value="2.9051948"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="31"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Finish some work and write the file.&#13; &#13; @return"/>
</attvalues>
</node>
<node id="304" label="postInformationMessage(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-347.85895" y="-188.13855" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="306" label="equals(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-98.63954" y="-207.75287" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="307" label="mouseDown(MouseEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="50.712833" y="406.01755" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="308" label="testAddDepensNB()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-5.676036" y="-374.72003" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="309" label="AbstractScenario()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-262.65997" y="-43.037346" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="310" label="selectionChanged(IAction, ISelection)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-235.90904" y="-205.06036" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Selection in the workbench has been changed. We can change the state of&#10; the 'real' action here if we want, but this can only happen after the&#10; delegate has been created.&#10; &#10; @see IWorkbenchWindowActionDelegate#selectionChanged&#10; ppen after the&#10; delegate has been created.&#10; &#10; @see IWorkbenchWindowActi"/>
</attvalues>
</node>
<node id="311" label="createParserTable(Composite, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-428.2145" y="13.104393" z="0.0"/>
<viz:size value="2.4825845"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="20"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="312" label="setProject(IProject)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-230.28514" y="-39.912876" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="313" label="addDepends(Pair&lt;String&gt;, Map&lt;String, Object&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="216.74577" y="-118.05319" z="0.0"/>
<viz:size value="2.6274748"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="24"/>
<attvalue id="3" value="Ajoute une dependance entre l'element source idElementSource et&#13; idElementTarget. Si la dependance n'existait pas, les proprietes sont&#13; ajoutees pour decrire la dependance, sinon si l'élément existait déja les&#13; nouvelles proprietes ne seron pas prises en compte, cependant le nombre&#13; de dependances sera incremente de 1.&#13; &#13; Note: Il est possible de modifier les proprietes d'une dependance en&#13; modifiant le dictionnaire des proprietes retourne par&#13; getDepensProperties().&#13; d'une dependance en&#13; modif"/>
</attvalues>
</node>
<node id="314" label="isExcludedArchive">
<viz:color b="162" g="162" r="24"/>
<viz:position x="214.9577" y="26.940453" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="315" label="StdWizardAnalysis">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-301.6324" y="165.8334" z="0.0"/>
<viz:size value="3.7304118"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="49"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="316" label="StdPage">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-289.1165" y="281.8544" z="0.0"/>
<viz:size value="20.0"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="593"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="317" label="visit(MethodDeclaration)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="175.16057" y="-158.71005" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Visits the given type-specific AST node.&#10; &lt;p&gt;&#10; The default implementation does nothing and return true.&#10; Subclasses may reimplement.&#10; &lt;/p&gt;&#10;&#10; @param node the node to visit&#10; @return &lt;code&gt;true&lt;/code&gt; if the children of this node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node should&#10; be skipped&#10; is node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node"/>
</attvalues>
</node>
<node id="318" label="getProject()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-265.22498" y="-64.86639" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public abstract"/>
</attvalues>
</node>
<node id="319" label="CodeDataTest">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-18.563694" y="-384.27835" z="0.0"/>
<viz:size value="16.19548"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="242"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@author Sebastien Heymann et Jeremy Palmier"/>
</attvalues>
</node>
<node id="320" label="P_GLOBAL_ARGUMENTS">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-100.9445" y="253.59909" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="321" label="test1()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="182.97331" y="189.08131" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="322" label="entering(String, String, Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-148.94595" y="-92.45038" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="323" label="AbstractExporter()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="77.395515" y="-148.11748" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Le constructeur par default definie un nom vide pour le Job.&#13; &lt;p&gt;&#13; &lt;i&gt; Ce constructeur est necessaire pour permettre la creation automatique&#13; des extensions.&#13; &lt;p&gt;&#13; &#13; @see Job&#13; &#13; tructeur est necessai"/>
</attvalues>
</node>
<node id="324" label="addEventListener(CodeDataChangesListener)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="224.58954" y="-183.02583" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
</attvalues>
</node>
<node id="325" label="removeElement(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="199.54932" y="-136.07098" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="3" value="Suprime un �l�ment de la base, si l'�l�ment n'apparitent pas � la base,&#13; ou n'a pas pus �tre supprimer la fonction retourne false. Si l'�l�ment �&#13; �t� supprimer la fonction retourne true.&#13; &#13; @param idElement&#13; @return&#13; ourne false. Si l'�l�ment �&#13; �t� supprimer la fonction retourne true.&#13; &#13; @param i"/>
</attvalues>
</node>
<node id="326" label="TestProject">
<viz:color b="162" g="24" r="93"/>
<viz:position x="194.52272" y="186.50938" z="0.0"/>
<viz:size value="3.6320732"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="47"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="327" label="getDepens(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="127.291405" y="-13.7830715" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="328" label="run(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="29.16576" y="-182.5042" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Methode principale du job, cette mï¿½thode est executer lors de&#13; {@link Job#schedule()}. Par défault la fonction run apelle directement&#13; finalize export&#13; &#13; @see codeminerui.api.AbstractScenario#run(org.eclipse.core.runtime.IProgressMonitor)&#13; &#13; e export&#13; &#13; @see codeminerui.api.AbstractScenario#run(o"/>
</attvalues>
</node>
<node id="329" label="setRootElement(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="316.8315" y="244.10814" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="330" label="ListContentProvider">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-260.0804" y="323.23334" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="static"/>
</attvalues>
</node>
<node id="331" label="MainInitializer">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-51.324207" y="115.933716" z="0.0"/>
<viz:size value="3.119851"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="36"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Class used to initialize default preference values."/>
</attvalues>
</node>
<node id="332" label="run()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-342.59525" y="-11.999164" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="333" label="chooseDirButton">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-260.09488" y="264.9404" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="334" label="MainPage()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="29.179651" y="209.3413" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="335" label="add(ICodeData, Collection&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="193.09528" y="-137.24141" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Ajoute une liste d'element listElement, provenant du conteneur ICodeData&#13; &#13; @param data&#13; @param listElement&#13; e liste d'element listElement, provenant du conteneur ICodeData&#13; &#13; @param data&#13; @param lis"/>
</attvalues>
</node>
<node id="336" label="run()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-320.26602" y="-121.68237" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="337" label="PLUGIN_SCENARIO_EXTENSION_ID">
<viz:color b="162" g="162" r="24"/>
<viz:position x="77.12634" y="197.81908" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="338" label="setWriterParameter(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="16.07313" y="-75.360954" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="3" value="Affecte les parametres d'ecriture du fichier d'export.&#13; &#13; @param outputPath&#13; @param outputNameBase&#13; Affecte les parametres d'ecriture du fichier d'export.&#13; &#13; @param outputPath&#13; @param outputNameBase"/>
</attvalues>
</node>
<node id="339" label="testAddImplement()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-23.312937" y="-361.30215" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Test method for&#13; {@link codeminer.core.data.CodeData#addImplement(java.lang.String, java.lang.String)}&#13; .&#13; thod for&#13; {@link codeminer.core.data.CodeData#addImplement(java.lang.String, java.lang.Strin"/>
</attvalues>
</node>
<node id="341" label="ELEMENT_PROPERTIES_PROBLEMS">
<viz:color b="162" g="162" r="24"/>
<viz:position x="52.65456" y="-240.65602" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="342" label="ProjectUtil">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-66.23767" y="104.06745" z="0.0"/>
<viz:size value="2.9895487"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="33"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Classe utilitaire, permettant de recuperer plus facilement des informations&#13; sur IProject.&#13; &#13; @see IProject&#13; @author Sebastien Heymann et Jeremy Palmier&#13; ment des informations&#13; sur IProject.&#13; &#13; @see"/>
</attvalues>
</node>
<node id="343" label="testAbstractEnumFileContent()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="342.95865" y="187.04364" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="344" label="new Runnable() {...}">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-303.39993" y="-13.504694" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="6"/>
</attvalues>
</node>
<node id="345" label="P_EXPORT_TYPE_JAVA_VARIABLE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-55.73462" y="221.14194" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="346" label="testRemoveElement()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-38.488613" y="-387.74982" z="0.0"/>
<viz:size value="2.5536587"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="22"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="347" label="PACKAGE_TYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="73.75498" y="77.74815" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="348" label="getColumnText(Object, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-423.035" y="34.994526" z="0.0"/>
<viz:size value="3.2544098"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="39"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the label text for the given column of the given element.&#10;&#10; @param element the object representing the entire row, or&#10;   &lt;code&gt;null&lt;/code&gt; indicating that no input object is set&#10;   in the viewer&#10; @param columnIndex the zero-based index of the column in which the label appears&#10; @return String or or &lt;code&gt;null&lt;/code&gt; if there is no text for the &#10;  given object at columnIndex&#10;  @return Strin"/>
</attvalues>
</node>
<node id="349" label="PairTest">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-128.6282" y="-208.95007" z="0.0"/>
<viz:size value="3.2544098"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="39"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Test unitaire pour la classe {@link Pair}&#13; &#13; @author Jérémy Palmier"/>
</attvalues>
</node>
<node id="350" label="P_EXPORT_JAVA_TYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-68.69302" y="217.2963" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="351" label="order_number">
<viz:color b="162" g="162" r="24"/>
<viz:position x="262.60034" y="-40.178467" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="352" label="severe(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-20.23418" y="0.8376272" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="353" label="init(IWorkbench)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="42.490673" y="149.35745" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Initializes this preference page for the given workbench.&#10; &lt;p&gt;&#10; This method is called automatically as the preference page is being created&#10; and initialized. Clients must not call this method.&#10; &lt;/p&gt;&#10;&#10; @param workbench the workbench&#10; reated&#10; and initialized. Clients must not call this method.&#10; &lt;/p&gt;"/>
</attvalues>
</node>
<node id="354" label="getCodeData()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="201.30821" y="112.430504" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Si l'Etape 1 a ete annulee, alors le resultat correspond au resultat&#13; temporaire a cet instant, le resultat correspond alors a un modele&#13; correct mais incomplet.&#13; &#13;ltat&#13; temporaire a cet instant, l"/>
</attvalues>
</node>
<node id="355" label="id_currentMethod">
<viz:color b="162" g="162" r="24"/>
<viz:position x="272.06982" y="-33.838673" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="356" label="testToString()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-121.145134" y="-214.13004" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Test method for {@link codeminer.core.data.Pair#toString()}."/>
</attvalues>
</node>
<node id="357" label="_listType">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-63.43533" y="-304.0198" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Liste des types d'element"/>
</attvalues>
</node>
<node id="358" label="getListElement(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-140.28996" y="179.75969" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="359" label="addElementInListMap(Map&lt;String, ArrayList&lt;String&gt;&gt;, String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-15.534314" y="-332.76138" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="protected static"/>
<attvalue id="3" value="Ajoute un element et sa valeur dans le dictionaire. Si l'element existe&#13; deja alors la valeur est ajoutee dans la liste associee a l'element.&#13; &lt;p&gt;&#13; &lt;i&gt;Si la valeur a deja ete ajoutee dans la liste de l'element, alors&#13; cette valeur n'est pas ajoutee.&lt;/i&gt;&#13; &lt;/p&gt;&#13; ur a deja ete ajoutee dans la liste de"/>
</attvalues>
</node>
<node id="360" label="MyListEditor(String, String, Composite)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-21.019997" y="272.40497" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="361" label="nextChildNum">
<viz:color b="162" g="162" r="24"/>
<viz:position x="286.2927" y="298.356" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="362" label="getExtensionInfo(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-61.182693" y="-84.39471" z="0.0"/>
<viz:size value="2.9051948"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="31"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Returns info about all configuration elements from all extensions&#13; configured into the identified extension point.&#13; &#13; Returns an empty array if the extension point does not exist, has no&#13; extensions configured, or none of the extensions contain configuration&#13; elements.&#13; &#13; @param extensionPointId&#13;            the unique identifier of the extension point&#13; &#13; @return the list of pair ( extensionId,extensionName ) from all&#13;         extensions configured&#13; &#13; &#13; @return the list of pair ( extensionId,ext"/>
</attvalues>
</node>
<node id="363" label="addOrder()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="251.20853" y="-69.717705" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="364" label="getImplements(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-36.870358" y="-352.1269" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="365" label="rootElement">
<viz:color b="162" g="162" r="24"/>
<viz:position x="277.9566" y="233.01161" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="366" label="getObject()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-19.85164" y="194.44211" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="367" label="getChild(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="123.24397" y="-211.24867" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne les fils de l'élément parent pour la relation contenant/contenue&#13; &#13; @param elementParent&#13; @return&#13;  les fils de l'élément parent pour la relation contenant/contenue&#13; &#13; @param elementParent"/>
</attvalues>
</node>
<node id="368" label="TestTree">
<viz:color b="162" g="24" r="93"/>
<viz:position x="371.0095" y="223.80011" z="0.0"/>
<viz:size value="3.6320732"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="47"/>
</attvalues>
</node>
<node id="369" label="edges">
<viz:color b="162" g="162" r="24"/>
<viz:position x="94.64252" y="-112.63608" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="370" label="updateDependsLink(String, String, String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="251.0147" y="-331.46722" z="0.0"/>
<viz:size value="4.242881"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="59"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param n"/>
</attvalues>
</node>
<node id="371" label="testEqualsObject()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-116.891846" y="-207.1695" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Test method for {@link codeminer.core.data.Pair#equals(java.lang.Object)}&#13; ."/>
</attvalues>
</node>
<node id="372" label="PROJECT_TYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="71.20958" y="94.11989" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="373" label="StdAnalyse()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-245.87643" y="-23.66824" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="374" label="severe(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-123.270615" y="-94.8204" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="375" label="hasChildren(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="365.25488" y="206.6338" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns whether the given element has children.&#10; &lt;p&gt;&#10; Intended as an optimization for when the viewer does not&#10; need the actual children.  Clients may be able to implement&#10; this more efficiently than &lt;code&gt;getChildren&lt;/code&gt;.&#10; &lt;/p&gt;&#10;&#10; @param element the element&#10; @return &lt;code&gt;true&lt;/code&gt; if the given element has children,&#10;  and &lt;code&gt;false&lt;/code&gt; if it has no children&#10; code&gt;true&lt;/code&gt; if the give"/>
</attvalues>
</node>
<node id="376" label="createParser()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="52.8112" y="94.87781" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="377" label="run(IAction)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-321.6807" y="-162.83595" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Performs this action.&#10; &lt;p&gt;&#10; This method is called by the proxy action when the action has been&#10; triggered. Implement this method to do the actual work.&#10; &lt;/p&gt;&lt;p&gt;&#10; &lt;b&gt;Note:&lt;/b&gt; If the action delegate also implements&#10; &lt;code&gt;IActionDelegate2&lt;/code&gt;, then this method is not invoked but&#10; instead the &lt;code&gt;runWithEvent(IAction, Event)&lt;/code&gt; method is called.&#10; &lt;/p&gt;&#10;&#10; @param action the action proxy that handles the presentation portion of the&#10;   action&#10; led.&#10; &lt;/p&gt;&#10;&#10; @param action the action proxy that"/>
</attvalues>
</node>
<node id="378" label="freezeIncomingLinks(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="276.2799" y="-307.99078" z="0.0"/>
<viz:size value="2.9051948"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="31"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param gexfID&#10; @param revision"/>
</attvalues>
</node>
<node id="379" label="CodeData()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-53.222878" y="-356.67798" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="380" label="FIELD_TYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="76.12142" y="73.19166" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="381" label="getListType()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="59.458076" y="-226.91449" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
</attvalues>
</node>
<node id="382" label="getLabel(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-58.133327" y="-299.88834" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Si l'element element existe et si l'element a la propriete &quot;libelle&quot;,&#13; alors la fonction renvoie la valeur de cette propriete, sinon la fonction&#13; renvoie null. Si l'element existe mais qu'il n'a pas la propriete&#13; &quot;libelle&quot;, alors la fonction getComment() renvoie null.&#13; nt existe mais qu'il n'a pas"/>
</attvalues>
</node>
<node id="383" label="StringUtil">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-37.832916" y="94.71353" z="0.0"/>
<viz:size value="2.6274748"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="24"/>
<attvalue id="2" value="public abstract"/>
</attvalues>
</node>
<node id="384" label="removeListener(ILabelProviderListener)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="75.742546" y="315.79138" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Removes a listener to this label provider.&#10; Has no affect if an identical listener is not registered.&#10;&#10; @param listener a label provider listener&#10;  no affect if an identical listener is not registere"/>
</attvalues>
</node>
<node id="385" label="parserStatus">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-393.52115" y="-7.4003954" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="386" label="getText(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-412.76523" y="22.234966" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The &lt;code&gt;LabelProvider&lt;/code&gt; implementation of this&#10; &lt;code&gt;ILabelProvider&lt;/code&gt; method returns the element's&#10; &lt;code&gt;toString&lt;/code&gt; string. Subclasses may override.&#10; ovider&lt;/code&gt; method returns t"/>
</attvalues>
</node>
<node id="387" label="listTypeExported">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-294.49057" y="148.47507" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="388" label="new MouseAdapter() {...}">
<viz:color b="162" g="24" r="93"/>
<viz:position x="41.90595" y="411.8581" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="6"/>
</attvalues>
</node>
<node id="389" label="ProjectJavaInfo">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-12.483099" y="88.58337" z="0.0"/>
<viz:size value="2.8638089"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="30"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="390" label="addDataExtension()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-2.7880828" y="298.9247" z="0.0"/>
<viz:size value="2.4825845"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="20"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Ajoute aux préférences un menu déroulant permettant de choisir une des&#10; différentes extensions de gestion des données.&#10; es un menu déroulant permettant de choisir une des&#10; différentes extensions de g"/>
</attvalues>
</node>
<node id="391" label="PLUGIN_EXPORT_EXTENSION_ID">
<viz:color b="162" g="162" r="24"/>
<viz:position x="56.663937" y="189.13953" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="393" label="createData(IConfigurationElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-108.942696" y="35.487183" z="0.0"/>
<viz:size value="2.381536"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="17"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="@param configurationElement&#13; @return"/>
</attvalues>
</node>
<node id="394" label="PLUGIN_ID">
<viz:color b="162" g="162" r="24"/>
<viz:position x="77.38708" y="190.92134" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="395" label="getKey(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="143.99605" y="-189.745" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="396" label="searchParserValid(IProject)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-92.51098" y="41.332565" z="0.0"/>
<viz:size value="2.9471123"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="32"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="397" label="page_std">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-290.6952" y="154.16608" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="398" label="getKey(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="161.47966" y="79.35247" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="{@inheritDoc ICodeMinerParser#getKey(Object)} La fonction getKey retourne&#13; l'identifiant des éléments de type IRessource ou IJavaElement&#13; &#13; @see codeminer.api.ICodeMinerParser#getKey(java.lang.Object)&#13; de type IRessource ou IJavaElement&#13; &#13; @see codeminer.api.ICodeMinerParser#getKey(java.lang.Object"/>
</attvalues>
</node>
<node id="399" label="getNumberOfControls()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="40.929096" y="356.44852" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the number of basic controls this field editor consists of.&#10;&#10; @return the number of controls&#10; turns the number of basic controls this field editor consists of.&#10;&#10; @return the number of control"/>
</attvalues>
</node>
<node id="400" label="getExtensionName()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="51.35064" y="354.35272" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="401" label="amountOfWorkParser">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-198.9195" y="-38.129627" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected final"/>
</attvalues>
</node>
<node id="402" label="onChange(CodeDataChangesEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-44.97877" y="-264.74738" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
</attvalues>
</node>
<node id="403" label="nodes">
<viz:color b="162" g="162" r="24"/>
<viz:position x="89.63891" y="-115.92087" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="404" label="StdAnalyseWithPreference">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-198.325" y="8.676049" z="0.0"/>
<viz:size value="6.6797714"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="101"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="&lt;p&gt;&#13; The class StdAnalyse provide both an user interface for set preference for&#13; the analysis and functions which create the parser and exporter instance.&lt;br&#13; * /&gt; Initialisation :&#13; &lt;ol&gt;&#13; &lt;li&gt; {@link StdAnalyse#StdAnalyse()}&lt;/li&gt;&#13; &lt;li&gt;{@link StdAnalyse#setProject(IProject)}&lt;/li&gt;&#13; &lt;/ol&gt;&#13; Run :&#13; &lt;ol&gt;&#13; &lt;li&gt; {@link StdAnalyse#schedule()}&lt;/li&gt;&#13; &lt;/ol&gt;&#13; &#13; @author Jeremy Palmier&#13;         &lt;/p&gt;&#13; un :&#13; &lt;ol&gt;"/>
</attvalues>
</node>
<node id="405" label="P_EXPORT_FORMAT">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-94.97594" y="252.23997" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="406" label="init(IWorkbench)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="20.511618" y="133.59618" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Initializes this preference page for the given workbench.&#10; &lt;p&gt;&#10; This method is called automatically as the preference page is being created&#10; and initialized. Clients must not call this method.&#10; &lt;/p&gt;&#10;&#10; @param workbench the workbench&#10; reated&#10; and initialized. Clients must not call this method.&#10; &lt;/p&gt;"/>
</attvalues>
</node>
<node id="407" label="currentProject">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-258.49286" y="277.58264" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="IProject of the Selected project"/>
</attvalues>
</node>
<node id="408" label="run(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="117.38019" y="-116.88879" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Methode principale du job, cette mï¿½thode est executer lors de&#13; {@link Job#schedule()}. Par défault la fonction run apelle directement&#13; finalize export&#13; &#13; @see codeminerui.api.AbstractScenario#run(org.eclipse.core.runtime.IProgressMonitor)&#13; &#13; e export&#13; &#13; @see codeminerui.api.AbstractScenario#run(o"/>
</attvalues>
</node>
<node id="409" label="initWriters(IProject, ArrayList&lt;String&gt;, IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-62.611145" y="-106.872894" z="0.0"/>
<viz:size value="3.3929539"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="42"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Initialise le writer, principalement creer dans la fonction&#13; {@link StdAnalyse#run(IProgressMonitor)} avec le projet passe en&#13; parametre et le moniteur.&#13; &#13; @param targetProject&#13;            le projet permet de calculer les chemins dans lesquels les&#13;            fichier seront exportes&#13; @param monitor&#13; rmet de calculer les chemins dans lesquels les&#13;            fichier seront exportes&#13; @param monitor"/>
</attvalues>
</node>
<node id="410" label="getDepensProperties(Pair&lt;IJavaElement&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="138.7098" y="-6.4397388" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="411" label="ELEMENT_PROPERTIES_LENGTH_CODE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="65.54143" y="-231.66838" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="412" label="testHashCode()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-121.753" y="-201.16177" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Test method for {@link codeminer.core.data.Pair#hashCode()}."/>
</attvalues>
</node>
<node id="413" label="addExportDirectory()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="5.831316" y="300.08655" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Ajout un champ de texte permettant de définir le repertoire dans le&#10; projet ou seront exporter les fichiers&#10; champ de texte permettant de définir le repertoire dans le&#10; projet ou seront exporter les"/>
</attvalues>
</node>
<node id="414" label="log(IStatus)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="56.39856" y="202.56131" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Returns the shared log instance&#13; &#13; @return&#13; &#13; @return the shared log instance"/>
</attvalues>
</node>
<node id="415" label="finalizeExport()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="116.26872" y="-122.701035" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Finish some work and write the file.&#13; &#13; @return"/>
</attvalues>
</node>
<node id="416" label="removeElement(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-72.735596" y="-370.44003" z="0.0"/>
<viz:size value="2.665358"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="25"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Supprime un �l�ment et tous ses fils&#13; &#13; @param idElement&#13; @return true si l'�l�ment idElement �tait dans la base, et a donc �t�&#13;         suprimm�. Sinon la fonction retourne false et ne fait rien.&#13; t"/>
</attvalues>
</node>
<node id="417" label="ExtensionUtil">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-110.92369" y="12.324447" z="0.0"/>
<viz:size value="20.0"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="407"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@author Palmier"/>
</attvalues>
</node>
<node id="418" label="parserStatus">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-265.87164" y="264.0544" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="419" label="getKey(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-6.633972" y="36.90723" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="420" label="done(IJobChangeEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-253.56683" y="-7.5722523" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Notification that a job has completed execution, either due to cancelation, successful&#10; completion, or failure.  The event status object indicates how the job finished,&#10; and the reason for failure, if applicable.&#10; &#10; @param event the event details&#10; ow the job finished,&#10; and the reason for failure, i"/>
</attvalues>
</node>
<node id="421" label="exiting(String, String, Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-148.98682" y="-112.27163" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="422" label="listeners">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-63.494213" y="-308.9561" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private transient"/>
</attvalues>
</node>
<node id="423" label="currentMonitor">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-195.61406" y="-34.27257" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Cette element permet de montre la progression du travail."/>
</attvalues>
</node>
<node id="424" label="ELEMENT_PROPERTIES_COMMENTAIRE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="55.737743" y="-233.67387" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="425" label="getStringParameter()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-205.80505" y="156.3579" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Retourne les parametres globaux du plugin. Ils seront utilises dans&#13; toutes les etapes de l'analyse.&#13; &#13; @see MainConstants#P_GLOBAL_ARGUMENTS&#13; Ils seront utilises dans&#13; toutes les etapes de l'analyse"/>
</attvalues>
</node>
<node id="426" label="getChildren(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="381.6293" y="211.24557" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the child elements of the given parent element.&#10; &lt;p&gt;&#10; The difference between this method and &lt;code&gt;IStructuredContentProvider.getElements&lt;/code&gt; &#10; is that &lt;code&gt;getElements&lt;/code&gt; is called to obtain the &#10; tree viewer's root elements, whereas &lt;code&gt;getChildren&lt;/code&gt; is used&#10; to obtain the children of a given parent element in the tree (including a root).&#10; &lt;/p&gt;&#10; The result is not modified by the viewer.&#10;&#10; @param parentElement the parent element&#10; @return an array of child elements&#10; ified"/>
</attvalues>
</node>
<node id="427" label="fillOutputContent()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-276.245" y="247.34843" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="428" label="visit(ParameterizedType)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="256.9526" y="-39.14415" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Type node for a parameterized type (added in JLS3 API). These nodes are&#13; used for type references (as opposed to declarations of parameterized&#13; types.)&#13; &#13; ParameterizedType: Type &lt; Type { , Type } &gt;&#13; &#13; The first type may be a simple type or a qualified type; other kinds of&#13; types are meaningless.&#13; &#13; @see org.eclipse.jdt.core.dom.ASTVisitor#visit(org.eclipse.jdt.core.dom.ParameterizedType)&#13; ess."/>
</attvalues>
</node>
<node id="429" label="getCodeData()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="267.31213" y="81.68236" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
</attvalues>
</node>
<node id="430" label="getDefault()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="57.668903" y="127.04397" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Returns the shared instance.&#13; &#13; @return the shared instance"/>
</attvalues>
</node>
<node id="431" label="testAddParent()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-0.6310797" y="-380.86127" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="432" label="log(Level, String, Throwable)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-150.54787" y="-97.34463" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="433" label="InfoJavaElement(Map&lt;String, String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="135.53535" y="30.957745" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@param ruleCreate&#13;            La liste ruleCreate defini les types qui seront crees. Elle&#13;            definit aussi une fonction permettant d'obtenir le type d'un&#13;            element. Cette liste de parametres est importante pour&#13;            retrouver le parent d'un element, le parent recherche doit&#13;            avoir son type dans rulecreate.&#13; ouver le parent d'un element, le parent recherche doi"/>
</attvalues>
</node>
<node id="434" label="build(ICodeData)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="121.19877" y="-195.63823" z="0.0"/>
<viz:size value="8.081924"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="123"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="Main function, create the GDF.&#13; &#13; @param data&#13; @param elementTypes&#13; @return"/>
</attvalues>
</node>
<node id="435" label="getMenu(Control)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-353.8441" y="-143.65663" z="0.0"/>
<viz:size value="6.2485366"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="94"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="La fonction getMenu calcule dynamiquement le menu deroulant lors d'un&#13; clic sur le bouton codeminer dans la toolbar.&#13; &#13; @see org.eclipse.ui.IWorkbenchWindowPulldownDelegate#getMenu(org.eclipse.swt.widgets.Control)&#13; .&#13; &#13; @see org.eclipse.ui.IWorkbenchWindowPulldownDelegate#getMenu(org.eclipse.swt.wi"/>
</attvalues>
</node>
<node id="436" label="getChild(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="123.6064" y="-30.531935" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="La fonction getChild n'as pas été implementé car aucun algorithme n'a&#13; nécessité cette fonctionalité&#13; &#13; @see codeminer.api.IInfoElement#getChild(java.lang.Object)&#13; e n'a&#13; nécessité cette fonctionalit"/>
</attvalues>
</node>
<node id="437" label="getImage(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="80.89141" y="318.6863" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the image for the label of the given element.  The image&#10; is owned by the label provider and must not be disposed directly.&#10; Instead, dispose the label provider when no longer needed.&#10;&#10; @param element the element for which to provide the label image&#10; @return the image used to label the element, or &lt;code&gt;null&lt;/code&gt;&#10;   if there is no image for the given object&#10; image used to label the elem"/>
</attvalues>
</node>
<node id="438" label="setProgressMonitor(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="268.93295" y="210.91257" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="439" label="Pair(T, T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-17.670952" y="-184.29076" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="440" label="SCENARIO_CONST">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-320.199" y="-158.34177" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected static final"/>
</attvalues>
</node>
<node id="441" label="ELEMENT_PROPERTIES_LIBELLE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="57.042664" y="-245.0076" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="442" label="getDepensProperties(Pair&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-35.75772" y="-300.77982" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne les proprietes associees a la dependence entre l'element source&#13; et la methode a laquelle elle depend (idElementTarget). S'il n'y a pas de&#13; propriete correspondant a cette dependance, alors la methode retourne&#13; null.&#13; ). S'il n'y a pas de&#13; propriete correspondant a cette dependance, alors"/>
</attvalues>
</node>
<node id="443" label="getColumnImage(Object, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-414.64685" y="33.38453" z="0.0"/>
<viz:size value="3.1642451"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="37"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the label image for the given column of the given element.&#10;&#10; @param element the object representing the entire row, or &#10;    &lt;code&gt;null&lt;/code&gt; indicating that no input object is set&#10;    in the viewer&#10; @param columnIndex the zero-based index of the column in which&#10;   the label appears&#10; @return Image or &lt;code&gt;null&lt;/code&gt; if there is no image for the &#10;  given object at columnIndex&#10; rs&#10; @retur"/>
</attvalues>
</node>
<node id="444" label="parseString(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-36.18119" y="270.25836" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Splits the given string into a list of strings.&#10; This method is the converse of &lt;code&gt;createList&lt;/code&gt;. &#10; &lt;p&gt;&#10; Subclasses must implement this method.&#10; &lt;/p&gt;&#10;&#10; @param stringList the string&#10; @return an array of &lt;code&gt;String&lt;/code&gt;&#10; @see #createList&#10; d.&#10; &lt;/p&gt;&#10;&#10; @param stringList the string&#10; @return an"/>
</attvalues>
</node>
<node id="445" label="getLabel(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="120.78295" y="-28.50229" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="446" label="_dicoDepends">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-73.56357" y="-319.244" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="&lt;li&gt;key = nom de l'element &lt;li&gt;value = liste des dependances de&#13; l'elements, c'est a dire les elements qu'il utilise.&#13; element &lt;li&gt;value = liste des dependances de&#13; l'elements, c'est a dire les eleme"/>
</attvalues>
</node>
<node id="447" label="updateHeritsLink(String, String, String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="249.0009" y="-320.73648" z="0.0"/>
<viz:size value="3.7304118"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="49"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param n"/>
</attvalues>
</node>
<node id="448" label="parseString(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="46.868874" y="357.57767" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Splits the given string into a list of strings.&#10; This method is the converse of &lt;code&gt;createList&lt;/code&gt;. &#10; &lt;p&gt;&#10; Subclasses must implement this method.&#10; &lt;/p&gt;&#10;&#10; @param stringList the string&#10; @return an array of &lt;code&gt;String&lt;/code&gt;&#10; @see #createList&#10; d.&#10; &lt;/p&gt;&#10;&#10; @param stringList the string&#10; @return an"/>
</attvalues>
</node>
<node id="449" label="exiting(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-141.61519" y="-85.87814" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="450" label="setData(ICodeData)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="219.17493" y="89.13982" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="451" label="info(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-129.64513" y="-89.80905" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="452" label="data_repository">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-192.08925" y="-18.10474" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="453" label="CodeMinerJobListenner">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-245.80347" y="-16.07413" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="final"/>
</attvalues>
</node>
<node id="454" label="new Runnable() {...}">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-333.2328" y="-128.11754" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="6"/>
</attvalues>
</node>
<node id="455" label="ATTR_COMMENT">
<viz:color b="162" g="162" r="24"/>
<viz:position x="227.55273" y="-247.95277" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private final"/>
</attvalues>
</node>
<node id="456" label="getColumnImage(Object, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-228.40886" y="296.64026" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the label image for the given column of the given element.&#10;&#10; @param element the object representing the entire row, or &#10;    &lt;code&gt;null&lt;/code&gt; indicating that no input object is set&#10;    in the viewer&#10; @param columnIndex the zero-based index of the column in which&#10;   the label appears&#10; @return Image or &lt;code&gt;null&lt;/code&gt; if there is no image for the &#10;  given object at columnIndex&#10; rs&#10; @retur"/>
</attvalues>
</node>
<node id="457" label="setSource(IResource)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="189.54515" y="154.06505" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="458" label="setDynamicMode(boolean)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="42.74743" y="-156.72527" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Affecte le mode de l'exporteur, par defaut a faux.&#13; &#13; @param isDynamic"/>
</attvalues>
</node>
<node id="459" label="onChange(CodeDataChangesEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="88.58374" y="-122.15144" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Do not use."/>
</attvalues>
</node>
<node id="460" label="maxSeverityStatus(IStatus, IStatus)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-309.9863" y="262.9458" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="461" label="start(BundleContext)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="71.50025" y="204.77272" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The &lt;code&gt;AbstractUIPlugin&lt;/code&gt; implementation of this &lt;code&gt;Plugin&lt;/code&gt;&#10; method refreshes the plug-in actions.  Subclasses may extend this method,&#10; but must send super &lt;b&gt;first&lt;/b&gt;.&#10; {@inheritDoc}&#10; &#10; @since 3.0&#10; Subclasses may extend this method,&#10; but must send super &lt;b&gt;first&lt;/b&gt;.&#10; {@inheritDo"/>
</attvalues>
</node>
<node id="462" label="dispose()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-243.42963" y="321.60767" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Disposes of this content provider.  &#10; This is called by the viewer when it is disposed.&#10; &lt;p&gt;&#10; The viewer should not be updated during this call, as it is in the process&#10; of being disposed.&#10; &lt;/p&gt;&#10; e v"/>
</attvalues>
</node>
<node id="463" label="hashCode()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-103.56734" y="-202.04715" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Le hashcode d'un objet Pair est la somme des deux hashCode"/>
</attvalues>
</node>
<node id="464" label="getListType()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-78.41499" y="-317.01468" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne la liste des type disponibles."/>
</attvalues>
</node>
<node id="465" label="getCodeLength(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="119.33111" y="-20.187967" z="0.0"/>
<viz:size value="2.665358"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="25"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@param element&#13; @return"/>
</attvalues>
</node>
<node id="466" label="visit(SuperFieldAccess)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="303.4384" y="-63.49267" z="0.0"/>
<viz:size value="2.4481335"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="19"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Simple or qualified &quot;super&quot; field access expression AST node type. &lt;br&gt;&#13; SuperFieldAccess: &lt;br&gt;&#13; &lt;dd&gt;&#13; &lt;code&gt;   [ ClassName . ] super . Identifier &lt;/code&gt;&#13; &#13; @see FieldAccess for guidelines on handling other expressions that&#13;      resemble qualified names.&#13; @see FieldAccess for guidelines on handli"/>
</attvalues>
</node>
<node id="467" label="hasMoreElements()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="331.88483" y="238.38899" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="468" label="addImplementLink(String, String, String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="215.93196" y="-309.46103" z="0.0"/>
<viz:size value="2.8638089"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="30"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param n"/>
</attvalues>
</node>
<node id="469" label="createGraphAttribute(Document, Integer, String, String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="247.41739" y="-238.89738" z="0.0"/>
<viz:size value="2.4481335"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="19"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="Utility function in init().&#10; &#10; @param doc&#10; @param id&#10; @param title&#10; @param type&#10; @param defaultValue&#10; @return&#10; ction in init().&#10; &#10; @param doc&#10; @param id&#10; @param title&#10; @param type&#10; @param defaultValu"/>
</attvalues>
</node>
<node id="470" label="doFillIntoGrid(Composite, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="38.09741" y="403.8472" z="0.0"/>
<viz:size value="2.8229685"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="29"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Fills this field editor's basic controls into the given parent.&#10; &lt;p&gt;&#10; Subclasses must implement this method to create the controls&#10; for this field editor.&#10; &lt;/p&gt;&#10;&#10; @param parent the composite used as a parent for the basic controls;&#10;&#9;the parent's layout must be a &lt;code&gt;GridLayout&lt;/code&gt;&#10; @param numColumns the number of columns&#10; s;&#10;&#9;the parent's layout must be a &lt;code&gt;GridLayout&lt;/code&gt;&#10; @param numC"/>
</attvalues>
</node>
<node id="471" label="DEPENDS_PROPERTIES_COMMENTAIRE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="65.51973" y="-225.76208" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="472" label="visit(ThisExpression)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="258.6567" y="-44.389267" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Visits the given type-specific AST node.&#10; &lt;p&gt;&#10; The default implementation does nothing and return true.&#10; Subclasses may reimplement.&#10; &lt;/p&gt;&#10;&#10; @param node the node to visit&#10; @return &lt;code&gt;true&lt;/code&gt; if the children of this node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node should&#10; be skipped&#10; is node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node"/>
</attvalues>
</node>
<node id="473" label="visit(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="261.80768" y="84.35222" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
</attvalues>
</node>
<node id="474" label="checkStateChange(boolean)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-257.42334" y="-15.281359" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@param finish"/>
</attvalues>
</node>
<node id="475" label="getExportFormats()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-201.16106" y="113.50709" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="@return"/>
</attvalues>
</node>
<node id="476" label="info_JavaProvider">
<viz:color b="162" g="162" r="24"/>
<viz:position x="214.674" y="34.183434" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="477" label="entering(String, String, Object[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-128.82117" y="-117.5435" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="478" label="METHOD_TYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="81.47991" y="75.76733" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="479" label="Reader">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-69.42217" y="147.55392" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="public abstract"/>
</attvalues>
</node>
<node id="480" label="setExportFormats(List&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-249.01968" y="189.46625" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="@param truePrefs"/>
</attvalues>
</node>
<node id="481" label="addDepends_Triggers_Before(Pair&lt;String&gt;, Map&lt;String, Object&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-25.488796" y="-316.94852" z="0.0"/>
<viz:size value="3.6320732"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="47"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="@param dependsKey&#13; @param newDependanceProperties&#13;            nouvelle propri�t� de d�pendance pour la d�pendance dependsKey&#13;            les valeur des propri�t� de newDependanceProperties sont&#13;            modifi� par r�f�rence&#13;         les valeur des propri�t� de newDependanceProperties sont"/>
</attvalues>
</node>
<node id="482" label="content">
<viz:color b="162" g="162" r="24"/>
<viz:position x="333.81" y="192.94179" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="483" label="setParameter(String[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="219.76282" y="-264.4781" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Passe les parametres globaux aux fragments de plugin."/>
</attvalues>
</node>
<node id="484" label="idParserSelected">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-288.12927" y="149.40822" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="485" label="setExportDirectory(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-229.23297" y="200.06517" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Sets the export directory&#13; @param dir"/>
</attvalues>
</node>
<node id="486" label="typeStatus">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-267.2982" y="269.2905" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="487" label="addInterface(String, IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="252.93192" y="-77.30264" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="488" label="addDepends(Pair&lt;String&gt;, Map&lt;String, Object&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-11.187704" y="-315.45074" z="0.0"/>
<viz:size value="2.6274748"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="24"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Ajoute une dependance entre l'element source idElementSource et&#13; idElementTarget. Si la dependance n'existait pas, les proprietes sont&#13; ajoutees pour decrire la dependance, sinon les nouvelles proprietes ne&#13; sont pas prises en compte, cependant le nombre de dependances est&#13; incremente de 1.&#13; &#13; Note: Il est possible de modifier les proprietes d'une dependance en&#13; modifiant le dictionnaire des proprietes retourne par&#13; getDepensProperties().&#13; d'une dependance en&#13; modifiant le dictionnaire des prop"/>
</attvalues>
</node>
<node id="489" label="createFieldEditors()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="1.9303133" y="307.85312" z="0.0"/>
<viz:size value="2.414441"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="18"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Creates the field editors."/>
</attvalues>
</node>
<node id="490" label="isValid(IProject)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-4.955104" y="87.40487" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Return true if the project can be analyze or false if it can't be.&#13; &#13; @param project&#13; @return"/>
</attvalues>
</node>
<node id="491" label="ListennerClass">
<viz:color b="162" g="24" r="93"/>
<viz:position x="60.339" y="381.89703" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="492" label="Constants">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-90.965096" y="174.68097" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Constant definitions for plug-in preferences"/>
</attvalues>
</node>
<node id="493" label="ELEMENT_PROPERTIES_MODIFIER">
<viz:color b="162" g="162" r="24"/>
<viz:position x="71.13604" y="-230.48813" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="494" label="outputLabel">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-266.94144" y="256.12506" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="495" label="PairLabelProvider">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-250.11244" y="308.83752" z="0.0"/>
<viz:size value="2.8229685"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="29"/>
<attvalue id="2" value="static"/>
</attvalues>
</node>
<node id="496" label="instance">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-140.095" y="-118.25233" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private static"/>
</attvalues>
</node>
<node id="497" label="MainConstants">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-104.12974" y="260.2274" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Constant definitions for plug-in preferences"/>
</attvalues>
</node>
<node id="498" label="finalizeExport()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="26.78245" y="-173.32718" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public abstract"/>
<attvalue id="3" value="Finish some work and write the file.&#13; &#13; @return"/>
</attvalues>
</node>
<node id="499" label="StandardLogger()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-11.229937" y="-11.440617" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="500" label="addElementProperties(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="197.15813" y="-87.35496" z="0.0"/>
<viz:size value="5.4712725"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="81"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="501" label="getStartingPage()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-285.5551" y="160.91223" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the first page to be shown in this wizard.&#10;&#10; @return the first wizard page"/>
</attvalues>
</node>
<node id="502" label="ResultAreaDialog">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-416.4043" y="0.82890135" z="0.0"/>
<viz:size value="13.650406"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="205"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@author jpalmier"/>
</attvalues>
</node>
<node id="503" label="nodesReferences">
<viz:color b="162" g="162" r="24"/>
<viz:position x="238.77274" y="-246.23459" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
</attvalues>
</node>
<node id="504" label="canFinish()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-291.0298" y="159.99522" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns whether this wizard could be finished without further user&#10; interaction.&#10; &lt;p&gt;&#10; The result of this method is typically used by the wizard container to enable&#10; or disable the Finish button.&#10; &lt;/p&gt;&#10;&#10; @return &lt;code&gt;true&lt;/code&gt; if the wizard could be finished,&#10;   and &lt;code&gt;false&lt;/code&gt; otherwise&#10; &gt;&#10;&#10; @return &lt;code&gt;true&lt;/code&gt; if the wizard could be finished,&#10;   and &lt;code&gt;false&lt;/code&gt; otherwise"/>
</attvalues>
</node>
<node id="505" label="ruleCreate">
<viz:color b="162" g="162" r="24"/>
<viz:position x="165.11066" y="111.42134" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="506" label="isPageComplete()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-313.0693" y="280.79214" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The &lt;code&gt;WizardPage&lt;/code&gt; implementation of this &lt;code&gt;IWizard&lt;/code&gt; method &#10; returns the value of an internal state variable set by&#10; &lt;code&gt;setPageComplete&lt;/code&gt;. Subclasses may extend.&#10; e value"/>
</attvalues>
</node>
<node id="507" label="extensionName">
<viz:color b="162" g="162" r="24"/>
<viz:position x="21.961601" y="363.38535" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="508" label="addPages()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-299.50192" y="193.99313" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The &lt;code&gt;Wizard&lt;/code&gt; implementation of this &lt;code&gt;IWizard&lt;/code&gt;&#10; method does nothing. Subclasses should extend if extra pages need to be&#10; added before the wizard opens. New pages should be added by calling&#10; &lt;code&gt;addPage&lt;/code&gt;.&#10;  to be&#10; added before the wizard opens. New pages should be added"/>
</attvalues>
</node>
<node id="509" label="log">
<viz:color b="162" g="162" r="24"/>
<viz:position x="37.8232" y="-160.5123" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected static"/>
</attvalues>
</node>
<node id="510" label="join(Object[], String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-42.43111" y="92.60993" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Function from Keith Devens .com for join String&#13; &#13; @param pieces&#13; @param sep&#13; @return Chaine concatenee&#13; ion from Keith Devens .com for join String&#13; &#13; @param pieces&#13; @param sep&#13; @return Chaine concat"/>
</attvalues>
</node>
<node id="511" label="extension">
<viz:color b="162" g="162" r="24"/>
<viz:position x="93.67966" y="-119.314316" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public final"/>
</attvalues>
</node>
<node id="512" label="edgesCount">
<viz:color b="162" g="162" r="24"/>
<viz:position x="244.61635" y="-255.68045" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="513" label="getElements(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-407.5727" y="35.84802" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the elements to display in the viewer &#10; when its input is set to the given element. &#10; These elements can be presented as rows in a table, items in a list, etc.&#10; The result is not modified by the viewer.&#10; &lt;p&gt;&#10; &lt;b&gt;NOTE:&lt;/b&gt; For instances where the viewer is displaying a tree&#10; containing a single 'root' element it is still necessary that the&#10; 'input' does not return &lt;i&gt;itself&lt;/i&gt; from this method. This leads&#10; to recursion issues (see bug 9262).&#10; &lt;/p&gt;&#10; @param inputElement the input element&#10; @return the array of elements to display in the viewer&#10; /p&gt;&#10; @param inputElement the input element"/>
</attvalues>
</node>
<node id="514" label="tearDown()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-17.494678" y="-369.2736" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@throws java.lang.Exception"/>
</attvalues>
</node>
<node id="515" label="CodeData">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-51.343815" y="-328.57108" z="0.0"/>
<viz:size value="20.0"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="529"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@author Palmier"/>
</attvalues>
</node>
<node id="516" label="checkStateChanged(CheckStateChangedEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-279.65442" y="254.95876" z="0.0"/>
<viz:size value="3.1642451"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="37"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Notifies of a change to the checked state of an element.&#10;&#10; @param event event object describing the change&#10;  of a change to the checked state of an element.&#10;&#10; @param event event object describing the"/>
</attvalues>
</node>
<node id="517" label="isStarted">
<viz:color b="162" g="162" r="24"/>
<viz:position x="153.72714" y="125.066986" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="518" label="addImplement(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-10.465468" y="-340.3104" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Ajoute un h�ritage � la base. &lt;br&gt;&#13; Il n'y a pas de verification sur idElementSource ni sur idElementHeriter.&#13; idElementSource ou idElementHeriter peut ne pas faire partie de la base&#13; &#13; @param idElementSource&#13; @param idElementTarget&#13; ementHeriter peut ne pas faire partie de la base&#13; &#13; @param idElem"/>
</attvalues>
</node>
<node id="519" label="getElements(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-237.37616" y="320.7837" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the elements to display in the viewer &#10; when its input is set to the given element. &#10; These elements can be presented as rows in a table, items in a list, etc.&#10; The result is not modified by the viewer.&#10; &lt;p&gt;&#10; &lt;b&gt;NOTE:&lt;/b&gt; For instances where the viewer is displaying a tree&#10; containing a single 'root' element it is still necessary that the&#10; 'input' does not return &lt;i&gt;itself&lt;/i&gt; from this method. This leads&#10; to recursion issues (see bug 9262).&#10; &lt;/p&gt;&#10; @param inputElement the input element&#10; @return the array of elements to display in the viewer&#10; /p&gt;&#10; @param inputElement the input element"/>
</attvalues>
</node>
<node id="520" label="STATUS_OK">
<viz:color b="162" g="162" r="24"/>
<viz:position x="229.3617" y="-257.50555" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="protected static final"/>
</attvalues>
</node>
<node id="521" label="data_repository">
<viz:color b="162" g="162" r="24"/>
<viz:position x="254.52182" y="-51.799057" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="522" label="getIcon()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-203.26788" y="-41.404766" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="523" label="testRunIProgressMonitor()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="251.20808" y="134.70892" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Test method for&#13; {@link deprecated.Etape1#run(org.eclipse.core.runtime.IProgressMonitor)}."/>
</attvalues>
</node>
<node id="524" label="createExporterTable(Composite, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-435.42966" y="11.891854" z="0.0"/>
<viz:size value="2.4825845"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="20"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="525" label="instance">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-14.710022" y="5.276029" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private static"/>
</attvalues>
</node>
<node id="526" label="contain(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="125.01513" y="-18.943377" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="527" label="ExtendedMethodDependanceDetector">
<viz:color b="162" g="24" r="93"/>
<viz:position x="274.89157" y="-57.33314" z="0.0"/>
<viz:size value="20.0"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="529"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@author Palmier"/>
</attvalues>
</node>
<node id="528" label="getPackageNbCodelines(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="200.69217" y="-315.24628" z="0.0"/>
<viz:size value="2.742982"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="27"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param id&#10; @return"/>
</attvalues>
</node>
<node id="529" label="getDirectory(IProject, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-69.90391" y="107.87662" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Retourne la reference du repertoire directory dans currentProject.&#13; Si directory commence par &quot;$project/&quot; alors le repertoire fait partie&#13; du projet courant, sinon il peut etre partout dans le systeme.&#13; &#13; @param currentProject&#13;            un projet != null&#13; @param directory&#13;            nom du repertoire != null&#13; @return Chemin du repertoire directory&#13; ll&#13; @param directory&#13;            nom du reper"/>
</attvalues>
</node>
<node id="530" label="ParserJava">
<viz:color b="162" g="24" r="93"/>
<viz:position x="172.56798" y="128.82405" z="0.0"/>
<viz:size value="18.734266"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="280"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="&lt;dd&gt;L'Etape1 est une extension pour analyser les ressources Java&#13; (IJavaElement ou IResource) et produire un element CodeData,&lt;/dd&gt;&#13; &lt;p&gt;&#13; &lt;i&gt; codeData contenant des informations sur les elements (classe, methode,&#13; package ...) ainsi que les relations entre ces elements (implementation,&#13; heritage, dependance...) du projet analyse. &lt;/i&gt;&#13; &lt;/p&gt;&#13; &#13; @author Sebastien Heymann et Jeremy Palmier&#13; &#13; age, d"/>
</attvalues>
</node>
<node id="531" label="setWriterData(ICodeData)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="16.169624" y="-147.96738" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="{@inheritDoc}&#13; &#13; @see codeminer.api.IExporter#setWriterData(codeminer.api.ICodeData)"/>
</attvalues>
</node>
<node id="532" label="getNameIdHashMap(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-102.197586" y="-6.394397" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="533" label="EnumState">
<viz:color b="162" g="24" r="93"/>
<viz:position x="299.01114" y="290.3407" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="14"/>
</attvalues>
</node>
<node id="534" label="addParent_trigger_after(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-21.608648" y="-346.2759" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="535" label="_dicoElement">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-63.312828" y="-298.91342" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="&lt;li&gt;key = nom de l'element &lt;li&gt;value = liste des proprietes pour chaque&#13; element"/>
</attvalues>
</node>
<node id="536" label="getChild(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-47.488743" y="-304.03607" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne les fils de l'élément parent pour la relation contenant/contenue&#13; &#13; @param elementParent&#13; @return&#13;  les fils de l'élément parent pour la relation contenant/contenue&#13; &#13; @param elementParent"/>
</attvalues>
</node>
<node id="537" label="init(IWorkbench)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="9.045028" y="272.6974" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Initializes this preference page for the given workbench.&#10; &lt;p&gt;&#10; This method is called automatically as the preference page is being created&#10; and initialized. Clients must not call this method.&#10; &lt;/p&gt;&#10;&#10; @param workbench the workbench&#10; reated&#10; and initialized. Clients must not call this method.&#10; &lt;/p&gt;"/>
</attvalues>
</node>
<node id="538" label="window">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-247.84871" y="-217.39488" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="539" label="list_exporter_status">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-396.3972" y="-12.648153" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="540" label="setWriterData(ICodeData)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="28.656805" y="-71.15585" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="3" value="Affecte les donnees a exporter.&#13; &#13; @param data&#13; @throws Les&#13;             types d'elements a exporter passes en preferences ne sont pas&#13;             presents dans les donnees parsees.&#13; ments a exporte"/>
</attvalues>
</node>
<node id="541" label="addEventListener(CodeDataChangesListener)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-40.16721" y="-282.01065" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="542" label="testSetProgressMonitor()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="337.37762" y="188.51088" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="543" label="testAddElement()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-46.37466" y="-389.01395" z="0.0"/>
<viz:size value="2.414441"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="18"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Test method for&#13; {@link codeminer.core.data.CodeData#addElement(java.lang.String, java.lang.String, Map)}&#13; .&#13; d for&#13; {@link codeminer.core.data.CodeData#addElement(java.lang.String, java.lang.String,"/>
</attvalues>
</node>
<node id="544" label="ATTR_CODELINES">
<viz:color b="162" g="162" r="24"/>
<viz:position x="250.04633" y="-254.44069" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private final"/>
</attvalues>
</node>
<node id="545" label="mouseDown(MouseEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-246.60912" y="238.47765" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Sent when a mouse button is pressed.&#10; The default behavior is to do nothing.&#10;&#10; @param e an event containing information about the mouse button press&#10; behavior is to do nothing.&#10;&#10; @param e an event co"/>
</attvalues>
</node>
<node id="546" label="getInstance(boolean)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-26.402225" y="-39.77054" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public static synchronized"/>
<attvalue id="3" value="Gere le choix du logger par parametre.&#10; &#10; @param debug&#10; @return instance de logger"/>
</attvalues>
</node>
<node id="547" label="EnumFileContentJava">
<viz:color b="162" g="24" r="93"/>
<viz:position x="260.3125" y="212.05948" z="0.0"/>
<viz:size value="3.0759296"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="35"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Enumere tous les elements d'un projet Java. Plusieur filtres sont effectues&#13; sur ces elements. &lt;li&gt;1. un filtre sur les types.&#13; &lt;p&gt;&#13; Ce filtre se trouve dans isEnable. Si le type d'un element n'est pas dans les&#13; type à retourner, celui ci ne sera pas retourne. Cependant &lt;b&gt;les fils de cet&#13; element pourront etre analyses&lt;/b&gt;.&#13; &lt;/p&gt;&#13; &lt;/p&gt; &lt;li&gt;1. un filtre sur les éléments exclus.&#13; &lt;p&gt;&#13; Il est possible d'exclure des element en passant au constructeur la liste des&#13; élement exclus. Un element exclu ne sera pas retourne. Au contraire du filtre&#13; sur les types,&lt;b&gt; les fils de l'element exclu ne seront pas analyses&lt;/b&gt;.&#13; &lt;/p&gt;&#13; &#13; @author Sebastien Heymann et Jérémy Palmier&#13; &#13; l'element exclu ne seron"/>
</attvalues>
</node>
<node id="548" label="visit(SuperMethodInvocation)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="288.47565" y="-82.13611" z="0.0"/>
<viz:size value="2.742982"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="27"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="&lt;p&gt;&#13; Simple or qualified &quot;super&quot; method invocation expression AST node type.&#13; For JLS2:&#13; &#13; SuperMethodInvocation:&#13; &lt;/p&gt;&#13; &lt;code&gt; &#13;[ ClassName . ] super . Identifier&#13;&lt;dd&gt;  ( [ Expression { , Expression } ] )&#13;&lt;/code&gt;&#13; &#13; @see org.eclipse.jdt.core.dom.ASTVisitor#visit(org.eclipse.jdt.core.dom.SuperMethodInvocation)&#13; &#13; &#13; @see org.eclipse.jdt.core.dom.ASTVisitor#visit(org.eclipse.jdt.core.dom.SuperMetho"/>
</attvalues>
</node>
<node id="550" label="visit(VariableDeclarationFragment)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="262.79947" y="-35.01635" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Visits the given type-specific AST node.&#10; &lt;p&gt;&#10; The default implementation does nothing and return true.&#10; Subclasses may reimplement.&#10; &lt;/p&gt;&#10;&#10; @param node the node to visit&#10; @return &lt;code&gt;true&lt;/code&gt; if the children of this node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node should&#10; be skipped&#10; is node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node"/>
</attvalues>
</node>
<node id="551" label="isExportFormat(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="98.29528" y="-117.302536" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Indique si la chaine passee en parametre correspond a un format existant.&#13; &#13; @param format&#13; @return Format existe&#13; haine passee en parametre correspond a un format existant.&#13; &#13; @param format&#13; @return"/>
</attvalues>
</node>
<node id="552" label="setParameter(String[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="14.025747" y="-12.479841" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Passe les parametres globaux aux fragments de plugin."/>
</attvalues>
</node>
<node id="554" label="createDialogArea(Composite)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-433.0489" y="4.4888406" z="0.0"/>
<viz:size value="2.381536"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="17"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Creates and returns the contents of the upper part of this dialog (above&#10; the button bar).&#10; &lt;p&gt;&#10; The &lt;code&gt;Dialog&lt;/code&gt; implementation of this framework method creates&#10; and returns a new &lt;code&gt;Composite&lt;/code&gt; with no margins and spacing.&#10; Subclasses should override.&#10; &lt;/p&gt;&#10; &#10; @param parent&#10;            The parent composite to contain the dialog area&#10; @return the dialog area control&#10; arent"/>
</attvalues>
</node>
<node id="555" label="getText(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="70.123055" y="317.24274" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the text for the label of the given element.&#10;&#10; @param element the element for which to provide the label text&#10; @return the text string used to label the element, or &lt;code&gt;null&lt;/code&gt;&#10;   if there is no text label for the given object&#10;  used to label the element, or &lt;code&gt;null&lt;/code&gt;&#10;   if th"/>
</attvalues>
</node>
<node id="556" label="lastActiveScenario">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-320.5896" y="-169.28923" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="557" label="listExporter">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-191.14906" y="-26.512001" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="558" label="isStarted()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="149.46854" y="127.883156" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="559" label="CodeDataChangesListener">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-25.585197" y="-258.48337" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public interface"/>
</attvalues>
</node>
<node id="561" label="patternSingleValue">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-126.49904" y="184.25967" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="protected static"/>
</attvalues>
</node>
<node id="562" label="setExportableTypes(List&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-241.42314" y="191.5597" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="@param truePrefs"/>
</attvalues>
</node>
<node id="563" label="testInitContentProvider()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="341.7013" y="193.59554" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="564" label="accept(IElementVisitor&lt;Object&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="295.44907" y="211.50098" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="565" label="getidElementTarget()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-14.329548" y="191.11569" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="566" label="DebugLogger">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-135.34831" y="-103.80711" z="0.0"/>
<viz:size value="10.077793"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="153"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Force l'affichage de tous les messages de log dans System.out.&#10; &#10; @author Sebastien Heymann&#10; &#10; &#10;         Les classe de Log sont déprecated, les log sont définie dans les&#10;         plugin eclipse voir :&#10;         http://wiki.eclipse.org/FAQ_How_do_I_use_the_platform_logging_facility&#10;         %3F&#10;         http://publib.boulder.ibm.com/infocenter/ledoc/v6r11/index.jsp?topic&#10;         =/com.ibm.rcp.tools.doc.appdev/serviceability_eclipselogging.html&#10; c/v6r11/index.jsp?topic&#10;         =/com.ibm.rcp.tool"/>
</attvalues>
</node>
<node id="567" label="run()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-335.0165" y="-195.8784" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="569" label="getNewInputObject()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="55.174404" y="395.5482" z="0.0"/>
<viz:size value="2.4481335"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="19"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Creates and returns a new item for the list.&#10; &lt;p&gt;&#10; Subclasses must implement this method.&#10; &lt;/p&gt;&#10;&#10; @return a new item&#10; s a new item for the list.&#10; &lt;p&gt;&#10; Subclasses must implement this method.&#10; &lt;/p&gt;&#10;&#10; @"/>
</attvalues>
</node>
<node id="570" label="addListener(ILabelProviderListener)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="75.49777" y="322.17914" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Adds a listener to this label provider. &#10; Has no effect if an identical listener is already registered.&#10; &lt;p&gt;&#10; Label provider listeners are informed about state changes &#10; that affect the rendering of the viewer that uses this label provider.&#10; &lt;/p&gt;&#10;&#10; @param listener a label provider listener&#10; ing of"/>
</attvalues>
</node>
<node id="572" label="add(ICodeData, Collection&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="32.92709" y="-319.26663" z="0.0"/>
<viz:size value="2.9895487"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="33"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Cette fonction ajoute � la base, l'ensemble des �lements listElement&#13; provenant de data.&#13; &#13; @param data&#13; @param listElement&#13; a base, l'ensemble des �lements listElement&#13; provenant de data.&#13; &#13; @param"/>
</attvalues>
</node>
<node id="573" label="log">
<viz:color b="162" g="162" r="24"/>
<viz:position x="220.41075" y="42.555347" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected static"/>
</attvalues>
</node>
<node id="574" label="isDynamicMode">
<viz:color b="162" g="162" r="24"/>
<viz:position x="48.79882" y="-155.331" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="575" label="_dicoChild">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-58.865532" y="-306.0665" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="576" label="heritsReferences">
<viz:color b="162" g="162" r="24"/>
<viz:position x="232.45108" y="-246.99463" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
</attvalues>
</node>
<node id="577" label="endVisit(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="251.35925" y="40.223583" z="0.0"/>
<viz:size value="3.119851"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="36"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="578" label="initializeDefaultPreferences()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-23.926338" y="116.82617" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="This method is called by the preference initializer to initialize default&#10; preference values. Clients should get the correct node for their &#10; bundle and then set the default values on it. For example:&#10; &lt;pre&gt;&#10;&#9;&#9;&#9;public void initializeDefaultPreferences() {&#10;&#9;&#9;&#9;&#9;Preferences node = new DefaultScope().getNode(&quot;my.bundle.id&quot;);&#10;&#9;&#9;&#9;&#9;node.put(key, value);&#10;&#9;&#9;&#9;}&#10; &lt;/pre&gt;&#10; &lt;p&gt;&#10; &lt;em&gt;Note: Clients should only set default preference values for their&#10; own bundle.&lt;/em&gt;&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; &lt;em&gt;Note:&lt;/em&gt; Clients should not call this method. It will be called&#10; automatically by the preference initializer when the appropriate default&#10; preference node is accessed.&#10; &lt;/p&gt;&#10; lly by the preference initializer when the appropr"/>
</attvalues>
</node>
<node id="579" label="CodeData(int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-70.3392" y="-264.38538" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="581" label="logrb(Level, String, String, String, String, Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-121.20476" y="-109.98674" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="582" label="MyListEditor">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-26.98387" y="281.40674" z="0.0"/>
<viz:size value="2.9895487"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="33"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="583" label="selectionChanged(SelectionChangedEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-303.42245" y="301.5268" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Notifies that the selection has changed.&#10;&#10; @param event event object describing the change"/>
</attvalues>
</node>
<node id="584" label="widgetSelected(SelectionEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="63.724583" y="389.94113" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Sent when selection occurs in the control.&#10; The default behavior is to do nothing.&#10;&#10; @param e an event containing information about the selection&#10;  default behavior is to do nothing.&#10;&#10; @param e an ev"/>
</attvalues>
</node>
<node id="585" label="projectLabel">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-285.83612" y="256.404" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="586" label="plugin">
<viz:color b="162" g="162" r="24"/>
<viz:position x="65.67752" y="179.95358" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="private static"/>
</attvalues>
</node>
<node id="587" label="doStore()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="29.956963" y="361.87286" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Stores the preference value from this field editor into&#10; the preference store.&#10; &lt;p&gt;&#10; Subclasses must implement this method to save the entered value&#10; into the preference store.&#10; &lt;/p&gt;&#10;  Subclasses mus"/>
</attvalues>
</node>
<node id="588" label="currentParent">
<viz:color b="162" g="162" r="24"/>
<viz:position x="282.84518" y="-36.176136" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="589" label="DEPENDS_PROPERTIES_NB">
<viz:color b="162" g="162" r="24"/>
<viz:position x="60.65102" y="-232.6076" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="590" label="data">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-31.389307" y="160.98717" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="591" label="testAddDepensProperties()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-20.821121" y="-291.94653" z="0.0"/>
<viz:size value="4.0856957"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="56"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="592" label="getIcon()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-266.2925" y="-56.342213" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public abstract"/>
</attvalues>
</node>
<node id="593" label="getParent(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="371.21335" y="207.77075" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the parent for the given element, or &lt;code&gt;null&lt;/code&gt; &#10; indicating that the parent can't be computed. &#10; In this case the tree-structured viewer can't expand&#10; a given node correctly if requested.&#10;&#10; @param element the element&#10; @return the parent element, or &lt;code&gt;null&lt;/code&gt; if it&#10;   has none or if the parent cannot be computed&#10; urn the parent element, or &lt;code&gt;null&lt;/code&gt; if it&#10;   has non"/>
</attvalues>
</node>
<node id="594" label="init(IWorkbenchWindow)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-324.59988" y="-156.05098" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Initializes this action delegate with the workbench window it will work in.&#10;&#10; @param window the window that provides the context for this delegate&#10; nch window it will work in.&#10;&#10; @param window the win"/>
</attvalues>
</node>
<node id="595" label="Page">
<viz:color b="162" g="24" r="93"/>
<viz:position x="27.98356" y="133.83043" z="0.0"/>
<viz:size value="2.665358"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="25"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="596" label="getInstance()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="22.794327" y="-27.830002" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public static synchronized"/>
<attvalue id="3" value="Cree le singleton du bon logger selon la preference de debug.&#10; &#10; @see codeminer.preferences.MainConstants#P_DEBUG_MODE&#10; @return instance de logger&#10; nce de debug.&#10; &#10; @see codeminer.preferences.MainCon"/>
</attvalues>
</node>
<node id="597" label="getListIdExporter()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-277.35455" y="222.83351" z="0.0"/>
<viz:size value="2.381536"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="17"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="598" label="setListType(ArrayList&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-3.223097" y="-144.84839" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="599" label="new MouseAdapter() {...}">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-247.21652" y="274.86862" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="15"/>
</attvalues>
</node>
<node id="600" label="isLabelProperty(Object, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="69.59652" y="323.21924" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns whether the label would be affected &#10; by a change to the given property of the given element.&#10; This can be used to optimize a non-structural viewer update.&#10; If the property mentioned in the update does not affect the label,&#10; then the viewer need not update the label.&#10;&#10; @param element the element&#10; @param property the property&#10; @return &lt;code&gt;true&lt;/code&gt; if the label would be affected,&#10;    and &lt;code&gt;false&lt;/code&gt; if it would be unaffected&#10; e&gt;true&lt;/code&gt; if the label would be affected,&#10;    a"/>
</attvalues>
</node>
<node id="601" label="clear()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-72.69096" y="-309.40796" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Cette fonction suprime tous les �l�ments de la base."/>
</attvalues>
</node>
<node id="602" label="mouseDown(MouseEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-325.93097" y="310.1408" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Sent when a mouse button is pressed.&#10; The default behavior is to do nothing.&#10;&#10; @param e an event containing information about the mouse button press&#10; behavior is to do nothing.&#10;&#10; @param e an event co"/>
</attvalues>
</node>
<node id="603" label="checkbox_table_type">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-276.0323" y="261.1314" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="604" label="new Runnable() {...}">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-316.38644" y="-192.88802" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="6"/>
</attvalues>
</node>
<node id="605" label="getDepensProperties(Pair&lt;T&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="79.57453" y="-272.4614" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="606" label="createButtonsForButtonBar(Composite)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-389.95953" y="5.3267417" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Adds buttons to this dialog's button bar.&#10; &lt;p&gt;&#10; The &lt;code&gt;Dialog&lt;/code&gt; implementation of this framework method adds&#10; standard ok and cancel buttons using the &lt;code&gt;createButton&lt;/code&gt;&#10; framework method. These standard buttons will be accessible from&#10; &lt;code&gt;getCancelButton&lt;/code&gt;, and &lt;code&gt;getOKButton&lt;/code&gt;.&#10; Subclasses may override.&#10; &lt;/p&gt;&#10; &#10; @param parent&#10;            the button bar composite"/>
</attvalues>
</node>
<node id="607" label="contentProvider">
<viz:color b="162" g="162" r="24"/>
<viz:position x="275.027" y="243.71623" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="608" label="logp(Level, String, String, String, Throwable)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-126.99293" y="-85.93642" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="609" label="logp(Level, String, String, String, Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-151.29134" y="-107.460724" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="610" label="postWarningMessage(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-324.42526" y="-187.48228" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="611" label="AbstractExporter">
<viz:color b="162" g="24" r="93"/>
<viz:position x="54.275227" y="-177.89423" z="0.0"/>
<viz:size value="18.538698"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="277"/>
<attvalue id="2" value="public abstract"/>
<attvalue id="3" value="Classe de base des extension permettant l'exportation du codeAnalyse.&#13; &#13; @author Sebastien Heymann et Jeremy Palmier&#13; @see IExporter&#13; @see CodeDataChangesListener&#13; lyse.&#13; &#13; @author Sebastien Heyman"/>
</attvalues>
</node>
<node id="612" label="data">
<viz:color b="162" g="162" r="24"/>
<viz:position x="71.258865" y="-170.74086" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="613" label="getImageDescriptor(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="57.88736" y="181.98727" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Returns an image descriptor for the image file at the given plug-in&#13; relative path.&#13; &#13; @param path&#13;            the path&#13; @return the image descriptor&#13; he given plug-in&#13; relative path.&#13; &#13; @param path"/>
</attvalues>
</node>
<node id="614" label="setSource(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="180.5566" y="149.07013" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="615" label="fillChooseProject()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-314.1058" y="285.4772" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="616" label="inputChanged(Viewer, Object, Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-239.0656" y="315.32956" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Notifies this content provider that the given viewer's input&#10; has been switched to a different element.&#10; &lt;p&gt;&#10; A typical use for this method is registering the content provider as a listener&#10; to changes on the new input (using model-specific means), and deregistering the viewer &#10; from the old input. In response to these change notifications, the content provider&#10; should update the viewer (see the add, remove, update and refresh methods on the viewers).&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; The viewer should not be updated during this call, as it might be in the process&#10; of being disposed.&#10; &lt;/p&gt;&#10;&#10; @param viewer the viewer&#10; @param oldInput the old input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   did not previously have an input&#10; @param newInput the new input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   does not have an input&#10; param newInput the new input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   does not"/>
</attvalues>
</node>
<node id="617" label="ParserJava()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="125.09165" y="99.02547" z="0.0"/>
<viz:size value="2.6274748"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="24"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Construction de l'instance du parseur Java."/>
</attvalues>
</node>
<node id="618" label="CLASS_TYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="86.69688" y="79.642006" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="619" label="fileChooser">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-262.1941" y="269.90955" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="620" label="reset()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="309.97803" y="232.65282" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="621" label="currentProject">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-321.49536" y="-150.32953" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="622" label="getLabelExtension(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-93.121704" y="24.685783" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Return the label associate to the extensionId or returns null if the&#13; extension configured does not exist.&#13; &#13; @param extensionId&#13; @return&#13; sionId or returns null if the&#13; extension configured does not"/>
</attvalues>
</node>
<node id="623" label="Page()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="54.053513" y="139.85767" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="624" label="codeminer.api.ui">
<viz:color b="24" g="24" r="162"/>
<viz:position x="-261.0886" y="-61.185974" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="package"/>
<attvalue id="1" value="16"/>
</attvalues>
</node>
<node id="625" label="findMostSevere()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-319.14682" y="270.93396" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="626" label="Pair&lt;T&gt;">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-75.87011" y="-211.16986" z="0.0"/>
<viz:size value="3.7801292"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="50"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="&lt;pre&gt;&#13; Pair permet de creer des indentificateur de deux variable. La fonction equals&#13; doit avoir était implementer pour le type T. De même la fonction hasCode doit être implementé&#13; &lt;/pre&gt;&#13; &#13; @author Palmier&#13; &#13; @param &lt;T&gt;&#13; &#13; &#13; e T. De même la fonction hasCode doit être implementé&#13; &lt;/pre&gt;&#13; &#13; @author P"/>
</attvalues>
</node>
<node id="627" label="getParent(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-12.200952" y="-366.38492" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne l'élément parent contenant l'élément fils sur la relation&#13; contenant/contenue.&#13; &#13; @param elementFils&#13; @return&#13; arent contenant l'élément fils sur la relation&#13; contenant/contenue.&#13; &#13; @param e"/>
</attvalues>
</node>
<node id="628" label="StdAnalyse">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-216.0721" y="-23.000082" z="0.0"/>
<viz:size value="20.0"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="390"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="&lt;p&gt;&#13; The class StdAnalyse provide both an user interface for set preference for&#13; the analysis and functions which create the parser and exporter instance.&lt;br&#13; * /&gt; Initialisation :&#13; &lt;ol&gt;&#13; &lt;li&gt; {@link StdAnalyse#StdAnalyse()}&lt;/li&gt;&#13; &lt;li&gt;{@link StdAnalyse#setProject(IProject)}&lt;/li&gt;&#13; &lt;/ol&gt;&#13; Run :&#13; &lt;ol&gt;&#13; &lt;li&gt; {@link StdAnalyse#schedule()}&lt;/li&gt;&#13; &lt;/ol&gt;&#13; &#13; @author Jeremy Palmier&#13;         &lt;/p&gt;&#13; un :&#13; &lt;ol&gt;"/>
</attvalues>
</node>
<node id="629" label="getAvailableTypes()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-106.560524" y="65.89778" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Return the list of the available types which can be analyzed with this&#13; parser.&#13; &#13; @return return a list of label of the types&#13; able types which can be analyzed with this&#13; parser.&#13; &#13; @return return a"/>
</attvalues>
</node>
<node id="630" label="getProperties(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="74.05749" y="-274.18396" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@param element&#13; @return une hashMap corespondant à l'élément. (si l'élément n'existe pas&#13;         une hashmpap vide est néanmoins retourner&quot;);&#13; dant à l'élément. (si l'élément n'existe pas&#13;         u"/>
</attvalues>
</node>
<node id="631" label="setRootElement(IResource)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="279.31958" y="203.76385" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Conversion d'un élément root IRessource en IJavaElement&#13; &#13; @param resource"/>
</attvalues>
</node>
<node id="632" label="data">
<viz:color b="162" g="162" r="24"/>
<viz:position x="201.09885" y="179.57967" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
</attvalues>
</node>
<node id="633" label="setDataRepository(ICodeData)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="252.46085" y="16.160147" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="634" label="format_attribute">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-97.9209" y="28.341316" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected static final"/>
</attvalues>
</node>
<node id="635" label="getText(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-228.18787" y="303.47348" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The &lt;code&gt;LabelProvider&lt;/code&gt; implementation of this&#10; &lt;code&gt;ILabelProvider&lt;/code&gt; method returns the element's&#10; &lt;code&gt;toString&lt;/code&gt; string. Subclasses may override.&#10; ovider&lt;/code&gt; method returns t"/>
</attvalues>
</node>
<node id="636" label="removeOneElement(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-75.99938" y="-352.43497" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Suprime uniquement l'�l�ment sp�cifier, mais pas ces fils. une mauvais&#13; utilisation de cette fonction peut entrainer des inchoerence dans la&#13; base.&#13; &#13; @param idElement&#13; s&#13; utilisation de cette foncti"/>
</attvalues>
</node>
<node id="637" label="instance">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-10.73055" y="-34.562504" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private static"/>
</attvalues>
</node>
<node id="638" label="DEFAULT_SEPERATOR">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-210.66618" y="154.29755" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="639" label="store">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-263.03076" y="259.7325" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="640" label="_ruleCreate">
<viz:color b="162" g="162" r="24"/>
<viz:position x="138.44647" y="9.201717" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="641" label="Initialiser()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-113.19563" y="123.803406" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="642" label="isValid(IProject)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-83.407104" y="60.68316" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Return true if the project can be analyze or false if it can't be.&#13; &#13; @param project&#13; @return"/>
</attvalues>
</node>
<node id="643" label="stop(BundleContext)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="51.65043" y="192.37193" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The &lt;code&gt;AbstractUIPlugin&lt;/code&gt; implementation of this &lt;code&gt;Plugin&lt;/code&gt;&#10; method saves this plug-in's preference and dialog stores and shuts down &#10; its image registry (if they are in use). Subclasses may extend this&#10; method, but must send super &lt;b&gt;last&lt;/b&gt;. A try-finally statement should&#10; be used where necessary to ensure that &lt;code&gt;super.shutdown()&lt;/code&gt; is&#10; always done.&#10; {@inheritDoc}&#10; &#10; @since 3.0&#10; cessary to ensure that &lt;code&gt;super.shutdown()&lt;/code&gt; is&#10; always done.&#10; {@inheritDoc}&#10; &#10; @"/>
</attvalues>
</node>
<node id="644" label="getProperties(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="125.86753" y="-8.399926" z="0.0"/>
<viz:size value="2.9471123"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="32"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@param element&#13; @return une hashMap corespondant à l'élément. (si l'élément n'existe pas&#13;         une hashmpap vide est néanmoins retourner&quot;);&#13; dant à l'élément. (si l'élément n'existe pas&#13;         u"/>
</attvalues>
</node>
<node id="645" label="_dicoElementDependence">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-77.26083" y="-323.22034" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="&lt;li&gt;key = Pair d'element (une dependance entre deux elements) &lt;li&gt;value =&#13; liste des proprietes de la pair d'element, c'est a dire les elements&#13; qu'il utilise.&#13;  &lt;li&gt;value =&#13; liste des proprietes de"/>
</attvalues>
</node>
<node id="646" label="right">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-51.711758" y="-192.93825" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="647" label="toString()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-103.48678" y="-214.0328" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="648" label="dependsReferences">
<viz:color b="162" g="162" r="24"/>
<viz:position x="210.68071" y="-267.79883" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
</attvalues>
</node>
<node id="649" label="updateNode(String, String, String, String, String, String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="278.70798" y="-295.1331" z="0.0"/>
<viz:size value="4.242881"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="59"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param type&#10; @param codelines&#10; @param modifier&#10; @param comment&#10; @return&#10; m gexfID&#10; @param revision&#10; @param type&#10; @param codelines&#10; @param modifier&#10; @p"/>
</attvalues>
</node>
<node id="650" label="nextChild()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="326.9676" y="253.70697" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Retourne le prochain fils du dernier état de la file. prerequis : la pile&#13; stackElement contient au moins un élement&#13; in fils du dernier état de la file. prerequis : la pile&#13; stackElement contient"/>
</attvalues>
</node>
<node id="651" label="EnumFileContent()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="269.79697" y="239.80708" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="652" label="TestActivator()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-237.74844" y="-195.7737" z="0.0"/>
<viz:size value="2.0458543"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="4"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The constructor."/>
</attvalues>
</node>
<node id="653" label="parseString(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-210.46652" y="136.20125" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="@param stringList&#13; @param separator&#13; @return"/>
</attvalues>
</node>
<node id="654" label="setData(ICodeData)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="262.3695" y="90.24564" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
</attvalues>
</node>
<node id="655" label="ELEMENT_PROPERTIES_TYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="50.648136" y="-234.77411" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="656" label="extension">
<viz:color b="162" g="162" r="24"/>
<viz:position x="212.77074" y="-273.25528" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public final"/>
</attvalues>
</node>
<node id="657" label="doLoad()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="30.306879" y="356.1718" z="0.0"/>
<viz:size value="2.3494492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="16"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Initializes this field editor with the preference value from&#10; the preference store.&#10; &lt;p&gt;&#10; Subclasses must implement this method to properly initialize &#10; the field editor.&#10; &lt;/p&gt;&#10; tore.&#10; &lt;p&gt;&#10; Subclasse"/>
</attvalues>
</node>
<node id="658" label="buildMissingDependencies(List&lt;String&gt;)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="94.53632" y="-198.90022" z="0.0"/>
<viz:size value="6.5557337"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="99"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Construit les relations de dependances manquantes a cause des types&#13; d'elements supprimes. Les relations de bas niveau supprimes remontent&#13; dans l'arbre.&#13; &#13; @param elementTypes&#13; @return&#13; es. Les rela"/>
</attvalues>
</node>
<node id="659" label="ELEMENT_PROPERTIES_TYPE_OF_FIELD">
<viz:color b="162" g="162" r="24"/>
<viz:position x="54.041443" y="-228.41692" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="660" label="info_JavaProvider">
<viz:color b="162" g="162" r="24"/>
<viz:position x="267.97336" y="-37.043118" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="661" label="addHeritanceLink(String, String, String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="208.12976" y="-306.12573" z="0.0"/>
<viz:size value="2.8638089"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="30"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param n"/>
</attvalues>
</node>
<node id="662" label="addToDependsRefences(String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="225.00975" y="-323.02637" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param gexfDependID&#10; @param e&#10; @return"/>
</attvalues>
</node>
<node id="663" label="dispatchEvent(CodeDataChangesEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-56.099155" y="-286.3936" z="0.0"/>
<viz:size value="2.1511035"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="9"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Envoie un evenement a� tous les listener inscrit via la fonction&#13; {@link IWriteElement#addEventListener(CodeDataChangesListener)}&#13; &#13; @param evt&#13; rit via la fonction&#13; {@link IWriteElement#addEventList"/>
</attvalues>
</node>
<node id="664" label="IDependsPoperty&lt;T&gt;">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-14.920702" y="199.32983" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public interface"/>
<attvalue id="3" value="&lt;p&gt;&#13; Cette interface repr�sente les d�pendances fonctionelle entre deux elements.&#13; &lt;/p&gt;&#13; &lt;p&gt;&#13; This interface represents an dependency between two element.&#13; &lt;/p&gt;&#13; &#13; @param &lt;T&gt;&#13; &#13; @author Palmier&#13; @version 1.03&#13; epresents an dependency between two element.&#13; &lt;/p&gt;&#13; &#13; @param &lt;T&gt;&#13; &#13; @author Palmier&#13; @ver"/>
</attvalues>
</node>
<node id="665" label="nextElement()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="311.9299" y="225.50726" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="666" label="StdPage()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-296.3369" y="230.19443" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="667" label="init()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="26.966948" y="-112.06528" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Must be called before finalizeExport().&#13; &#13; @return"/>
</attvalues>
</node>
<node id="668" label="getElement()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="332.39484" y="248.08679" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="669" label="getModifier(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="126.783005" y="-35.765392" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Return a string describing the access modifier flags in the specified&#13; modifier. For example: public final synchronized strictfp The full&#13; modifier ordering used by this method is: public protected private&#13; abstract static final transient volatile synchronized native strictfp&#13; interface&#13; rotected p"/>
</attvalues>
</node>
<node id="670" label="throwing(String, String, Throwable)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-7.7441483" y="3.5625107" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="671" label="elemCount">
<viz:color b="162" g="162" r="24"/>
<viz:position x="219.47015" y="-254.40495" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="672" label="AbstractParser(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="64.77142" y="83.678024" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="Il est deconseille d'utiliser ce constructeur car un constructeur par&#13; default a ete defini.&#13; &lt;p&gt;&#13; &lt;i&gt; AbstractExporter etant utilise principalement dans les extensions, ce&#13; constructeur ne pourra etre appele par les mecanismes d'extension, ceux&#13; ci n'instanciant que des classes contenant un constructeur par defaut.&#13; &lt;p&gt;&#13; mes d'extension, ceux&#13; ci n'instanciant que des classes contenant un constr"/>
</attvalues>
</node>
<node id="673" label="dispose()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="2.6905012" y="271.9946" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Disposes the SWT resources allocated by this&#10; dialog page."/>
</attvalues>
</node>
<node id="674" label="IExporter">
<viz:color b="162" g="24" r="93"/>
<viz:position x="24.773005" y="-80.1032" z="0.0"/>
<viz:size value="3.2091012"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="38"/>
<attvalue id="2" value="public interface"/>
<attvalue id="3" value="Interface de module d'export.&#13; &#13; @author Sebastien Heymann et Jeremy Palmier"/>
</attvalues>
</node>
<node id="675" label="setParameter(String[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="33.89634" y="-104.21785" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Passe les parametres globaux aux fragments de plugin."/>
</attvalues>
</node>
<node id="676" label="addDependencyLink(String, String, String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="210.56796" y="-317.9951" z="0.0"/>
<viz:size value="3.0759296"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="35"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param n"/>
</attvalues>
</node>
<node id="677" label="EnumFileContent(ITreeContentProvider)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="321.07126" y="228.54051" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="678" label="getIdExtension(IConfigurationElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-96.83997" y="-3.819842" z="0.0"/>
<viz:size value="2.3182144"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="15"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Return the extension id associate to the configurationElement or returns&#13; null if the configurationElement is null.&#13; &#13; @param extensionId&#13; @return&#13; rationElement or returns&#13; null if the configuration"/>
</attvalues>
</node>
<node id="679" label="getImage(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-410.1444" y="26.732351" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="The &lt;code&gt;LabelProvider&lt;/code&gt; implementation of this&#10; &lt;code&gt;ILabelProvider&lt;/code&gt; method returns &lt;code&gt;null&lt;/code&gt;.&#10; Subclasses may override.&#10; n of this&#10; &lt;code&gt;ILabelProvider&lt;/code&gt; method returns &lt;"/>
</attvalues>
</node>
<node id="680" label="addListExporterModule(Composite, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-272.2666" y="319.63168" z="0.0"/>
<viz:size value="2.665358"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="25"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="682" label="parser_viewer">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-394.98352" y="-2.651542" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="683" label="ShowsScenarioPulldownAction">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-338.86047" y="-166.55478" z="0.0"/>
<viz:size value="12.820745"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="193"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="684" label="addDependencyProperties(ICompilationUnit)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="247.11351" y="44.950165" z="0.0"/>
<viz:size value="2.5536587"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="22"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="685" label="visit(MethodInvocation)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="290.64944" y="-76.263565" z="0.0"/>
<viz:size value="3.032492"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="34"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Ajoute les fonctions appelees dans les dependances sans restrictions.&#13; &#13; &lt;p&gt;&#13; Method invocation expression AST node type. For JLS2: MethodInvocation:&#13; &lt;p&gt;&#13; &lt;code&gt;&#13;[ Expression . ] Identifier&#13;( [ Expression { , Expression } ] )&#13;&lt;/code&gt;&#13; &lt;p&gt;&#13; For JLS3, type arguments are added: MethodInvocation:&#13; &lt;/p&gt;&#13; &lt;code&gt;&#9;     [ Expression . ]&#13;[ &lt; Type { , Type } &gt; ]&#13;Identifier ( [ Expression { , Expression } ] )&#13;&lt;/code&gt;&#13;    [ Expression . ]&#13;[ &lt; Type { , Type } &gt; ]&#13;Identifier ( [ Expression { , Expression } ]"/>
</attvalues>
</node>
<node id="688" label="updateParentLink(String, String, String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="259.26877" y="-322.62546" z="0.0"/>
<viz:size value="3.5352426"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="45"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param n"/>
</attvalues>
</node>
<node id="689" label="getProject()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-211.33241" y="-2.109098" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Acesseur pour le projet analyse&#13; &#13; @see codeminer.api.ui.AbstractScenario#setProject(IProject)"/>
</attvalues>
</node>
<node id="690" label="visit(TypeDeclaration)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="260.27438" y="-83.3962" z="0.0"/>
<viz:size value="3.6320732"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="47"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Visits the given type-specific AST node.&#10; &lt;p&gt;&#10; The default implementation does nothing and return true.&#10; Subclasses may reimplement.&#10; &lt;/p&gt;&#10;&#10; @param node the node to visit&#10; @return &lt;code&gt;true&lt;/code&gt; if the children of this node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node should&#10; be skipped&#10; is node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node"/>
</attvalues>
</node>
<node id="691" label="getData()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-88.0415" y="8.201412" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public static"/>
<attvalue id="3" value="Liste des formats d'export apparaissant dans le registre des extensions."/>
</attvalues>
</node>
<node id="692" label="testReset()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="335.01102" y="227.74442" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="693" label="serialize()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="210.26411" y="-251.4007" z="0.0"/>
<viz:size value="2.4481335"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="19"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="Transform the DOM document to an XML string.&#10; &#10; @return&#10; @throws TransformerException"/>
</attvalues>
</node>
<node id="694" label="serialVersionUID">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-79.3693" y="-199.42833" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private static final"/>
</attvalues>
</node>
<node id="695" label="inputChanged(Viewer, Object, Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="37.71408" y="319.51657" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Notifies this content provider that the given viewer's input&#10; has been switched to a different element.&#10; &lt;p&gt;&#10; A typical use for this method is registering the content provider as a listener&#10; to changes on the new input (using model-specific means), and deregistering the viewer &#10; from the old input. In response to these change notifications, the content provider&#10; should update the viewer (see the add, remove, update and refresh methods on the viewers).&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; The viewer should not be updated during this call, as it might be in the process&#10; of being disposed.&#10; &lt;/p&gt;&#10;&#10; @param viewer the viewer&#10; @param oldInput the old input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   did not previously have an input&#10; @param newInput the new input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   does not have an input&#10; param newInput the new input element, or &lt;code&gt;null&lt;/code&gt; if the viewer&#10;   does not"/>
</attvalues>
</node>
<node id="696" label="setExtensionName(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="18.222067" y="352.99228" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="697" label="new SelectionAdapter() {...}">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-352.30634" y="-131.60889" z="0.0"/>
<viz:size value="2.9895487"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="33"/>
</attvalues>
</node>
<node id="698" label="initializeDefaultPreferences()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-45.69904" y="114.46386" z="0.0"/>
<viz:size value="2.9051948"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="31"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@see org.eclipse.core.runtime.preferences.AbstractPreferenceInitializer#initializeDefaultPreferences()&#10;  org.eclipse.core.runtime.preferences.AbstractPreferenceInitializer#initializeDefaultPrefer"/>
</attvalues>
</node>
<node id="699" label="setDateFrom(Element, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="275.27618" y="-269.4209" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param e&#10; @param revision&#10; @return"/>
</attvalues>
</node>
<node id="700" label="RESSOURCE_ICON_PROJECT">
<viz:color b="162" g="162" r="24"/>
<viz:position x="70.20576" y="183.0121" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="701" label="revno">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-41.637035" y="164.46468" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="702" label="addParent(String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="195.82993" y="-114.379364" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="3" value="Ajoute le parent de idElementFils dans le dictionaire des parent.&#13; &#13; @param idElementFils&#13; @param idElementParent&#13; t de idElementFils dans le dictionaire des parent.&#13; &#13; @param idElementFils&#13; @param i"/>
</attvalues>
</node>
<node id="703" label="ICodeData">
<viz:color b="162" g="24" r="93"/>
<viz:position x="67.76079" y="-241.83235" z="0.0"/>
<viz:size value="2.8229685"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="29"/>
<attvalue id="2" value="public interface"/>
<attvalue id="3" value="&lt;p&gt;&#13; ICodeData est une interface qui permet l'acsès aux information qui sont&#13; contenue dans le codesource d'un projet.&#13; &lt;/p&gt;&#13; // TODO The English version is not well written&lt;/p&gt;&#13; &lt;p&gt;&#13; ICodeData is an interface which provide function to aces to piece of&#13; information contain in the code of a project.&#13; &lt;/p&gt;&#13; &#13; @author Jeremy Palmier&#13; &#13;  aces to piece of&#13; information contain in the code of a project."/>
</attvalues>
</node>
<node id="704" label="createGraphAttvalue(Integer, String, String, String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="278.8699" y="-275.6185" z="0.0"/>
<viz:size value="2.4481335"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="19"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param id&#10; @param value&#10; @param stepfrom&#10; @param stepto&#10; @return"/>
</attvalues>
</node>
<node id="705" label="getNewInputObject()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-26.79136" y="271.22546" z="0.0"/>
<viz:size value="2.029971"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="3"/>
<attvalue id="2" value="protected"/>
<attvalue id="3" value="Creates and returns a new item for the list.&#10; &lt;p&gt;&#10; Subclasses must implement this method.&#10; &lt;/p&gt;&#10;&#10; @return a new item&#10; s a new item for the list.&#10; &lt;p&gt;&#10; Subclasses must implement this method.&#10; &lt;/p&gt;&#10;&#10; @"/>
</attvalues>
</node>
<node id="706" label="getExtern(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="240.78337" y="-52.10647" z="0.0"/>
<viz:size value="2.414441"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="18"/>
<attvalue id="2" value="public static"/>
</attvalues>
</node>
<node id="707" label="seperator">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-31.82765" y="273.4572" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="708" label="logp(Level, String, String, String, Object[])">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-118.2026" y="-96.06581" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="709" label="fillListParser()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-320.74802" y="279.39328" z="0.0"/>
<viz:size value="3.487411"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="44"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="710" label="addParentLink(String, String, String, Element)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="250.32632" y="-311.6521" z="0.0"/>
<viz:size value="2.7038662"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="26"/>
<attvalue id="2" value="private"/>
<attvalue id="3" value="@param dataID&#10; @param gexfID&#10; @param revision&#10; @param n"/>
</attvalues>
</node>
<node id="711" label="addFieldDependency(String, IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="297.13593" y="-69.22202" z="0.0"/>
<viz:size value="2.202603"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="11"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="712" label="DEFAULT_INCLUDE_ELEMENT">
<viz:color b="162" g="162" r="24"/>
<viz:position x="152.87596" y="137.10364" z="0.0"/>
<viz:size value="2.287869"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="14"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="713" label="widgetSelected(SelectionEvent)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-334.07727" y="-115.529915" z="0.0"/>
<viz:size value="2.8638089"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="30"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Sent when selection occurs in the control.&#10; The default behavior is to do nothing.&#10;&#10; @param e an event containing information about the selection&#10;  default behavior is to do nothing.&#10;&#10; @param e an ev"/>
</attvalues>
</node>
<node id="714" label="testaddParent_trigger_after()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="21.168274" y="-354.42255" z="0.0"/>
<viz:size value="2.2584538"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="13"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="715" label="SerializedExporter">
<viz:color b="162" g="24" r="93"/>
<viz:position x="34.283035" y="-120.29511" z="0.0"/>
<viz:size value="4.4566956"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="63"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="716" label="dependanceDetector">
<viz:color b="162" g="162" r="24"/>
<viz:position x="216.71889" y="37.996845" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="717" label="jobListener">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-193.55591" y="-29.756561" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="718" label="ATTR_TYPE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="225.04706" y="-260.5472" z="0.0"/>
<viz:size value="2.0058663"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="1" value="1"/>
<attvalue id="2" value="private final"/>
</attvalues>
</node>
<node id="719" label="parameter">
<viz:color b="162" g="162" r="24"/>
<viz:position x="81.36342" y="99.844536" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="720" label="getHerit(IJavaElement)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="132.14476" y="-5.192027" z="0.0"/>
<viz:size value="2.9895487"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="33"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="721" label="isExportFormat(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="38.32713" y="-108.625374" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Indique si la chaine passee en parametre correspond a un format existant.&#13; &#13; @param format&#13; @return Format existe&#13; haine passee en parametre correspond a un format existant.&#13; &#13; @param format&#13; @return"/>
</attvalues>
</node>
<node id="722" label="P_EXLUDED_PROBLEMS_MARKERS">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-87.17843" y="167.36557" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="724" label="addListType(Composite, int)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-279.48016" y="314.34296" z="0.0"/>
<viz:size value="2.5177677"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="21"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="725" label="getHerit(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="109.747025" y="-201.86623" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="726" label="StatusContentProvider">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-419.35272" y="23.371712" z="0.0"/>
<viz:size value="2.381536"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="17"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="727" label="run(IProgressMonitor)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-269.75116" y="-70.13169" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="2" value="public abstract"/>
<attvalue id="3" value="Executes this job.  Returns the result of the execution.&#10; &lt;p&gt;&#10; The provided monitor can be used to report progress and respond to &#10; cancellation.  If the progress monitor has been canceled, the job&#10; should finish its execution at the earliest convenience and return a result&#10; status of severity {@link IStatus#CANCEL}.  The singleton&#10; cancel status {@link Status#CANCEL_STATUS} can be used for&#10; this purpose.  The monitor is only valid for the duration of the invocation&#10; of this method.&#10; &lt;p&gt;&#10; This method must not be called directly by clients.  Clients should call&#10; &lt;code&gt;schedule&lt;/code&gt;, which will in turn cause this method to be called.&#10; &lt;p&gt;&#10; Jobs can optionally finish their execution asynchronously (in another thread) by &#10; returning a result status of {@link #ASYNC_FINISH}.  Jobs that finish&#10; asynchronously &lt;b&gt;must&lt;/b&gt; specify the execution thread by calling&#10; &lt;code&gt;setThread&lt;/code&gt;, and must indicate when they are finished by calling&#10; the method &lt;code&gt;done&lt;/code&gt;.&#10; &#10; @param monitor the monitor to be used for reporting progress and&#10; responding to cancelation. The monitor is never &lt;code&gt;null&lt;/code&gt;&#10; @return resulting status of the run. The result must not be &lt;code&gt;null&lt;/code&gt;&#10; @see #ASYNC_FINISH&#10; @see #done(IStatus)&#10; atus of the run. The result must not be &lt;code&gt;null&lt;/code&gt;&#10; @see #A"/>
</attvalues>
</node>
<node id="728" label="getProperties(String)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-77.70325" y="-311.35657" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Si l'element element existe, alors la fonction renvoie la liste des&#13; proprietes de l'element, sinon la fonction renvoie null.&#13; , alors la fonction renvoie la liste des&#13; proprietes de l'element, sinon"/>
</attvalues>
</node>
<node id="729" label="fillListExporter()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-311.6023" y="291.18964" z="0.0"/>
<viz:size value="2.665358"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="25"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="731" label="EnumState(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="308.60187" y="275.1438" z="0.0"/>
<viz:size value="2.0164351"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="2"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="732" label="visit(TypeLiteral)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="299.25793" y="-62.303097" z="0.0"/>
<viz:size value="2.2300148"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="12"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Visits the given type-specific AST node.&#10; &lt;p&gt;&#10; The default implementation does nothing and return true.&#10; Subclasses may reimplement.&#10; &lt;/p&gt;&#10;&#10; @param node the node to visit&#10; @return &lt;code&gt;true&lt;/code&gt; if the children of this node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node should&#10; be skipped&#10; is node should be&#10; visited, and &lt;code&gt;false&lt;/code&gt; if the children of this node"/>
</attvalues>
</node>
<node id="733" label="getElements(Object)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="34.330208" y="324.62775" z="0.0"/>
<viz:size value="2.083347"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="6"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Returns the elements to display in the viewer &#10; when its input is set to the given element. &#10; These elements can be presented as rows in a table, items in a list, etc.&#10; The result is not modified by the viewer.&#10; &lt;p&gt;&#10; &lt;b&gt;NOTE:&lt;/b&gt; For instances where the viewer is displaying a tree&#10; containing a single 'root' element it is still necessary that the&#10; 'input' does not return &lt;i&gt;itself&lt;/i&gt; from this method. This leads&#10; to recursion issues (see bug 9262).&#10; &lt;/p&gt;&#10; @param inputElement the input element&#10; @return the array of elements to display in the viewer&#10; /p&gt;&#10; @param inputElement the input element"/>
</attvalues>
</node>
<node id="734" label="P_DATA_STORAGE">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-98.99651" y="247.36475" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="735" label="name_attribute">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-109.071304" y="-7.5092745" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="protected static final"/>
</attvalues>
</node>
<node id="736" label="selectionChanged(IAction, ISelection)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-328.63934" y="-151.48941" z="0.0"/>
<viz:size value="2.381536"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="17"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Selection in the workbench has been changed. We can change the state of&#13; the 'real' action here if we want, but this can only happen after the&#13; delegate has been created.&#13; &#13; @see IWorkbenchWindowActionDelegate#selectionChanged&#13; ppen after the&#13; delegate has been created.&#13; &#13; @see IWorkbenchWindowActi"/>
</attvalues>
</node>
<node id="737" label="exporterStatus">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-271.4145" y="265.12192" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private"/>
</attvalues>
</node>
<node id="738" label="init()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-11.868462" y="-137.95615" z="0.0"/>
<viz:size value="2.063727"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="5"/>
<attvalue id="2" value="public abstract"/>
<attvalue id="3" value="Must be called before finalizeExport().&#13; &#13; @return"/>
</attvalues>
</node>
<node id="739" label="StatusLabelProvider">
<viz:color b="162" g="24" r="93"/>
<viz:position x="-430.9956" y="25.160204" z="0.0"/>
<viz:size value="5.8857327"/>
<attvalues>
<attvalue id="0" value="class"/>
<attvalue id="1" value="88"/>
<attvalue id="2" value="protected"/>
</attvalues>
</node>
<node id="740" label="endVisit(T)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="292.41064" y="148.70134" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="method"/>
</attvalues>
</node>
<node id="741" label="getAvailableTypes()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-11.424873" y="81.28547" z="0.0"/>
<viz:size value="2.1762772"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="10"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="Return the list of the available types which can be analyzed with this&#13; parser.&#13; &#13; @return return a list of label of the types&#13; able types which can be analyzed with this&#13; parser.&#13; &#13; @return return a"/>
</attvalues>
</node>
<node id="742" label="testGetChild()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="1.6445684" y="-374.9426" z="0.0"/>
<viz:size value="2.1045372"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="7"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="743" label="visit(QualifiedName)">
<viz:color b="24" g="162" r="93"/>
<viz:position x="253.70021" y="-46.02974" z="0.0"/>
<viz:size value="2.5902348"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="23"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="AST node for a qualified name. A qualified name is defined recursively as&#13; a simple name preceded by a name, which qualifies it. Expressing it this&#13; way means that the qualifier and the simple name get their own AST nodes.&#13; &#13; QualifiedName: Name . SimpleName&#13; &#13; @See FieldAccess for guidelines on handling other expressions that&#13;      resemble qualified names.&#13; @See FieldAccess for guidelines on ha"/>
</attvalues>
</node>
<node id="744" label="store">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-206.87585" y="161.99326" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="private static final"/>
</attvalues>
</node>
<node id="745" label="PLUGIN_PARSER_EXTENSION_ID">
<viz:color b="162" g="162" r="24"/>
<viz:position x="62.52853" y="205.77591" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public static final"/>
</attvalues>
</node>
<node id="746" label="setUp()">
<viz:color b="24" g="162" r="93"/>
<viz:position x="-41.14013" y="-369.37372" z="0.0"/>
<viz:size value="2.1271596"/>
<attvalues>
<attvalue id="0" value="method"/>
<attvalue id="1" value="8"/>
<attvalue id="2" value="public"/>
<attvalue id="3" value="@throws java.lang.Exception"/>
</attvalues>
</node>
<node id="747" label="deletedElements">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-29.19249" y="166.7056" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
<node id="748" label="currentProject">
<viz:color b="162" g="162" r="24"/>
<viz:position x="-306.6984" y="151.5824" z="0.0"/>
<viz:size value="2.0"/>
<attvalues>
<attvalue id="0" value="field"/>
<attvalue id="2" value="public"/>
</attvalues>
</node>
</nodes>
<edges>
<edge id="0" source="0" target="100"/>
<edge id="1" source="1" target="582"/>
<edge id="2" source="2" target="628"/>
<edge id="3" source="3" target="157"/>
<edge id="4" source="4" target="582"/>
<edge id="5" source="5" target="683"/>
<edge id="6" source="6" target="527"/>
<edge id="7" source="6" target="706"/>
<edge id="8" source="6" target="103"/>
<edge id="9" source="7" target="235"/>
<edge id="10" source="8" target="502"/>
<edge id="11" source="9" target="57"/>
<edge id="12" source="10" target="235"/>
<edge id="13" source="11" target="315"/>
<edge id="14" source="11" target="748"/>
<edge id="15" source="12" target="235"/>
<edge id="16" source="13" target="157"/>
<edge id="17" source="13" target="731"/>
<edge id="18" source="14" target="297"/>
<edge id="19" source="15" target="527"/>
<edge id="20" source="15" target="115"/>
<edge id="22" source="17" target="264"/>
<edge id="23" source="18" target="277"/>
<edge id="24" source="18" target="538"/>
<edge id="25" source="19" target="146"/>
<edge id="26" source="19" target="677"/>
<edge id="27" source="19" target="368"/>
<edge id="28" source="19" target="329"/>
<edge id="29" source="19" target="106"/>
<edge id="30" source="19" target="668"/>
<edge id="31" source="19" target="467"/>
<edge id="32" source="20" target="628"/>
<edge id="33" source="21" target="100"/>
<edge id="34" source="22" target="566"/>
<edge id="35" source="23" target="235"/>
<edge id="36" source="24" target="244"/>
<edge id="37" source="25" target="715"/>
<edge id="38" source="25" target="323"/>
<edge id="39" source="26" target="297"/>
<edge id="40" source="27" target="264"/>
<edge id="41" source="28" target="277"/>
<edge id="42" source="29" target="144"/>
<edge id="43" source="30" target="326"/>
<edge id="44" source="30" target="89"/>
<edge id="45" source="30" target="457"/>
<edge id="46" source="30" target="298"/>
<edge id="47" source="30" target="632"/>
<edge id="48" source="31" target="247"/>
<edge id="49" source="32" target="628"/>
<edge id="50" source="33" target="319"/>
<edge id="51" source="34" target="479"/>
<edge id="52" source="35" target="83"/>
<edge id="53" source="36" target="235"/>
<edge id="54" source="37" target="319"/>
<edge id="55" source="37" target="118"/>
<edge id="56" source="37" target="272"/>
<edge id="58" source="39" target="235"/>
<edge id="59" source="40" target="533"/>
<edge id="60" source="41" target="146"/>
<edge id="61" source="41" target="677"/>
<edge id="62" source="41" target="368"/>
<edge id="63" source="41" target="329"/>
<edge id="64" source="41" target="467"/>
<edge id="65" source="41" target="650"/>
<edge id="66" source="42" target="174"/>
<edge id="67" source="43" target="144"/>
<edge id="68" source="44" target="277"/>
<edge id="69" source="45" target="316"/>
<edge id="70" source="45" target="615"/>
<edge id="71" source="45" target="729"/>
<edge id="72" source="45" target="709"/>
<edge id="73" source="45" target="296"/>
<edge id="74" source="45" target="427"/>
<edge id="75" source="45" target="290"/>
<edge id="76" source="45" target="625"/>
<edge id="77" source="45" target="506"/>
<edge id="79" source="47" target="235"/>
<edge id="80" source="48" target="417"/>
<edge id="82" source="50" target="157"/>
<edge id="83" source="51" target="174"/>
<edge id="84" source="51" target="55"/>
<edge id="85" source="51" target="500"/>
<edge id="86" source="52" target="244"/>
<edge id="87" source="53" target="245"/>
<edge id="88" source="54" target="315"/>
<edge id="89" source="55" target="158"/>
<edge id="90" source="56" target="492"/>
<edge id="92" source="58" target="683"/>
<edge id="93" source="59" target="611"/>
<edge id="94" source="60" target="515"/>
<edge id="95" source="61" target="235"/>
<edge id="96" source="62" target="497"/>
<edge id="97" source="63" target="235"/>
<edge id="98" source="63" target="699"/>
<edge id="99" source="64" target="502"/>
<edge id="100" source="64" target="385"/>
<edge id="101" source="64" target="539"/>
<edge id="102" source="65" target="515"/>
<edge id="103" source="66" target="316"/>
<edge id="104" source="66" target="107"/>
<edge id="105" source="67" target="404"/>
<edge id="106" source="67" target="373"/>
<edge id="107" source="68" target="316"/>
<edge id="108" source="69" target="158"/>
<edge id="109" source="70" target="245"/>
<edge id="110" source="71" target="479"/>
<edge id="111" source="72" target="726"/>
<edge id="112" source="73" target="268"/>
<edge id="113" source="73" target="116"/>
<edge id="114" source="74" target="566"/>
<edge id="115" source="75" target="117"/>
<edge id="116" source="76" target="144"/>
<edge id="117" source="77" target="158"/>
<edge id="118" source="78" target="168"/>
<edge id="119" source="79" target="628"/>
<edge id="120" source="80" target="316"/>
<edge id="121" source="80" target="330"/>
<edge id="122" source="80" target="495"/>
<edge id="123" source="81" target="316"/>
<edge id="124" source="81" target="66"/>
<edge id="125" source="81" target="80"/>
<edge id="126" source="81" target="680"/>
<edge id="127" source="81" target="724"/>
<edge id="128" source="81" target="87"/>
<edge id="129" source="81" target="45"/>
<edge id="130" source="82" target="319"/>
<edge id="131" source="82" target="150"/>
<edge id="132" source="82" target="163"/>
<edge id="134" source="83" target="228"/>
<edge id="135" source="84" target="628"/>
<edge id="136" source="84" target="243"/>
<edge id="137" source="84" target="409"/>
<edge id="138" source="85" target="226"/>
<edge id="139" source="86" target="515"/>
<edge id="140" source="87" target="316"/>
<edge id="141" source="87" target="599"/>
<edge id="142" source="88" target="547"/>
<edge id="143" source="88" target="677"/>
<edge id="144" source="89" target="530"/>
<edge id="145" source="89" target="450"/>
<edge id="146" source="90" target="515"/>
<edge id="147" source="91" target="628"/>
<edge id="148" source="92" target="515"/>
<edge id="149" source="93" target="157"/>
<edge id="150" source="94" target="304"/>
<edge id="151" source="95" target="83"/>
<edge id="152" source="96" target="715"/>
<edge id="153" source="97" target="566"/>
<edge id="154" source="98" target="244"/>
<edge id="155" source="99" target="527"/>
<edge id="156" source="99" target="706"/>
<edge id="157" source="99" target="363"/>
<edge id="158" source="99" target="313"/>
<edge id="159" source="99" target="439"/>
<edge id="161" source="101" target="530"/>
<edge id="162" source="102" target="286"/>
<edge id="163" source="103" target="144"/>
<edge id="164" source="104" target="268"/>
<edge id="165" source="104" target="116"/>
<edge id="166" source="105" target="38"/>
<edge id="167" source="106" target="157"/>
<edge id="168" source="106" target="650"/>
<edge id="169" source="106" target="740"/>
<edge id="170" source="107" target="66"/>
<edge id="171" source="108" target="530"/>
<edge id="172" source="109" target="595"/>
<edge id="173" source="109" target="430"/>
<edge id="174" source="110" target="16"/>
<edge id="175" source="111" target="492"/>
<edge id="176" source="112" target="566"/>
<edge id="178" source="114" target="146"/>
<edge id="179" source="115" target="527"/>
<edge id="180" source="115" target="99"/>
<edge id="181" source="116" target="57"/>
<edge id="183" source="118" target="515"/>
<edge id="184" source="118" target="359"/>
<edge id="185" source="119" target="368"/>
<edge id="186" source="120" target="235"/>
<edge id="187" source="121" target="286"/>
<edge id="188" source="121" target="719"/>
<edge id="189" source="122" target="158"/>
<edge id="190" source="123" target="417"/>
<edge id="192" source="125" target="497"/>
<edge id="193" source="126" target="188"/>
<edge id="194" source="126" target="696"/>
<edge id="195" source="127" target="245"/>
<edge id="196" source="128" target="235"/>
<edge id="197" source="128" target="237"/>
<edge id="198" source="128" target="265"/>
<edge id="199" source="128" target="141"/>
<edge id="200" source="128" target="528"/>
<edge id="201" source="128" target="688"/>
<edge id="202" source="128" target="370"/>
<edge id="203" source="128" target="447"/>
<edge id="204" source="128" target="140"/>
<edge id="205" source="128" target="710"/>
<edge id="206" source="128" target="676"/>
<edge id="207" source="128" target="661"/>
<edge id="208" source="128" target="468"/>
<edge id="209" source="128" target="266"/>
<edge id="210" source="129" target="245"/>
<edge id="211" source="130" target="417"/>
<edge id="212" source="131" target="144"/>
<edge id="213" source="132" target="245"/>
<edge id="214" source="133" target="235"/>
<edge id="215" source="134" target="683"/>
<edge id="216" source="134" target="454"/>
<edge id="217" source="135" target="527"/>
<edge id="218" source="135" target="711"/>
<edge id="220" source="137" target="83"/>
<edge id="221" source="138" target="611"/>
<edge id="222" source="139" target="515"/>
<edge id="223" source="140" target="235"/>
<edge id="224" source="140" target="265"/>
<edge id="225" source="140" target="63"/>
<edge id="226" source="140" target="47"/>
<edge id="227" source="141" target="235"/>
<edge id="228" source="141" target="265"/>
<edge id="229" source="141" target="378"/>
<edge id="230" source="141" target="133"/>
<edge id="231" source="142" target="238"/>
<edge id="232" source="143" target="368"/>
<edge id="234" source="145" target="417"/>
<edge id="235" source="145" target="48"/>
<edge id="237" source="147" target="113"/>
<edge id="238" source="148" target="100"/>
<edge id="240" source="150" target="515"/>
<edge id="241" source="152" target="674"/>
<edge id="242" source="153" target="245"/>
<edge id="243" source="154" target="527"/>
<edge id="244" source="155" target="286"/>
<edge id="245" source="156" target="715"/>
<edge id="248" source="158" target="57"/>
<edge id="249" source="159" target="264"/>
<edge id="250" source="160" target="683"/>
<edge id="251" source="161" target="316"/>
<edge id="253" source="163" target="515"/>
<edge id="254" source="164" target="515"/>
<edge id="255" source="164" target="559"/>
<edge id="256" source="165" target="611"/>
<edge id="257" source="165" target="237"/>
<edge id="258" source="165" target="204"/>
<edge id="259" source="166" target="162"/>
<edge id="260" source="167" target="417"/>
<edge id="261" source="168" target="245"/>
<edge id="262" source="169" target="113"/>
<edge id="263" source="170" target="566"/>
<edge id="264" source="171" target="533"/>
<edge id="265" source="172" target="566"/>
<edge id="266" source="173" target="417"/>
<edge id="268" source="174" target="124"/>
<edge id="269" source="175" target="146"/>
<edge id="270" source="175" target="677"/>
<edge id="271" source="175" target="368"/>
<edge id="272" source="175" target="329"/>
<edge id="273" source="175" target="650"/>
<edge id="274" source="175" target="668"/>
<edge id="275" source="175" target="467"/>
<edge id="276" source="176" target="146"/>
<edge id="277" source="177" target="404"/>
<edge id="278" source="177" target="197"/>
<edge id="279" source="177" target="84"/>
<edge id="280" source="178" target="582"/>
<edge id="281" source="179" target="264"/>
<edge id="283" source="181" target="611"/>
<edge id="284" source="181" target="204"/>
<edge id="285" source="182" target="157"/>
<edge id="286" source="183" target="626"/>
<edge id="287" source="184" target="235"/>
<edge id="288" source="184" target="323"/>
<edge id="289" source="184" target="596"/>
<edge id="290" source="185" target="703"/>
<edge id="291" source="186" target="57"/>
<edge id="292" source="187" target="49"/>
<edge id="293" source="187" target="499"/>
<edge id="295" source="189" target="235"/>
<edge id="296" source="189" target="324"/>
<edge id="297" source="189" target="469"/>
<edge id="298" source="190" target="566"/>
<edge id="299" source="191" target="417"/>
<edge id="300" source="191" target="629"/>
<edge id="301" source="192" target="235"/>
<edge id="302" source="193" target="174"/>
<edge id="303" source="194" target="628"/>
<edge id="304" source="195" target="235"/>
<edge id="305" source="196" target="316"/>
<edge id="306" source="197" target="404"/>
<edge id="307" source="197" target="79"/>
<edge id="308" source="197" target="302"/>
<edge id="309" source="197" target="145"/>
<edge id="310" source="197" target="207"/>
<edge id="311" source="198" target="226"/>
<edge id="312" source="199" target="245"/>
<edge id="313" source="200" target="368"/>
<edge id="314" source="200" target="426"/>
<edge id="315" source="201" target="316"/>
<edge id="316" source="201" target="562"/>
<edge id="317" source="202" target="319"/>
<edge id="318" source="202" target="488"/>
<edge id="319" source="202" target="439"/>
<edge id="320" source="202" target="287"/>
<edge id="321" source="203" target="530"/>
<edge id="322" source="204" target="57"/>
<edge id="323" source="205" target="515"/>
<edge id="324" source="205" target="534"/>
<edge id="325" source="206" target="315"/>
<edge id="326" source="207" target="417"/>
<edge id="327" source="207" target="291"/>
<edge id="328" source="207" target="273"/>
<edge id="329" source="208" target="174"/>
<edge id="330" source="208" target="240"/>
<edge id="331" source="208" target="193"/>
<edge id="332" source="209" target="566"/>
<edge id="333" source="210" target="566"/>
<edge id="334" source="211" target="235"/>
<edge id="335" source="212" target="235"/>
<edge id="336" source="213" target="628"/>
<edge id="337" source="213" target="79"/>
<edge id="338" source="213" target="191"/>
<edge id="339" source="213" target="302"/>
<edge id="340" source="213" target="145"/>
<edge id="341" source="213" target="207"/>
<edge id="342" source="213" target="475"/>
<edge id="343" source="213" target="84"/>
<edge id="344" source="214" target="57"/>
<edge id="345" source="215" target="497"/>
<edge id="346" source="216" target="715"/>
<edge id="347" source="217" target="495"/>
<edge id="348" source="218" target="244"/>
<edge id="349" source="219" target="515"/>
<edge id="350" source="219" target="559"/>
<edge id="351" source="220" target="229"/>
<edge id="352" source="221" target="628"/>
<edge id="353" source="221" target="344"/>
<edge id="354" source="222" target="268"/>
<edge id="355" source="222" target="116"/>
<edge id="357" source="224" target="515"/>
<edge id="358" source="225" target="417"/>
<edge id="359" source="225" target="191"/>
<edge id="361" source="226" target="611"/>
<edge id="362" source="227" target="158"/>
<edge id="365" source="230" target="530"/>
<edge id="366" source="231" target="158"/>
<edge id="367" source="231" target="55"/>
<edge id="368" source="232" target="315"/>
<edge id="369" source="232" target="257"/>
<edge id="370" source="232" target="597"/>
<edge id="371" source="232" target="201"/>
<edge id="372" source="233" target="235"/>
<edge id="373" source="233" target="128"/>
<edge id="374" source="234" target="226"/>
<edge id="376" source="235" target="611"/>
<edge id="377" source="236" target="611"/>
<edge id="378" source="236" target="138"/>
<edge id="379" source="236" target="59"/>
<edge id="380" source="237" target="57"/>
<edge id="382" source="239" target="319"/>
<edge id="383" source="239" target="163"/>
<edge id="384" source="239" target="150"/>
<edge id="385" source="240" target="527"/>
<edge id="386" source="240" target="260"/>
<edge id="388" source="242" target="319"/>
<edge id="389" source="242" target="224"/>
<edge id="390" source="242" target="150"/>
<edge id="391" source="243" target="628"/>
<edge id="392" source="243" target="95"/>
<edge id="393" source="243" target="35"/>
<edge id="396" source="246" target="566"/>
<edge id="398" source="248" target="16"/>
<edge id="399" source="248" target="450"/>
<edge id="400" source="248" target="631"/>
<edge id="401" source="248" target="564"/>
<edge id="402" source="249" target="235"/>
<edge id="403" source="249" target="43"/>
<edge id="404" source="249" target="251"/>
<edge id="405" source="249" target="693"/>
<edge id="406" source="250" target="70"/>
<edge id="407" source="251" target="611"/>
<edge id="408" source="252" target="515"/>
<edge id="409" source="253" target="502"/>
<edge id="411" source="255" target="674"/>
<edge id="412" source="256" target="515"/>
<edge id="413" source="257" target="316"/>
<edge id="414" source="258" target="566"/>
<edge id="415" source="258" target="209"/>
<edge id="416" source="259" target="274"/>
<edge id="417" source="260" target="527"/>
<edge id="418" source="261" target="417"/>
<edge id="419" source="261" target="439"/>
<edge id="420" source="262" target="533"/>
<edge id="421" source="262" target="40"/>
<edge id="422" source="262" target="361"/>
<edge id="423" source="262" target="171"/>
<edge id="424" source="263" target="235"/>
<edge id="425" source="263" target="128"/>
<edge id="426" source="263" target="249"/>
<edge id="428" source="265" target="235"/>
<edge id="429" source="266" target="235"/>
<edge id="430" source="266" target="662"/>
<edge id="431" source="267" target="628"/>
<edge id="434" source="270" target="316"/>
<edge id="435" source="270" target="407"/>
<edge id="436" source="270" target="196"/>
<edge id="437" source="271" target="226"/>
<edge id="438" source="271" target="323"/>
<edge id="439" source="272" target="515"/>
<edge id="440" source="273" target="113"/>
<edge id="442" source="275" target="566"/>
<edge id="443" source="276" target="235"/>
<edge id="445" source="278" target="726"/>
<edge id="446" source="279" target="326"/>
<edge id="447" source="280" target="604"/>
<edge id="448" source="281" target="611"/>
<edge id="449" source="282" target="286"/>
<edge id="450" source="283" target="595"/>
<edge id="451" source="284" target="235"/>
<edge id="452" source="285" target="235"/>
<edge id="453" source="285" target="214"/>
<edge id="454" source="285" target="699"/>
<edge id="455" source="285" target="704"/>
<edge id="457" source="286" target="83"/>
<edge id="458" source="287" target="515"/>
<edge id="459" source="288" target="547"/>
<edge id="460" source="289" target="664"/>
<edge id="461" source="290" target="316"/>
<edge id="462" source="291" target="417"/>
<edge id="463" source="291" target="393"/>
<edge id="464" source="292" target="628"/>
<edge id="465" source="293" target="527"/>
<edge id="466" source="293" target="99"/>
<edge id="467" source="294" target="83"/>
<edge id="469" source="296" target="316"/>
<edge id="470" source="297" target="624"/>
<edge id="471" source="298" target="530"/>
<edge id="472" source="298" target="193"/>
<edge id="473" source="298" target="438"/>
<edge id="474" source="298" target="329"/>
<edge id="475" source="298" target="564"/>
<edge id="476" source="299" target="16"/>
<edge id="477" source="300" target="530"/>
<edge id="479" source="302" target="417"/>
<edge id="480" source="302" target="105"/>
<edge id="481" source="303" target="715"/>
<edge id="482" source="304" target="683"/>
<edge id="483" source="304" target="94"/>
<edge id="485" source="306" target="626"/>
<edge id="486" source="307" target="388"/>
<edge id="487" source="307" target="569"/>
<edge id="488" source="308" target="319"/>
<edge id="489" source="309" target="297"/>
<edge id="490" source="310" target="277"/>
<edge id="491" source="311" target="502"/>
<edge id="492" source="311" target="726"/>
<edge id="493" source="311" target="739"/>
<edge id="494" source="312" target="628"/>
<edge id="495" source="312" target="194"/>
<edge id="496" source="313" target="144"/>
<edge id="497" source="314" target="174"/>
<edge id="500" source="317" target="527"/>
<edge id="501" source="317" target="395"/>
<edge id="502" source="317" target="204"/>
<edge id="503" source="318" target="297"/>
<edge id="505" source="320" target="497"/>
<edge id="506" source="321" target="326"/>
<edge id="507" source="322" target="566"/>
<edge id="508" source="323" target="611"/>
<edge id="509" source="324" target="144"/>
<edge id="510" source="325" target="144"/>
<edge id="512" source="327" target="158"/>
<edge id="513" source="328" target="611"/>
<edge id="514" source="328" target="498"/>
<edge id="515" source="329" target="157"/>
<edge id="516" source="329" target="533"/>
<edge id="517" source="329" target="731"/>
<edge id="518" source="330" target="316"/>
<edge id="520" source="332" target="344"/>
<edge id="521" source="332" target="64"/>
<edge id="522" source="333" target="316"/>
<edge id="523" source="334" target="188"/>
<edge id="524" source="334" target="430"/>
<edge id="525" source="335" target="144"/>
<edge id="526" source="336" target="454"/>
<edge id="527" source="337" target="264"/>
<edge id="528" source="338" target="674"/>
<edge id="529" source="339" target="319"/>
<edge id="530" source="339" target="364"/>
<edge id="531" source="339" target="518"/>
<edge id="533" source="341" target="703"/>
<edge id="535" source="343" target="146"/>
<edge id="536" source="344" target="221"/>
<edge id="537" source="345" target="100"/>
<edge id="538" source="346" target="319"/>
<edge id="539" source="346" target="65"/>
<edge id="540" source="346" target="150"/>
<edge id="541" source="346" target="205"/>
<edge id="542" source="346" target="416"/>
<edge id="543" source="346" target="627"/>
<edge id="544" source="347" target="286"/>
<edge id="545" source="348" target="739"/>
<edge id="547" source="350" target="100"/>
<edge id="548" source="351" target="527"/>
<edge id="549" source="352" target="49"/>
<edge id="550" source="353" target="117"/>
<edge id="551" source="354" target="530"/>
<edge id="552" source="354" target="193"/>
<edge id="553" source="355" target="527"/>
<edge id="554" source="356" target="349"/>
<edge id="555" source="356" target="647"/>
<edge id="556" source="357" target="515"/>
<edge id="557" source="358" target="244"/>
<edge id="558" source="359" target="515"/>
<edge id="559" source="360" target="582"/>
<edge id="560" source="361" target="533"/>
<edge id="561" source="362" target="417"/>
<edge id="562" source="362" target="439"/>
<edge id="563" source="363" target="527"/>
<edge id="564" source="364" target="515"/>
<edge id="565" source="365" target="157"/>
<edge id="566" source="366" target="664"/>
<edge id="567" source="367" target="57"/>
<edge id="568" source="368" target="146"/>
<edge id="569" source="369" target="226"/>
<edge id="570" source="370" target="235"/>
<edge id="571" source="370" target="265"/>
<edge id="572" source="370" target="662"/>
<edge id="573" source="371" target="349"/>
<edge id="574" source="371" target="306"/>
<edge id="575" source="372" target="286"/>
<edge id="576" source="373" target="628"/>
<edge id="577" source="373" target="309"/>
<edge id="578" source="373" target="453"/>
<edge id="579" source="374" target="566"/>
<edge id="580" source="375" target="368"/>
<edge id="581" source="376" target="389"/>
<edge id="582" source="376" target="617"/>
<edge id="583" source="377" target="683"/>
<edge id="584" source="378" target="235"/>
<edge id="585" source="378" target="265"/>
<edge id="586" source="379" target="515"/>
<edge id="587" source="380" target="286"/>
<edge id="588" source="381" target="703"/>
<edge id="589" source="382" target="515"/>
<edge id="591" source="384" target="168"/>
<edge id="592" source="385" target="502"/>
<edge id="593" source="386" target="739"/>
<edge id="594" source="387" target="315"/>
<edge id="595" source="388" target="470"/>
<edge id="597" source="389" target="38"/>
<edge id="598" source="390" target="188"/>
<edge id="599" source="391" target="264"/>
<edge id="601" source="393" target="417"/>
<edge id="602" source="394" target="264"/>
<edge id="603" source="395" target="57"/>
<edge id="604" source="396" target="417"/>
<edge id="605" source="396" target="642"/>
<edge id="606" source="397" target="315"/>
<edge id="607" source="398" target="530"/>
<edge id="608" source="398" target="77"/>
<edge id="609" source="399" target="245"/>
<edge id="610" source="400" target="245"/>
<edge id="611" source="401" target="628"/>
<edge id="612" source="402" target="559"/>
<edge id="613" source="403" target="226"/>
<edge id="615" source="404" target="628"/>
<edge id="616" source="405" target="497"/>
<edge id="617" source="406" target="595"/>
<edge id="618" source="407" target="316"/>
<edge id="619" source="408" target="226"/>
<edge id="620" source="408" target="85"/>
<edge id="621" source="408" target="415"/>
<edge id="622" source="409" target="628"/>
<edge id="623" source="409" target="531"/>
<edge id="624" source="409" target="236"/>
<edge id="625" source="409" target="598"/>
<edge id="626" source="409" target="738"/>
<edge id="627" source="410" target="158"/>
<edge id="628" source="411" target="703"/>
<edge id="629" source="412" target="349"/>
<edge id="630" source="412" target="463"/>
<edge id="631" source="413" target="188"/>
<edge id="632" source="414" target="264"/>
<edge id="633" source="415" target="226"/>
<edge id="634" source="416" target="515"/>
<edge id="635" source="416" target="416"/>
<edge id="636" source="416" target="636"/>
<edge id="638" source="418" target="316"/>
<edge id="639" source="419" target="83"/>
<edge id="640" source="420" target="453"/>
<edge id="641" source="420" target="20"/>
<edge id="642" source="420" target="474"/>
<edge id="643" source="420" target="32"/>
<edge id="644" source="421" target="566"/>
<edge id="645" source="422" target="515"/>
<edge id="646" source="423" target="628"/>
<edge id="647" source="424" target="703"/>
<edge id="648" source="425" target="113"/>
<edge id="649" source="426" target="368"/>
<edge id="650" source="427" target="316"/>
<edge id="651" source="427" target="147"/>
<edge id="652" source="428" target="527"/>
<edge id="653" source="429" target="124"/>
<edge id="654" source="430" target="264"/>
<edge id="655" source="431" target="319"/>
<edge id="656" source="431" target="205"/>
<edge id="657" source="431" target="627"/>
<edge id="658" source="432" target="566"/>
<edge id="659" source="433" target="158"/>
<edge id="660" source="433" target="640"/>
<edge id="661" source="434" target="226"/>
<edge id="662" source="434" target="612"/>
<edge id="663" source="434" target="237"/>
<edge id="664" source="434" target="395"/>
<edge id="665" source="434" target="186"/>
<edge id="666" source="434" target="725"/>
<edge id="667" source="434" target="9"/>
<edge id="668" source="435" target="683"/>
<edge id="669" source="435" target="697"/>
<edge id="670" source="436" target="158"/>
<edge id="671" source="437" target="168"/>
<edge id="672" source="438" target="157"/>
<edge id="673" source="439" target="626"/>
<edge id="674" source="439" target="183"/>
<edge id="675" source="439" target="646"/>
<edge id="676" source="440" target="683"/>
<edge id="677" source="441" target="703"/>
<edge id="678" source="442" target="515"/>
<edge id="679" source="443" target="739"/>
<edge id="680" source="444" target="582"/>
<edge id="681" source="445" target="158"/>
<edge id="682" source="446" target="515"/>
<edge id="683" source="447" target="235"/>
<edge id="684" source="447" target="265"/>
<edge id="685" source="447" target="192"/>
<edge id="686" source="448" target="245"/>
<edge id="687" source="449" target="566"/>
<edge id="688" source="450" target="174"/>
<edge id="689" source="450" target="633"/>
<edge id="690" source="451" target="566"/>
<edge id="691" source="452" target="628"/>
<edge id="692" source="453" target="628"/>
<edge id="693" source="454" target="134"/>
<edge id="694" source="455" target="235"/>
<edge id="695" source="456" target="495"/>
<edge id="696" source="457" target="530"/>
<edge id="697" source="457" target="614"/>
<edge id="698" source="458" target="611"/>
<edge id="699" source="459" target="226"/>
<edge id="700" source="460" target="316"/>
<edge id="701" source="461" target="264"/>
<edge id="702" source="462" target="330"/>
<edge id="703" source="463" target="626"/>
<edge id="704" source="464" target="515"/>
<edge id="705" source="465" target="158"/>
<edge id="706" source="466" target="527"/>
<edge id="707" source="466" target="711"/>
<edge id="708" source="467" target="157"/>
<edge id="709" source="468" target="235"/>
<edge id="710" source="468" target="237"/>
<edge id="711" source="468" target="47"/>
<edge id="712" source="469" target="235"/>
<edge id="713" source="470" target="245"/>
<edge id="714" source="470" target="132"/>
<edge id="715" source="470" target="388"/>
<edge id="716" source="471" target="703"/>
<edge id="717" source="472" target="527"/>
<edge id="718" source="473" target="124"/>
<edge id="719" source="474" target="628"/>
<edge id="720" source="474" target="221"/>
<edge id="721" source="475" target="113"/>
<edge id="722" source="475" target="653"/>
<edge id="723" source="476" target="174"/>
<edge id="724" source="477" target="566"/>
<edge id="725" source="478" target="286"/>
<edge id="727" source="480" target="113"/>
<edge id="728" source="481" target="515"/>
<edge id="729" source="482" target="146"/>
<edge id="730" source="483" target="235"/>
<edge id="731" source="484" target="315"/>
<edge id="732" source="485" target="113"/>
<edge id="733" source="486" target="316"/>
<edge id="734" source="487" target="527"/>
<edge id="735" source="487" target="706"/>
<edge id="736" source="487" target="29"/>
<edge id="737" source="488" target="515"/>
<edge id="738" source="488" target="481"/>
<edge id="739" source="488" target="359"/>
<edge id="740" source="489" target="188"/>
<edge id="741" source="489" target="413"/>
<edge id="742" source="489" target="126"/>
<edge id="743" source="489" target="390"/>
<edge id="744" source="490" target="389"/>
<edge id="745" source="491" target="245"/>
<edge id="747" source="493" target="703"/>
<edge id="748" source="494" target="316"/>
<edge id="749" source="495" target="316"/>
<edge id="750" source="496" target="566"/>
<edge id="752" source="498" target="611"/>
<edge id="753" source="499" target="49"/>
<edge id="754" source="500" target="174"/>
<edge id="755" source="500" target="131"/>
<edge id="756" source="500" target="116"/>
<edge id="757" source="500" target="702"/>
<edge id="758" source="501" target="315"/>
<edge id="760" source="503" target="235"/>
<edge id="761" source="504" target="315"/>
<edge id="762" source="505" target="530"/>
<edge id="763" source="506" target="316"/>
<edge id="764" source="507" target="245"/>
<edge id="765" source="508" target="315"/>
<edge id="766" source="508" target="666"/>
<edge id="767" source="509" target="611"/>
<edge id="768" source="510" target="383"/>
<edge id="769" source="511" target="226"/>
<edge id="770" source="512" target="235"/>
<edge id="771" source="513" target="726"/>
<edge id="772" source="514" target="319"/>
<edge id="774" source="515" target="703"/>
<edge id="775" source="516" target="316"/>
<edge id="776" source="517" target="530"/>
<edge id="777" source="518" target="515"/>
<edge id="778" source="518" target="359"/>
<edge id="779" source="519" target="330"/>
<edge id="780" source="520" target="235"/>
<edge id="781" source="521" target="527"/>
<edge id="782" source="522" target="628"/>
<edge id="783" source="523" target="16"/>
<edge id="784" source="524" target="502"/>
<edge id="785" source="524" target="726"/>
<edge id="786" source="524" target="739"/>
<edge id="787" source="525" target="49"/>
<edge id="788" source="526" target="158"/>
<edge id="790" source="528" target="235"/>
<edge id="791" source="528" target="237"/>
<edge id="792" source="528" target="528"/>
<edge id="793" source="529" target="342"/>
<edge id="795" source="530" target="286"/>
<edge id="796" source="531" target="611"/>
<edge id="797" source="531" target="612"/>
<edge id="798" source="532" target="417"/>
<edge id="799" source="533" target="157"/>
<edge id="800" source="534" target="515"/>
<edge id="801" source="535" target="515"/>
<edge id="802" source="536" target="515"/>
<edge id="803" source="537" target="188"/>
<edge id="804" source="538" target="277"/>
<edge id="805" source="539" target="502"/>
<edge id="806" source="540" target="674"/>
<edge id="807" source="541" target="515"/>
<edge id="808" source="541" target="559"/>
<edge id="809" source="542" target="146"/>
<edge id="810" source="543" target="319"/>
<edge id="811" source="543" target="65"/>
<edge id="812" source="543" target="150"/>
<edge id="813" source="544" target="235"/>
<edge id="814" source="545" target="599"/>
<edge id="815" source="545" target="485"/>
<edge id="816" source="545" target="427"/>
<edge id="817" source="546" target="247"/>
<edge id="818" source="546" target="187"/>
<edge id="819" source="546" target="258"/>
<edge id="821" source="547" target="157"/>
<edge id="822" source="548" target="527"/>
<edge id="823" source="548" target="115"/>
<edge id="825" source="550" target="527"/>
<edge id="826" source="551" target="226"/>
<edge id="827" source="552" target="228"/>
<edge id="829" source="554" target="502"/>
<edge id="830" source="554" target="311"/>
<edge id="831" source="554" target="524"/>
<edge id="832" source="555" target="168"/>
<edge id="833" source="556" target="683"/>
<edge id="834" source="557" target="628"/>
<edge id="835" source="558" target="530"/>
<edge id="838" source="561" target="244"/>
<edge id="839" source="562" target="113"/>
<edge id="840" source="563" target="146"/>
<edge id="841" source="564" target="157"/>
<edge id="842" source="564" target="467"/>
<edge id="843" source="564" target="106"/>
<edge id="844" source="564" target="620"/>
<edge id="845" source="565" target="664"/>
<edge id="847" source="567" target="94"/>
<edge id="849" source="569" target="245"/>
<edge id="850" source="570" target="168"/>
<edge id="852" source="572" target="515"/>
<edge id="853" source="572" target="150"/>
<edge id="854" source="572" target="237"/>
<edge id="855" source="572" target="630"/>
<edge id="856" source="572" target="205"/>
<edge id="857" source="572" target="204"/>
<edge id="858" source="572" target="488"/>
<edge id="859" source="572" target="605"/>
<edge id="860" source="572" target="518"/>
<edge id="861" source="572" target="118"/>
<edge id="862" source="573" target="174"/>
<edge id="863" source="574" target="611"/>
<edge id="864" source="575" target="515"/>
<edge id="865" source="576" target="235"/>
<edge id="866" source="577" target="174"/>
<edge id="867" source="577" target="684"/>
<edge id="868" source="578" target="162"/>
<edge id="869" source="579" target="515"/>
<edge id="870" source="579" target="626"/>
<edge id="872" source="581" target="566"/>
<edge id="873" source="582" target="188"/>
<edge id="874" source="583" target="316"/>
<edge id="875" source="583" target="296"/>
<edge id="876" source="584" target="491"/>
<edge id="877" source="584" target="569"/>
<edge id="878" source="585" target="316"/>
<edge id="879" source="586" target="264"/>
<edge id="880" source="587" target="245"/>
<edge id="881" source="588" target="527"/>
<edge id="882" source="589" target="703"/>
<edge id="883" source="590" target="274"/>
<edge id="884" source="591" target="319"/>
<edge id="885" source="591" target="488"/>
<edge id="886" source="591" target="439"/>
<edge id="887" source="591" target="442"/>
<edge id="888" source="592" target="297"/>
<edge id="889" source="593" target="368"/>
<edge id="890" source="594" target="683"/>
<edge id="892" source="596" target="247"/>
<edge id="893" source="596" target="430"/>
<edge id="894" source="596" target="187"/>
<edge id="895" source="596" target="258"/>
<edge id="896" source="597" target="316"/>
<edge id="897" source="597" target="480"/>
<edge id="898" source="598" target="611"/>
<edge id="899" source="598" target="281"/>
<edge id="900" source="599" target="87"/>
<edge id="901" source="600" target="168"/>
<edge id="902" source="601" target="515"/>
<edge id="903" source="602" target="107"/>
<edge id="904" source="602" target="45"/>
<edge id="905" source="603" target="316"/>
<edge id="906" source="604" target="610"/>
<edge id="907" source="605" target="57"/>
<edge id="908" source="606" target="502"/>
<edge id="909" source="607" target="157"/>
<edge id="910" source="608" target="566"/>
<edge id="911" source="609" target="566"/>
<edge id="912" source="610" target="683"/>
<edge id="913" source="610" target="604"/>
<edge id="915" source="611" target="674"/>
<edge id="916" source="611" target="559"/>
<edge id="917" source="612" target="611"/>
<edge id="918" source="613" target="264"/>
<edge id="919" source="614" target="530"/>
<edge id="920" source="615" target="316"/>
<edge id="921" source="616" target="330"/>
<edge id="922" source="617" target="530"/>
<edge id="923" source="617" target="430"/>
<edge id="924" source="617" target="433"/>
<edge id="925" source="617" target="208"/>
<edge id="926" source="617" target="450"/>
<edge id="927" source="617" target="207"/>
<edge id="928" source="617" target="88"/>
<edge id="929" source="618" target="286"/>
<edge id="930" source="619" target="316"/>
<edge id="931" source="620" target="157"/>
<edge id="932" source="620" target="329"/>
<edge id="933" source="621" target="683"/>
<edge id="934" source="622" target="417"/>
<edge id="935" source="623" target="117"/>
<edge id="936" source="623" target="430"/>
<edge id="938" source="625" target="316"/>
<edge id="939" source="625" target="460"/>
<edge id="941" source="627" target="515"/>
<edge id="943" source="628" target="297"/>
<edge id="944" source="629" target="38"/>
<edge id="945" source="630" target="57"/>
<edge id="946" source="631" target="547"/>
<edge id="947" source="631" target="329"/>
<edge id="948" source="632" target="326"/>
<edge id="949" source="633" target="527"/>
<edge id="950" source="634" target="417"/>
<edge id="951" source="635" target="495"/>
<edge id="952" source="636" target="515"/>
<edge id="953" source="637" target="247"/>
<edge id="954" source="638" target="113"/>
<edge id="955" source="639" target="316"/>
<edge id="956" source="640" target="158"/>
<edge id="957" source="641" target="229"/>
<edge id="958" source="642" target="38"/>
<edge id="959" source="643" target="264"/>
<edge id="960" source="644" target="158"/>
<edge id="961" source="645" target="515"/>
<edge id="962" source="646" target="626"/>
<edge id="963" source="647" target="626"/>
<edge id="964" source="648" target="235"/>
<edge id="965" source="649" target="235"/>
<edge id="966" source="649" target="265"/>
<edge id="967" source="649" target="704"/>
<edge id="968" source="650" target="157"/>
<edge id="969" source="650" target="13"/>
<edge id="970" source="651" target="157"/>
<edge id="971" source="652" target="277"/>
<edge id="972" source="653" target="113"/>
<edge id="973" source="654" target="124"/>
<edge id="974" source="655" target="703"/>
<edge id="975" source="656" target="235"/>
<edge id="976" source="657" target="245"/>
<edge id="977" source="658" target="611"/>
<edge id="978" source="658" target="186"/>
<edge id="979" source="658" target="725"/>
<edge id="980" source="658" target="9"/>
<edge id="981" source="659" target="703"/>
<edge id="982" source="660" target="527"/>
<edge id="983" source="661" target="235"/>
<edge id="984" source="661" target="237"/>
<edge id="985" source="661" target="192"/>
<edge id="986" source="662" target="235"/>
<edge id="987" source="663" target="515"/>
<edge id="988" source="663" target="164"/>
<edge id="989" source="663" target="402"/>
<edge id="991" source="665" target="157"/>
<edge id="992" source="665" target="106"/>
<edge id="993" source="666" target="316"/>
<edge id="994" source="667" target="715"/>
<edge id="995" source="668" target="157"/>
<edge id="996" source="669" target="158"/>
<edge id="997" source="670" target="49"/>
<edge id="998" source="671" target="235"/>
<edge id="999" source="672" target="286"/>
<edge id="1000" source="673" target="188"/>
<edge id="1002" source="674" target="228"/>
<edge id="1003" source="675" target="715"/>
<edge id="1004" source="676" target="235"/>
<edge id="1005" source="676" target="237"/>
<edge id="1006" source="676" target="662"/>
<edge id="1007" source="677" target="157"/>
<edge id="1008" source="678" target="417"/>
<edge id="1009" source="679" target="739"/>
<edge id="1010" source="680" target="316"/>
<edge id="1011" source="680" target="330"/>
<edge id="1012" source="680" target="495"/>
<edge id="1014" source="682" target="502"/>
<edge id="1016" source="684" target="174"/>
<edge id="1017" source="685" target="527"/>
<edge id="1018" source="685" target="115"/>
<edge id="1021" source="688" target="235"/>
<edge id="1022" source="688" target="265"/>
<edge id="1023" source="688" target="23"/>
<edge id="1024" source="689" target="628"/>
<edge id="1025" source="690" target="527"/>
<edge id="1026" source="690" target="487"/>
<edge id="1027" source="690" target="99"/>
<edge id="1028" source="690" target="6"/>
<edge id="1029" source="691" target="417"/>
<edge id="1030" source="692" target="146"/>
<edge id="1031" source="692" target="677"/>
<edge id="1032" source="692" target="368"/>
<edge id="1033" source="692" target="329"/>
<edge id="1034" source="692" target="467"/>
<edge id="1035" source="692" target="665"/>
<edge id="1036" source="692" target="620"/>
<edge id="1037" source="693" target="235"/>
<edge id="1038" source="694" target="626"/>
<edge id="1039" source="695" target="70"/>
<edge id="1040" source="696" target="245"/>
<edge id="1041" source="696" target="507"/>
<edge id="1042" source="697" target="435"/>
<edge id="1043" source="698" target="331"/>
<edge id="1044" source="699" target="235"/>
<edge id="1045" source="700" target="264"/>
<edge id="1046" source="701" target="274"/>
<edge id="1047" source="702" target="144"/>
<edge id="1049" source="703" target="57"/>
<edge id="1050" source="703" target="144"/>
<edge id="1051" source="704" target="235"/>
<edge id="1052" source="704" target="699"/>
<edge id="1053" source="705" target="582"/>
<edge id="1054" source="706" target="174"/>
<edge id="1055" source="707" target="582"/>
<edge id="1056" source="708" target="566"/>
<edge id="1057" source="709" target="316"/>
<edge id="1058" source="710" target="235"/>
<edge id="1059" source="710" target="23"/>
<edge id="1060" source="711" target="527"/>
<edge id="1061" source="711" target="99"/>
<edge id="1062" source="712" target="530"/>
<edge id="1063" source="713" target="697"/>
<edge id="1064" source="713" target="26"/>
<edge id="1065" source="713" target="134"/>
<edge id="1066" source="714" target="319"/>
<edge id="1067" source="714" target="205"/>
<edge id="1068" source="714" target="627"/>
<edge id="1069" source="714" target="222"/>
<edge id="1071" source="715" target="611"/>
<edge id="1072" source="716" target="174"/>
<edge id="1073" source="717" target="628"/>
<edge id="1074" source="718" target="235"/>
<edge id="1075" source="719" target="286"/>
<edge id="1076" source="720" target="158"/>
<edge id="1077" source="721" target="715"/>
<edge id="1078" source="722" target="492"/>
<edge id="1080" source="724" target="316"/>
<edge id="1081" source="724" target="330"/>
<edge id="1082" source="725" target="57"/>
<edge id="1083" source="726" target="502"/>
<edge id="1084" source="727" target="297"/>
<edge id="1085" source="728" target="515"/>
<edge id="1086" source="729" target="316"/>
<edge id="1088" source="731" target="533"/>
<edge id="1089" source="732" target="527"/>
<edge id="1090" source="732" target="711"/>
<edge id="1091" source="733" target="70"/>
<edge id="1092" source="734" target="497"/>
<edge id="1093" source="735" target="417"/>
<edge id="1094" source="736" target="683"/>
<edge id="1095" source="737" target="316"/>
<edge id="1096" source="738" target="611"/>
<edge id="1097" source="739" target="502"/>
<edge id="1098" source="740" target="124"/>
<edge id="1099" source="741" target="389"/>
<edge id="1100" source="742" target="319"/>
<edge id="1101" source="742" target="205"/>
<edge id="1102" source="743" target="527"/>
<edge id="1103" source="744" target="113"/>
<edge id="1104" source="745" target="264"/>
<edge id="1105" source="746" target="319"/>
<edge id="1106" source="746" target="379"/>
<edge id="1107" source="747" target="274"/>
<edge id="1108" source="748" target="315"/>
</edges>
</graph>
</gexf>
